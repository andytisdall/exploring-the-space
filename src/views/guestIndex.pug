doctype html
html(lang="en")
head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(rel="preconnect" href="https://fonts.gstatic.com")
    link(href="https://fonts.googleapis.com/css2?family=Fira+Sans&display=swap" rel="stylesheet")
    style
        include ../static/style.css
    title Exploring the Space
body
    div(class='upload-container hidden')
        div(class='upload-progress')
            div(class='upload-image')
                p Uploading...
                img(class='windmill' src='windmill.gif')
    div(id='player-spot' class='hidden')
   
    div(class='container')
        if errorMessage
            div(class='error') #{errorMessage}
        div(class='playbar')
            div(class='playbar-header')
                p(id='currentsongheader' class='playbar-title')                
                div(class='playbar-info')
                    p(id='currentversion')
                    p(id='currentdate')         
            div(class='playslidercontainer')
                div(class='playslidertime' id='playcurrenttime')
                input(type="range" min="0" max="1000" value="0" class='playslider' id="playslider")
                div(class='playslidertime' id='playtotaltime') 
        
        div(class="marqee header")            
            h1(id="band-name") #{band.name}
            img(class='pausebutton hidden' src='pause.svg' id='pause')
            img(class='unpause hidden' src='play.svg' id='unpause')
            div(class="slidecontainer")
                input(type="range" min="0" max="100" value="50" class="master-volume" id="mastervol")

            
        hr

        each tier in band.tiers
            div(class="row tier" id=tier.id)
                div(class="marqee tier-info")
                    div(class='tier-name')
                        img(class='arrow' src='right-arrow.svg' id=('arrow-' + tier.id))
                        h2 #{tier.name}
                    div(class="tier-count")
                        div(class='song-count') #{tier.trackList.length} songs
                        div(class='song-count' id='tiertime'+tier.id)
                
                hr
                div(class='titlecontainer hidden' id=('title-' + tier.id))
                    each title in tier.trackList
                        div(class="row title" id=title.id)
                            div(class='title-margin')
                                div(class="marqee")
                                    div(class='row-name')
                                        img(class='arrow' src='right-arrow.svg' id=('arrow-' + title.id))
                                        div(class='name-spot' id='name-spot-'+title.id)
                                            h3 #{title.title}
                                    if title.versions.length > 0
                                            - const thisVersion = title.versions.find(v => v.current)
                                            if thisVersion.songs.length > 0
                                                - const thisSong = thisVersion.songs.find(s => s.latest)
                                                div(class='playcontainer')                 
                                                    - const displayDate = moment.utc(thisSong.date).format('MM/DD/YY')
                                                    - const minutes = Math.floor(thisSong.duration / 60)
                                                    - const seconds = Math.floor(thisSong.duration % 60) < 10 ? '0' + Math.floor(thisSong.duration % 60) : Math.floor(thisSong.duration % 60)
                                                    - const displayTime = `${minutes}:${seconds}`
                                                    div(class='hidden' id='mp3Id-' + title.id)  #{thisSong.id}
                                                    div(class='songtime' id='duration-' + title.id + '-' + tier.id) #{displayTime}
                                                    div(class='playbutton' id=thisSong.id + '-' + tier.id)
                                                        img(src='play.svg' class='playicon')
                                                    div(class='title-display')
                                                        p #{thisVersion.name}
                                                        p #{displayDate}
                                                div(class='download')
                                                    a(href="/audio/download/" + thisSong.id + ".mp3" download=title.title+'-'+moment.utc(thisSong.date).format('MM-DD-yy') +'.mp3')
                                                        img(src="download.svg")
                                    
    
                                div(class='versioncontainer hidden' id=('version-' + title.id))
                                    if title.versions.length > 0 
                                        div(class='detail-box')
                                            div(class='detail-content')
                                                div(class='detail-header')
                                                    - const thisVersion = title.versions.find(v => v.current)
                                                    - const versionList = title.versions.filter(v => v.current !== true).map(v => [v.name, v.id])
                                                    
                                                    h5 Version:       
                                                    div(class='dropdown')
                                                        button(class='dropbtn' id='version-name-'+title.id) #{thisVersion.name}
                                                        div(class='dropdown-content')
                                                            each version in versionList
                                                                - let short = version[0].length > 14 ? version[0].slice(0,20) + '..' : version[0]
                                                                div(class='dropdown-link change-version' id=thisVersion.id + '-' + version[1]) #{short}

                                                div(class='detail-notes') #{thisVersion.notes}   
                                            
                                            

                                        if thisVersion.songs.length > 0     
                                            div(class="detail-box"  id=('song-' + thisVersion.id))
                                                div(class='detail-content')
                                                    div(class='detail-header')
                                                    
                                                        - const thisSong = thisVersion.songs.find(s => s.latest)
                                                        - const displayDate = moment.utc(thisSong.date).format('MM/DD/yy')
                                                        - const songDates = thisVersion.songs.filter(s=> s.latest !== true).map(s => moment.utc(s.date).format('YY/MM/DD') + s.id).sort().reverse()
                                                        - const formattedSongDates = songDates.map(d => d[3]+d[4]+'/'+d[6]+d[7]+'/'+d[0]+d[1] + d.slice(8))

                                                        h5 Date:
                                                        div(class='dropdown')
                                                            button(class='dropbtn' id='bounce-date-'+title.id)  #{displayDate}
                                                            div(class='dropdown-content')
                                                                each date in formattedSongDates
                                                                    - let dateId = date.slice(8)
                                                                    - let dateDisplay = date.slice(0,8)
                                                                    div(class='dropdown-link change-song' id=thisSong.id + '-' + dateId) #{dateDisplay}

                                                    div(class='detail-notes') #{thisSong.comments}    
                                                
                                        else
                                            div(class='song-con')
                                                div(class='nosong')
                                                    div(class='song')
                                                        p(class='empty') There are no bounces for this version.
                                                        
                                    else
                                        div(class='noversion')
                                            p(class='empty') No versions of this title.
                                            
                    else
                        p(class='row notitle empty') No songs in this tier.
        else
            p(class='row tier') There are no tiers.
    //- div(class='playlist-container')
    //-     each playlist in playlists
    script(src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js" integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ==" crossorigin="anonymous")
    script
        include ../static/index.js