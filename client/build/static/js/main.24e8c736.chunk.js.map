{"version":3,"sources":["apis/greenhouse.js","actions/types.js","history.js","actions/index.js","components/Error.js","components/AddButton.js","components/Modal.js","components/DeleteButton.js","components/requireAuth.js","components/Bounce.js","components/Version.js","components/PlayContainer.js","components/Title.js","components/Tier.js","components/PlaylistSong.js","components/Playlist.js","components/Main.js","components/AudioDisplay.js","components/Header.js","components/User.js","components/UserForm.js","components/SignIn.js","components/SignUp.js","components/Home.js","components/Help.js","components/App.js","reducers/authReducer.js","reducers/audioReducer.js","reducers/index.js","reducers/tierReducer.js","reducers/titleReducer.js","reducers/versionReducer.js","reducers/bounceReducer.js","reducers/playlistReducer.js","reducers/playlistSongReducer.js","reducers/bandReducer.js","reducers/errorReducer.js","index.js"],"names":["url","instance","axios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","err","Promise","reject","SIGN_IN","SIGN_OUT","ERROR","FETCH_TIERS","FETCH_PLAYLISTSONGS","FETCH_PLAYLIST","FETCH_PLAYLISTS","FETCH_BAND","FETCH_BANDS","FETCH_TITLES","FETCH_VERSIONS","FETCH_BOUNCES","CREATE_TIER","CREATE_PLAYLISTSONG","CREATE_TITLE","CREATE_PLAYLIST","CREATE_VERSION","CREATE_BOUNCE","CREATE_BAND","EDIT_TIER","EDIT_PLAYLIST","EDIT_PLAYLISTSONG","EDIT_TITLE","EDIT_VERSION","EDIT_BOUNCE","EDIT_BAND","DELETE_TIER","DELETE_PLAYLIST","DELETE_PLAYLISTSONG","DELETE_TITLE","DELETE_VERSION","DELETE_BOUNCE","DELETE_BAND","PLAY_AUDIO","PAUSE_AUDIO","QUEUE_SONGS","NEXT_SONG","CHANGE_VOLUME","INITIALIZE_AUDIO","SELECT_VERSION","SELECT_BOUNCE","createBrowserHistory","errorHandler","message","response","data","error","console","log","type","payload","signOut","removeItem","history","push","throwError","fetchBands","dispatch","a","greenhouse","get","fetchVersions","titleId","fetchBounces","versionId","createTier","formValues","getState","currentBand","bands","post","id","createPlaylistSong","playlistsong","playlist","playlistId","editVersion","thisVersion","versions","current","patch","parentTitle","titles","versionList","map","oldCurrent","find","v","_","pick","editBounce","bounceId","thisBounce","bounces","latest","file","length","reader","FileReader","onload","event","window","AudioContext","webkitAudioContext","decodeAudioData","target","result","buffer","key","duration","parseInt","formObject","formData","FormData","append","parentVersion","bounceList","oldLatest","b","onerror","readAsArrayBuffer","deleteTier","tierId","trackList","forEach","deleteTitle","deleteVersion","playlists","Object","values","playlistSongs","filter","pls","title","pl","songs","includes","deletePlaylistSong","tier","remainingVersions","newCurrent","selectVersion","deleteBounce","version","remainingBounces","newLatest","selectBounce","bounce","playlistSongId","playAudio","connect","state","className","onClick","AddButton","props","boxVisible","selectedOption","blockSpaceBarPress","e","stopPropagation","bodyClick","ref","contains","setState","showOptions","field","options","option","value","display","onDrop","input","files","onChange","addClass","meta","touched","autoFocus","required","undefined","showFields","fields","i","comp","label","Field","name","component","validate","submitForm","onSubmit","reset","showBox","handleSubmit","click","React","createRef","prevProps","prevState","this","document","addEventListener","capture","removeEventListener","src","image","Component","reduxForm","form","Modal","querySelector","classList","add","remove","ReactDOM","createPortal","onDismiss","content","actions","DeleteButton","displayName","useState","visible","setVisible","ChildComponent","ComposedComponent","authorized","handleUpdate","checkAuth","user","auth","createBounce","requireAuth","selectedBounce","setSelectedBounce","uploadActive","setUploadActive","useEffect","displayDate","date","moment","utc","format","renderBounceList","sort","onEditSubmit","latestTag","bounceCount","count","comments","onAddSubmit","initialValues","renderAddButton","enableReinitialize","renderEditButton","renderDeleteButton","createVersion","selectedVersion","setSelectedVersion","setBounceList","versionCount","notes","renderBounces","queueSongs","song","songObject","audio","parent","queuePlaylistSongs","position","baseUrl","parentType","time","minutes","Math","floor","seconds","displayTime","href","encodeURIComponent","download","band","tiers","editTitle","changeTier","move","currentTier","new","old","getTime","findLatest","expand","setExpand","setVersionList","setSong","versionToSelect","versionIds","bounceToSelect","arrow","currentSong","currentClass","open","renderPlayContainer","playlistOptions","tierOptions","t","unshift","onAddToPlaylist","renderButtons","fetchTitles","editTier","createTitle","titlesToRender","setTitlesToRender","times","setTimes","orderBy","setOrderBy","orderedTitles","useRef","Date","track","total","reduce","prev","cur","renderTotalTime","tierList","titleList","renderTitles","editPlaylistSong","newSong","playSong","setPlaySong","otherSongs","s","otherVersions","otherBounces","editOptions","fetchPlaylistSongs","deletePlaylist","playlistList","setPlaylistList","songsToRender","setSongsToRender","playlistsToShow","editPlaylist","fetchTiers","bandId","fetchPlaylists","createPlaylist","setTierList","playbarActive","renderTierAddButton","renderPlaylistAddButton","AudioDisplay","volume","sliderPosition","updateSlider","currentTime","formatTime","isNaN","setSpaceBarToPlay","code","preventDefault","pause","play","audioError","nextSong","pauseAudio","onSliderChange","onPauseButton","Audio","scrolled","scroll","scrollX","scrollY","wrapUrl","initializeAudio","min","max","onInput","allTitles","indexOf","allSongs","index","currentUser","signedIn","isSignedIn","fetchBand","bandName","changeVolume","match","menu","params","clickToDismiss","to","Main","createBand","editBand","deleteBand","username","bandList","renderBands","UserForm","renderInput","autoComplete","defaultValue","signIn","setItem","signUp","Home","Help","fetchUser","errClass","path","exact","SignIn","SignUp","render","routeProps","Header","INITIAL_STATE","initialState","combineReducers","formReducer","action","mapKeys","oldPosition","newPosition","changedPositions","item","pos","changePosition","omit","addToTier","newTier","oldTier","deleteFromTier","newTrackList","versionTitle","bounceTitle","addToTitle","deleteFromTitle","newVersionList","addToVersion","deleteFromVersion","newBounceList","p","addToPlaylist","deleteFromPlaylist","newSongList","newTiers","currentBandP","bandP","newPlaylists","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"sNAEMA,EAAM,CAGRA,QAAc,uCAKZC,E,OAAWC,EAAMC,OAAOH,GAE9BC,EAASG,aAAaC,QAAQC,KAC1B,SAACC,GACG,IAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,IACAD,EAAOI,QAAQC,cAAgBJ,GAE5BD,KAEX,SAACM,GACG,OAAOC,QAAQC,OAAOF,MAMfZ,QC3BFe,EAAU,UACVC,EAAW,WAEXC,EAAQ,QAERC,EAAc,cACdC,EAAsB,sBACtBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAa,aACbC,EAAc,cACdC,EAAe,eACfC,EAAiB,iBACjBC,EAAgB,gBAMhBC,EAAc,cACdC,EAAsB,sBACtBC,EAAe,eACfC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAc,cAEdC,EAAY,YACZC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAY,YAEZC,EAAc,cACdC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAe,eACfC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAc,cAEdC,EAAa,aACbC,EAAc,cACdC,GAAc,cACdC,GAAY,YACZC,GAAgB,gBAChBC,GAAmB,mBAEnBC,GAAiB,iBACjBC,GAAgB,gB,SCjDdC,kB,mBC4CTC,GAAe,SAAA7C,GACjB,IAAI8C,EAOJ,OALIA,EADA9C,EAAI+C,SACM/C,EAAI+C,SAASC,KAAKC,MAElBjD,EAAI8C,QAElBI,QAAQC,IAAInD,GACL,CAAEoD,KAAM/C,EAAOgD,QAASP,IAetBQ,GAAU,WAGnB,OAFA1D,aAAa2D,WAAW,SACxBC,GAAQC,KAAK,KACN,CAAEL,KAAMhD,IAcNsD,GAAa,SAAAZ,GACtB,MAAO,CAAEM,KAAM/C,EAAOgD,QAASP,IAyBtBa,GAAa,yDAAM,WAAOC,GAAP,eAAAC,EAAA,+EAEDC,EAAWC,IAAX,UAFC,OAElBhB,EAFkB,OAGxBa,EAAS,CAAER,KAAMzC,EAAa0C,QAASN,EAASC,OAHxB,gDAKxBY,EAASf,GAAa,EAAD,KALG,yDAAN,uDA2BbmB,GAAgB,SAAAC,GAAO,8CAAI,WAAOL,GAAP,eAAAC,EAAA,+EAETC,EAAWC,IAAX,oBAA4BE,IAFnB,OAE1BlB,EAF0B,OAGhCa,EAAS,CAAER,KAAMvC,EAAgBwC,QAASN,EAASC,OAHnB,gDAKhCY,EAASf,GAAa,EAAD,KALW,yDAAJ,uDASvBqB,GAAe,SAAAC,GAAS,8CAAI,WAAOP,GAAP,eAAAC,EAAA,+EAEVC,EAAWC,IAAX,mBAA2BI,IAFjB,OAE3BpB,EAF2B,OAGjCa,EAAS,CAAER,KAAMtC,EAAeuC,QAASN,EAASC,OAHjB,gDAKjCY,EAASf,GAAa,EAAD,KALY,yDAAJ,uDAsCxBuB,GAAa,SAAAC,GAAU,8CAAI,WAAOT,EAAUU,GAAjB,iBAAAT,EAAA,sEAExBU,EAAgBD,IAAWE,MAA3BD,YAFwB,SAGTT,EAAWW,KAC9B,SADmB,2BAEdJ,GAFc,IAEFE,YAAaA,EAAYG,MALd,OAG1B3B,EAH0B,OAOhCa,EAAS,CAAER,KAAMrC,EAAasC,QAASN,EAASC,OAPhB,gDAShCY,EAASf,GAAa,EAAD,KATW,yDAAJ,yDAsJvB8B,GAAqB,SAAAN,GAAU,8CAAI,WAAOT,EAAUU,GAAjB,iBAAAT,EAAA,sEAEhCU,EAAgBD,IAAWE,MAA3BD,YAFgC,SAGjBT,EAAWW,KAC9B,iBADmB,2BAGZJ,GAHY,IAIfE,YAAaA,EAAYG,MAPO,OAGlC3B,EAHkC,OAUxCa,EAAS,CAAER,KAAMpC,EAAqBqC,QAAS,CAAEuB,aAAc7B,EAASC,KAAM6B,SAAUR,EAAWS,cAV3D,gDAYxClB,EAASf,GAAa,EAAD,KAZmB,yDAAJ,yDAoD/BkC,GAAc,SAAdA,EAAeV,EAAYF,EAAWF,GAAxB,8CAAoC,WAAOL,EAAUU,GAAjB,yBAAAT,EAAA,sEAE/CU,EAAgBD,IAAWE,MAA3BD,aACFS,EAAcV,IAAWW,SAASd,IACxBe,UACZb,EAAWa,SAAU,GAL8B,SAOhCpB,EAAWqB,MAAX,oBACNhB,GADM,2BAEdE,GAFc,IAEFE,YAAaA,EAAYG,MATS,QAOjD3B,EAPiD,QAW1CC,KAAKkC,UAAYF,EAAYE,UAChCE,EAAcd,IAAWe,OAAOpB,GAChCqB,EAAcF,EAAYH,SAASM,KAAI,SAAAb,GAAE,OAAIJ,IAAWW,SAASP,OACjEc,EAAaF,EAAYG,MAAK,SAAAC,GAAC,OAAIA,EAAER,YAChCA,SAAU,EACrBtB,EAASmB,EACLY,KAAEC,KAAKJ,EAAY,OAAQ,QAAS,WAAYA,EAAWd,GAAIT,KAGvEL,EAAS,CAAER,KAAM1B,EAAc2B,QAASN,EAASC,OApBM,kDAsBvDY,EAASf,GAAa,EAAD,KAtBkC,0DAApC,yDA0BdgD,GAAa,SAAbA,EAAcxB,EAAYyB,EAAU3B,GAAvB,8CAAqC,WAAOP,EAAUU,GAAjB,2BAAAT,EAAA,kEAE/CU,EAAgBD,IAAWE,MAA3BD,aACFwB,EAAazB,IAAW0B,QAAQF,IACvBG,SACX5B,EAAW4B,QAAS,IAEpB5B,EAAW6B,OAAQ7B,EAAW6B,KAAKC,OAPgB,iBAQnD9B,EAAW6B,KAAO7B,EAAW6B,KAAK,IAG5BE,EAAS,IAAIC,YAGZC,OAAS,SAAAC,IAGS,IAAKC,OAAOC,cAAgBD,OAAOE,qBAG3CC,gBAAgBJ,EAAMK,OAAOC,OAA1C,+BAAAhD,EAAA,MAAkD,WAAOiD,GAAP,6BAAAjD,EAAA,sDAa9C,IAAUkD,KAVJC,EAAWC,SAASH,EAAOE,UAE3BE,EALwC,2BAMvC7C,GANuC,IAO1CE,YAAaA,EAAYG,GACzBsC,aAGEG,EAAW,IAAIC,SAEJF,EACbC,EAASE,OAAON,EAAKG,EAAWH,IAdU,gBAiBvBjD,EAAWqB,MAAX,mBACPW,GACZqB,EACA,CACIrH,QAAS,CAAE,eAAgB,yBArBW,QAiBxCiD,EAjBwC,QA0BjCC,KAAKiD,SAAWF,EAAWE,SACpC/C,QAAQC,IAAI,YACNmE,EAAgBhD,IAAWW,SAASd,GACpCoD,EAAaD,EAActB,QAAQT,KAAI,SAAAb,GAAE,OAAIJ,IAAW0B,QAAQtB,OAChE8C,EAAYD,EAAW9B,MAAK,SAAAgC,GAAC,OAAIA,EAAExB,WAC/BA,QAAS,EACnBrC,EAASiC,EACLF,KAAEC,KAAK4B,EAAW,OAAQ,WAAY,UAAWA,EAAU9C,GAAIP,KAIvEP,EAAS,CAAER,KAAMzB,EAAa0B,QAASN,EAASC,OArCF,2CAAlD,wDA2CJoD,EAAOsB,QAAW,SAAAnB,GACdrD,QAAQD,MAAM,sCAAuCsD,IAIzDH,EAAOuB,kBAAkBtD,EAAW6B,MApEe,yCAsE5BpC,EAAWqB,MAAX,mBACPW,GADO,2BAEdzB,GAFc,IAEFE,YAAaA,EAAYG,MAxEK,SAsE7C3B,EAtE6C,QA0EtCC,KAAKiD,SAAWF,EAAWE,SAC9BqB,EAAgBhD,IAAWW,SAASd,GACpCoD,EAAaD,EAActB,QAAQT,KAAI,SAAAb,GAAE,OAAIJ,IAAW0B,QAAQtB,OAChE8C,EAAYD,EAAW9B,MAAK,SAAAgC,GAAC,OAAIA,EAAExB,WAC/BA,QAAS,EACnBrC,EAASiC,EACLF,KAAEC,KAAK4B,EAAW,OAAQ,WAAY,UAAWA,EAAU9C,GAAIP,KAGvEP,EAAS,CAAER,KAAMzB,EAAa0B,QAASN,EAASC,OAnFG,0DAsFvDY,EAASf,GAAa,EAAD,KAtFkC,0DAArC,yDAsJb+E,GAAa,SAAAC,GAAM,8CAAI,WAAOjE,EAAUU,GAAjB,iBAAAT,EAAA,6DACxBU,EAAgBD,IAAWE,MAA3BD,YADwB,kBAGLT,EAAWW,KAC9B,gBACA,CACIoD,SACAtD,YAAaA,EAAYG,KAPL,QAGtB3B,EAHsB,QAUnBC,KAAK8E,UAAUC,SAAQ,SAAA9D,GAC5BL,EAASoE,GAAY/D,EAASlB,EAASC,KAAK0B,QAEhDd,EAAS,CAAER,KAAMvB,EAAawB,QAASN,EAASC,OAbpB,gDAe5BY,EAASf,GAAa,EAAD,KAfO,yDAAJ,yDAmBnBmF,GAAc,SAAC/D,EAAS4D,GAAV,8CAAqB,WAAOjE,EAAUU,GAAjB,mBAAAT,EAAA,6DACpCU,EAAgBD,IAAWE,MAA3BD,YADoC,kBAGjBT,EAAWW,KAC9B,iBACA,CACIR,UACA4D,SACAtD,YAAaA,EAAYG,KARO,QAGlC3B,EAHkC,QAW/BC,KAAKiC,SAAS8C,SAAQ,SAAA5D,GAC3BP,EAASqE,GAAc9D,EAAWpB,EAASC,KAAK0B,QAE9CwD,EAAYC,OAAOC,OAAO9D,IAAW4D,WACrBC,OAAOC,OAAO9D,IAAW+D,eAAeC,QAAO,SAAAC,GAAG,OAAIA,EAAIC,QAAUvE,KAC5E8D,SAAQ,SAAAQ,GAClB,IAAM1D,EAAWqD,EAAUzC,MAAK,SAAAgD,GAAE,OAAIA,EAAGC,MAAMC,SAASJ,EAAI7D,OAC5Dd,EAASgF,GAAmBL,EAAI7D,GAAIG,EAASH,QAEjDd,EAAS,CAAER,KAAMpB,EAAcqB,QAAS,CAAEmF,MAAOzF,EAASC,KAAM6F,KAAMhB,KApB9B,kDAsBxCjE,EAASf,GAAa,EAAD,KAtBmB,0DAArB,yDA0BdoF,GAAgB,SAAC9D,EAAWF,GAAZ,8CAAwB,WAAOL,EAAUU,GAAjB,uBAAAT,EAAA,6DACzCU,EAAgBD,IAAWE,MAA3BD,YADyC,kBAGtBT,EAAWW,KAC9B,mBACA,CACIN,YACAF,UACAM,YAAaA,EAAYG,KARY,QAGvC3B,EAHuC,QAWhCC,KAAKkC,UACRE,EAAcd,IAAWe,OAAOpB,OAE5B6E,EAAoB1D,EAAYH,SAASqD,QAAO,SAAA5D,GAAE,OAAIA,IAAOP,MAC7CgC,SACZ4C,EAAazE,IAAWW,SAAS6D,EAAkBA,EAAkB3C,OAAO,KACvEjB,SAAU,EACrBtB,EAASoF,GAAcD,EAAWrE,GAAIT,IACtCL,EAASmB,GACLY,KAAEC,KAAKmD,EAAY,OAAQ,QAAS,WAAYA,EAAWrE,GAAIT,KAGnEL,EAASoF,GAAc,KAAM/E,KAIzClB,EAASC,KAAKgD,QAAQ+B,SAAQ,SAAAjC,GAC1BlC,EAASqF,GAAanD,EAAU/C,EAASC,KAAK0B,GAAIT,OAEtDL,EAAS,CAAER,KAAMnB,EAAgBoB,QAAS,CAAE6F,QAASnG,EAASC,KAAMwF,MAAOvE,KA9B9B,kDAgC7CL,EAASf,GAAa,EAAD,KAhCwB,0DAAxB,yDAoChBoG,GAAe,SAACnD,EAAU3B,EAAWF,GAAtB,8CAAkC,WAAOL,EAAUU,GAAjB,uBAAAT,EAAA,6DAClDU,EAAgBD,IAAWE,MAA3BD,YADkD,kBAG/BT,EAAWW,KAC9B,kBACA,CACIqB,WACA3B,YACAI,YAAaA,EAAYG,KARqB,QAGhD3B,EAHgD,QAWzCC,KAAKiD,SACRqB,EAAgBhD,IAAWW,SAASd,OAEhCgF,EAAmB7B,EAActB,QAAQsC,QAAO,SAAA5D,GAAE,OAAIA,IAAOoB,MAC9CK,SACXiD,EAAY9E,IAAW0B,QAAQmD,EAAiBA,EAAiBhD,OAAQ,KACrEF,QAAS,EACnBrC,EAASyF,GAAaD,EAAU1E,GAAIT,IACpCL,EAASiC,GACLF,KAAEC,KAAKwD,EAAW,OAAQ,WAAY,UAAWA,EAAU1E,GAAIP,KAGnEP,EAASyF,GAAa,KAAMpF,KAIxCL,EAAS,CAAER,KAAMlB,EAAemB,QAAS,CAAEiG,OAAQvG,EAASC,KAAMkG,QAAS/E,KA3BrB,gDA6BtDP,EAASf,GAAa,EAAD,KA7BiC,yDAAlC,yDAqDf+F,GAAqB,SAACW,EAAgBzE,GAAjB,8CAAgC,WAAOlB,EAAUU,GAAjB,iBAAAT,EAAA,6DAEtDU,EAAgBD,IAAWE,MAA3BD,YAFsD,kBAInCT,EAAWW,KAC9B,wBACA,CACI8E,iBACAzE,aACAP,YAAaA,EAAYG,KATyB,OAIpD3B,EAJoD,OAY1Da,EAAS,CAAER,KAAMrB,EAAqBsB,QAAS,CAAEuB,aAAc7B,EAASC,KAAM6B,SAAUC,KAZ9B,gDAc1DlB,EAASf,GAAa,EAAD,KAdqC,yDAAhC,yDAkBrB2G,GAAY,WACrB,MAAO,CAAEpG,KAAMhB,IA6HN4G,GAAgB,SAACE,EAASjF,GACnC,MAAO,CAAEb,KAAMV,GAAgBW,QAAS,CAAE6F,UAASjF,aAG1CoF,GAAe,SAACC,EAAQrF,GACjC,MAAO,CAAEb,KAAMT,GAAeU,QAAS,CAAEiG,SAAQrF,a,QCtzBtCwF,gBANS,SAAAC,GACpB,MAAO,CACHzG,MAAOyG,EAAMzG,MAAMA,SAIa,CAAES,eAA3B+F,EApBD,SAAC,GAA2B,IAAzBxG,EAAwB,EAAxBA,MAAOS,EAAiB,EAAjBA,WAEpB,OAAKT,EAKD,sBAAK0G,UAAU,QAAQC,QAAS,kBAAMlG,EAAW,OAAjD,SACKT,IALE,Q,sGCHT4G,G,oDAEF,WAAYC,GAAQ,IAAD,+BACf,cAAMA,IAIVJ,MAAQ,CAAEK,YAAY,EAAOC,eAAgB,MAL1B,EAuBnBC,mBAAqB,SAACC,GAClBA,EAAEC,mBAxBa,EA2BnBC,UAAY,SAACF,GACL,EAAKG,IAAInF,SAAW,EAAKmF,IAAInF,QAAQoF,SAASJ,EAAEtD,SAGhD,EAAK8C,MAAMK,YACX,EAAKQ,SAAS,CAAER,YAAY,KAhCjB,EAoCnBS,YAAc,SAACC,GACX,OAAOA,EAAMC,QAAQnF,KAAI,SAAAoF,GACrB,OACI,yBAEIC,MAAOD,EAAOC,MAFlB,SAIKD,EAAOE,SAHHF,EAAOC,WAxCT,EAiDnBE,OAAS,SAACZ,EAAGa,GACT,IAAM7E,EAAOgE,EAAEtD,OAAOoE,MAAM,IAE5BC,EADqBF,EAAbE,UACC/E,IApDM,EAuDnB6E,MAAQ,SAACN,GACL,IAAIS,EAAW,GAKf,MAJmB,SAAfT,EAAMrH,OACN8H,EAAW,YAGI,SAAfT,EAAMrH,aACCqH,EAAMM,MAAMH,MAEZ,uCACH,sBAAKjB,UAAU,cAAf,SACKc,EAAMU,KAAKC,SAAYX,EAAMU,KAAKlI,OAAS,+BAAIwH,EAAMU,KAAKlI,MAAM,gDAErE,kDACQwH,EAAMM,OADd,IAEI3H,KAAK,OACLuG,UAAU,YAEVmB,OAAQ,SAACZ,GAAD,OAAO,EAAKY,OAAOZ,EAAGO,EAAMM,eAItB,WAAfN,EAAMrH,KACN,uCACH,sBAAKuG,UAAU,cAAf,SACKc,EAAMU,KAAKC,SAAYX,EAAMU,KAAKlI,OAAS,+BAAIwH,EAAMU,KAAKlI,MAAM,gDAErE,mDACQwH,EAAMM,OADd,IAEIM,UAAWZ,EAAMY,UACjBjI,KAAMqH,EAAMrH,KAHhB,SAKKqH,EAAMC,QAAU,EAAKF,YAAYC,GAAS,WAI5C,uCACH,sBAAKd,UAAU,cAAf,SACKc,EAAMU,KAAKC,SAAYX,EAAMU,KAAKlI,OAAS,+BAAIwH,EAAMU,KAAKlI,MAAM,gDAErE,kDACQwH,EAAMM,OADd,IAEIM,UAAWZ,EAAMY,UACjBjI,KAAMqH,EAAMrH,KACZuG,UAAS,qBAAgBuB,UAnGtB,EAyGnBI,SAAW,SAAAV,GACP,OAAOA,OAAQW,EAAY,YA1GZ,EA6GnBC,WAAa,WAET,OAAO,EAAK1B,MAAM2B,OAAOlG,KAAI,SAACkF,EAAOiB,GACjC,IAAML,EAAkB,IAANK,EACdC,EAAO,EAAKZ,MAIhB,OAAO,iCACH,mCAAQN,EAAMmB,MAAd,QACA,eAACC,GAAA,EAAD,CACIC,KAAMrB,EAAMqB,KACZC,UAAWJ,EACXN,UAAWA,EACXjI,KAAMqH,EAAMrH,KACZ4I,SAAUvB,EAAMa,SAAW,EAAKA,SAAW,KAC3CZ,QAASD,EAAMC,QANnB,SAQKD,EAAMC,QAAU,EAAKF,YAAYC,GAAS,SAVlCA,EAAMmB,WArHZ,EAsInBK,WAAa,SAAC5H,GACV,EAAKyF,MAAMoC,SAAS7H,GACpB,EAAKkG,SAAS,CAAER,YAAY,IAC5B,EAAKD,MAAMqC,SAzII,EA4InBC,QAAU,WACN,GAAI,EAAK1C,MAAMK,WAAY,CACvB,IAAMmB,EAAW,EAAKpB,MAAMoB,SAAW,EAAKpB,MAAMoB,SAAW,GAC7D,OAAO,qCACH,uBAAKvB,UAAS,kBAAauB,GAAYtB,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAAvD,UACI,qBAAIR,UAAU,gBAAd,SAA+B,EAAKG,MAAMtB,QAC1C,wBAAM0D,SAAY,EAAKpC,MAAMuC,aAAa,EAAKJ,YAA/C,UACK,EAAKT,aACN,sBAAK7B,UAAU,yBAAf,SACI,yBAAQA,UAAU,gBAAgBvG,KAAK,SAAvC,4BArJL,EA6JnBkJ,MAAQ,SAACpC,GACLA,EAAEC,kBACE,EAAKE,IAAInF,SAAW,EAAKmF,IAAInF,UAAYgF,EAAEtD,SAG3C,EAAK8C,MAAMK,WACX,EAAKQ,SAAS,CAAER,YAAY,IAE5B,EAAKQ,SAAS,CAAER,YAAY,MAnKhC,EAAKM,IAAMkC,IAAMC,YAFF,E,uDAOnB,SAAmBC,EAAWC,IACG,IAAzBA,EAAU3C,aAAkD,IAA1B4C,KAAKjD,MAAMK,YAC7C6C,SAASC,iBAAiB,QAASF,KAAKvC,UAAW,CAAC0C,SAAS,IAC7DF,SAASC,iBAAiB,UAAWF,KAAK1C,mBAAoB,CAAC6C,SAAS,MACxC,IAAzBJ,EAAU3C,aAAiD,IAA1B4C,KAAKjD,MAAMK,aACnD6C,SAASG,oBAAoB,QAASJ,KAAKvC,UAAW,CAAC0C,SAAS,IAChEF,SAASG,oBAAoB,UAAWJ,KAAK1C,mBAAoB,CAAC6C,SAAS,O,kCAKnF,WACIF,SAASG,oBAAoB,QAASJ,KAAKvC,UAAW,CAAC0C,SAAS,IAChEF,SAASG,oBAAoB,UAAWJ,KAAK1C,mBAAoB,CAAC6C,SAAS,M,oBAsJ/E,WAEI,OAAO,qCACH,uBAAKnD,UAAU,MAAMC,QAAS+C,KAAKL,MAAOjC,IAAKsC,KAAKtC,IAApD,UACI,sBAAK2C,IAAKL,KAAK7C,MAAMmD,QACpBN,KAAKP,mB,GAjLEG,IAAMW,WAwLfC,gBAAU,CAAEC,KAAM,QAAlBD,CAA4BtD,IC5J5BwD,G,2KA3BX,WACIT,SAASU,cAAc,cAAcC,UAAUC,IAAI,kB,kCAEvD,WACIZ,SAASU,cAAc,cAAcC,UAAUE,OAAO,kB,oBAG1D,WACI,OAAOC,IAASC,aACZ,sBAAK/D,QAAS+C,KAAK7C,MAAM8D,UAAWjE,UAAU,mBAA9C,SACI,uBACIC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAChBR,UAAU,YAFd,UAII,sBAAKA,UAAU,cAAf,SACKgD,KAAK7C,MAAM+D,UAEhB,+BACKlB,KAAK7C,MAAMgE,eAIxBlB,SAASU,cAAc,e,GAxBff,IAAMW,WC4DXa,GA7DM,SAAC,GAA+B,IAA7B7B,EAA4B,EAA5BA,SAAU8B,EAAkB,EAAlBA,YAE9B,EAA8BC,oBAAS,GAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAkDA,OACI,iCACI,sBAAKnB,IAAI,qBAAqBrD,UAAU,SAASC,QARzC,SAACM,GACbA,EAAEC,kBACFgE,GAAW,MAOND,GAtBD,eAAC,GAAD,CACIL,QA7BF,qBAAN,OAA4BG,EAA5B,MA8BQF,QAzBJ,uCACI,yBACInE,UAAU,eACVC,QAAS,WACLsC,IACAiC,GAAW,IAJnB,oBASA,yBACIxE,UAAU,eACVC,QAAS,kBAAMuE,GAAW,IAF9B,wBAgBAP,UAAW,SAAA1D,GACPA,EAAEC,kBACFgE,GAAW,UCtChB,YAAAC,GAAmB,IAExBC,EAFuB,oDAIzB,WAAYvE,GAAQ,IAAD,+BACf,cAAMA,IAGVJ,MAAQ,CAAE4E,YAAY,GAJH,EAenBC,aAAe,WACX,EAAKC,aAhBU,EAJM,sDAUzB,WACI7B,KAAK6B,cAXgB,uBAuBzB,WACQ7B,KAAK7C,MAAM2E,MAAQ9B,KAAK7C,MAAMvF,aAAeoI,KAAK7C,MAAM2E,KAAKjK,MAAMmE,SAASgE,KAAK7C,MAAMvF,YAAYG,KACnGiI,KAAKpC,SAAS,CAAE+D,YAAY,MAzBX,oBA6BzB,WAEI,OAAO,eAACF,EAAD,2BAAoBzB,KAAK7C,OAAzB,IAAgCwE,WAAY3B,KAAKjD,MAAM4E,WAAYC,aAAc5B,KAAK4B,oBA/BxE,GAEGhC,IAAMW,WA0CtC,OAAOzD,aAPiB,SAAAC,GACpB,MAAO,CACH+E,KAAM/E,EAAMgF,KAAKD,KACjBlK,YAAamF,EAAMlF,MAAMD,eAI1BkF,CAAyB4E,IC8MrB5E,eAAQ,KAAM,CAAEJ,gBAAcsF,aNRjB,SAACtK,EAAYF,EAAWF,GAAxB,8CAAoC,WAAOL,EAAUU,GAAjB,mBAAAT,EAAA,sDAE5D,IACYU,EAAgBD,IAAWE,MAA3BD,aACF+C,EAAgBhD,IAAWW,SAASd,IAEvB6B,QAAQG,SACvB9B,EAAW4B,QAAS,GAGxB5B,EAAW6B,KAAO7B,EAAW6B,KAAK,IAG5BE,EAAS,IAAIC,YAGZC,OAAS,SAAAC,IAGS,IAAKC,OAAOC,cAAgBD,OAAOE,qBAG3CC,gBAAgBJ,EAAMK,OAAOC,OAA1C,+BAAAhD,EAAA,MAAkD,WAAOiD,GAAP,2BAAAjD,EAAA,sDAc9C,IAAUkD,KAXJC,EAAWC,SAASH,EAAOE,UAE3BE,EALwC,2BAMvC7C,GANuC,IAO1CE,YAAaA,EAAYG,GACzBwE,QAAS/E,EACT6C,aAGEG,EAAW,IAAIC,SAEJF,EACbC,EAASE,OAAON,EAAKG,EAAWH,IAfU,gBAkBvBjD,EAAWW,KAC9B,WACA0C,EACA,CACIrH,QAAS,CAAE,eAAgB,yBAtBW,QAkBxCiD,EAlBwC,QA0BjCC,KAAKiD,SAEVqB,EAActB,QAAQG,SAChBoB,EAAaD,EAActB,QAAQT,KAAI,SAAAb,GAAE,OAAIJ,IAAW0B,QAAQtB,OAChE8C,EAAYD,EAAW9B,MAAK,SAAAgC,GAAC,OAAIA,EAAExB,WAC/BA,QAAS,EACnBrC,EAASiC,GACLF,KAAEC,KAAK4B,EAAW,OAAQ,WAAY,UAAWA,EAAU9C,GAAIP,KAGvEP,EAAS,CAAER,KAAMT,GAAeU,QAAS,CAAEY,UAASqF,OAAQvG,EAASC,SAGzEY,EAAS,CAAER,KAAMhC,EAAeiC,QAAS,CAAEiG,OAAQvG,EAASC,KAAMkG,QAAS/E,KAvC7B,2CAAlD,wDA4CJiC,EAAOsB,QAAW,SAAAnB,GACdrD,QAAQD,MAAM,sCAAuCsD,IAIzDH,EAAOuB,kBAAkBtD,EAAW6B,MAEtC,MAAOlG,GACL4D,EAASf,GAAa7C,IA1EkC,2CAApC,yDMQ+B6F,cAAYoD,iBAAxDQ,CAAwEmF,IAnPxE,SAAC,GAAmG,IAAjG5I,EAAgG,EAAhGA,QAASqD,EAAuF,EAAvFA,aAAcb,EAAyE,EAAzEA,MAAO8F,EAAkE,EAAlEA,WAAYpF,EAAsD,EAAtDA,QAASyF,EAA6C,EAA7CA,aAAc9I,EAA+B,EAA/BA,WAAYoD,EAAmB,EAAnBA,aAE3F,EAA4CgF,mBAASzF,EAAMqG,gBAA3D,oBAAOA,EAAP,KAAuBC,EAAvB,KAEA,EAAwCb,oBAAS,GAAjD,oBAAOc,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACFJ,GAAkBA,IAAmBrG,EAAMqG,gBAC3CxF,EAAawF,EAAgBrG,EAAM9D,MAExC,CAACmK,IAEJI,qBAAU,WACFJ,GAAkBA,IAAmBrG,EAAMqG,gBAC3CxF,EAAab,EAAMqG,eAAgBrG,EAAM9D,MAE9C,CAAC8D,EAAMqG,iBAEVI,qBAAU,WACNH,EAAkBtG,EAAMqG,gBACxBG,GAAgB,KACjB,CAACxG,EAAMqG,iBAEV,IAAMK,EAAc,SAAAC,GAChB,OAAOC,KAAOC,IAAIF,GAAMG,OAAO,aAG7BC,EAAmB,WAErB,GAAIvJ,EAAQ,GAAI,CAEZ,IAAMuB,EAAavB,EAAQsC,QAAO,SAAAb,GAAC,OAAIA,EAAE/C,KAAOmK,EAAenK,MAG/D,OAFA6C,EAAWiI,MAAK,SAAC3L,EAAG4D,GAAJ,OAAU5D,EAAEsL,KAAO1H,EAAE0H,KAAO,GAAK,KAE1C5H,EAAWhC,KAAI,SAAAkC,GAClB,IAAMvC,EAAUuC,EAAExB,OAAS,uBAAM0D,UAAU,eAAhB,wBAAmD,KAC9E,OAAO,uBACHA,UAAU,4BACVC,QAAS,kBAAMkF,EAAkBrH,IAF9B,UAKFyH,EAAYzH,EAAE0H,MACdjK,IAHIuC,EAAE/C,SAgBjB+K,EAAe,SAACpL,GAElBwB,EAAWxB,EAAYwK,EAAenK,GAAIwE,EAAQxE,IAClDsK,GAAgB,IAqGdU,EAAY,WACd,GAAIb,EAAe5I,OACf,OACI,sBAAK0D,UAAU,SAAf,sBAONgG,EAAc,WAChB,IAAIC,EAOJ,OALIA,EADmB,IAAnB5J,EAAQG,OACA,YAEH,UAAMH,EAAQG,OAAd,aAIL,8BACKyJ,KA0Cb,OAAIb,EACO,sBAAKpF,UAAU,oBAAf,SA7JC,uBAAKA,UAAU,eAAf,UACI,8CACA,sBAAKA,UAAU,WAAWqD,IAAI,8BA+JtC9D,EAEI,uBAAKS,UAAU,oBAAf,UA1CJkF,EAEI,uBAAKlF,UAAU,iBAAf,UACI,uBAAKA,UAAU,gBAAf,UACKgG,IACD,uBAAKhG,UAAU,WAAf,UACI,yBAAQA,UAAU,UAAlB,SACKuF,EAAYL,EAAeM,QAEhC,sBAAKxF,UAAU,mBAAf,SACK4F,SAGT,+BACKG,SAGT,uBAAK/F,UAAU,eAAf,UACI,sBAAKA,UAAU,qBAAf,oBACA,6BAAIkF,EAAegB,iBAM3B,sBAAKlG,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,SACI,kEAiBJ,uBAAKA,UAAU,iBAAf,UA7JQ,WACpB,GAAI2E,EACA,OACI,eAAC,GAAD,CACI9F,MAAK,0BAAqBU,EAAQ4C,MAClCmB,MAAM,iBACNxB,OAAQ,CACJ,CACIG,MAAO,OACPE,KAAM,OACN1I,KAAM,OACNkI,UAAU,GAEd,CACIM,MAAO,OACPE,KAAM,OACN1I,KAAM,OACNkI,UAAU,GAEd,CACIM,MAAO,WACPE,KAAM,WACN1I,KAAM,YAEV,CACIwI,MAAO,iBACPE,KAAM,SACN1I,KAAM,aAGd8I,SAAU,SAAA7H,GAAU,OAvDhB,SAACA,GAEjBsK,EAAatK,EAAY6E,EAAQxE,GAAI8D,EAAM9D,IAC3CsK,GAAgB,GAoDoBc,CAAYzL,IACpC+I,KAAI,qBAAgB5E,EAAM9D,IAC1BqL,cAAe,CAAE9J,QAAQ,GACzBiF,SAAS,eA6HJ8E,GACAnB,GAxHI,WACrB,GAAIP,EACA,OAAO,eAAC,GAAD,CACH9F,MAAO,mBACPyE,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,OACPE,KAAM,OACN1I,KAAM,QAEV,CACIwI,MAAO,OACPE,KAAM,OACN1I,KAAM,QAEV,CACIwI,MAAO,WACPE,KAAM,WACN1I,KAAM,YAEV,CACIwI,MAAO,kBACPE,KAAM,SACN1I,KAAM,aAGd8I,SAAUuD,EACVM,cAAa,2BACJpK,KAAEC,KAAKiJ,EAAgB,WAAY,WAD/B,IAC0CM,KAAMC,KAAOC,IAAIR,EAAeM,MAAMG,OAAO,gBAEpGlC,KAAI,sBAAiB5E,EAAM9D,IAC3BuL,oBAAoB,EACpB/E,SAAS,eAuFkBgF,GAClBrB,GAnFM,WACvB,GAAIP,EACA,OAAO,eAAC,GAAD,CACHpC,SAAU,kBAAMjD,EAAa4F,EAAenK,GAAIwE,EAAQxE,GAAI8D,EAAM9D,KAClEsJ,YAAakB,EAAYL,EAAeM,QA+EbgB,SAKxB,SChCJ1G,gBANS,SAAAC,GACpB,MAAO,CACH1D,QAAS0D,EAAM1D,WAIiB,CAAE9B,gBAAc8E,iBAAeoH,cPJ1C,SAAC/L,EAAYJ,GAAb,8CAAyB,WAAOL,EAAUU,GAAjB,uBAAAT,EAAA,sEAGtCU,EAAgBD,IAAWE,MAA3BD,aACFa,EAAcd,IAAWe,OAAOpB,IAErBgB,SAASkB,SACtB9B,EAAWa,SAAU,GAPqB,SAUvBpB,EAAWW,KAC9B,YADmB,2BAEdJ,GAFc,IAEFE,YAAaA,EAAYG,GAAI8D,MAAOvE,KAZX,QAUxClB,EAVwC,QAejCC,KAAKkC,UACVE,EAAYH,SAASkB,SACfb,EAAcF,EAAYH,SAASM,KAAI,SAAAb,GAAE,OAAIJ,IAAWW,SAASP,OACjEc,EAAaF,EAAYG,MAAK,SAAAC,GAAC,OAAIA,EAAER,YAChCA,SAAU,EACrBtB,EAASmB,GACLY,KAAEC,KAAKJ,EAAY,OAAQ,QAAS,WAAYA,EAAWd,GAAIT,KAGvEL,EAAS,CAAER,KAAMV,GAAgBW,QAAS,CAAEY,UAASiF,QAASnG,EAASC,SAG3EY,EAAS,CAAER,KAAMjC,EAAgBkC,QAAS,CAAE6F,QAASnG,EAASC,KAAMwF,MAAOvE,KA3B7B,kDA6B9CL,EAASf,GAAa,EAAD,KA7ByB,0DAAzB,yDOIyDkC,eAAakD,kBAApFwB,CAAqGmF,IA9MpG,SAAC,GAAsH,IAApH3J,EAAmH,EAAnHA,SAAUe,EAAyG,EAAzGA,QAAS9B,EAAgG,EAAhGA,aAAc8E,EAAkF,EAAlFA,cAAeR,EAAmE,EAAnEA,MAAO4H,EAA4D,EAA5DA,cAAe9B,EAA6C,EAA7CA,WAAYvJ,EAAiC,EAAjCA,YAAakD,EAAoB,EAApBA,cAE9G,EAA8CgG,mBAASzF,EAAM6H,iBAA7D,oBAAOA,EAAP,KAAwBC,EAAxB,KACA,EAAoCrC,mBAAS,MAA7C,oBAAO1G,EAAP,KAAmBgJ,EAAnB,KAEAtB,qBAAU,WAEFoB,IACArH,EAAcqH,EAAiB7H,EAAM9D,IACrC6L,EAAcF,EAAgBrK,QAAQT,KAAI,SAAAb,GAAE,OAAIsB,EAAQtB,UAE7D,CAAC2L,IAEJpB,qBAAU,WACFoB,GACAE,EAAcF,EAAgBrK,QAAQT,KAAI,SAAAb,GAAE,OAAIsB,EAAQtB,SAE7D,CAACsB,IAEJiJ,qBAAU,WACFoB,IAAoB7H,EAAM6H,kBAC1BC,EAAmB9H,EAAM6H,iBACzBnM,EAAasE,EAAM6H,gBAAgB3L,OAExC,CAACO,EAAUuD,EAAM6H,kBAEpB,IAgBMG,EAAe,WACjB,IAAIZ,EAOJ,OALIA,EADoB,IAApB3K,EAASkB,OACD,aAEH,UAAMlB,EAASkB,OAAf,cAIL,8BAAKyJ,KA0FPF,EAAY,WACd,GAAIW,EAAgBnL,QAChB,OACI,sBAAKyE,UAAU,UAAf,sBA2CZ,OAAO,uCACC,uBAAKA,UAAU,aAAf,UApCA0G,EAEI,uBAAK1G,UAAU,iBAAf,UACI,uBAAKA,UAAU,gBAAf,UACK6G,IACD,uBAAK7G,UAAU,WAAf,UACI,yBAAQA,UAAU,UAAlB,SACK0G,EAAgBvE,OAErB,sBAAKnC,UAAU,mBAAf,SAtIA1E,EAASqD,QAAO,SAAA5C,GAAC,OAAIA,EAAEhB,KAAO2L,EAAgB3L,MAE/Ca,KAAI,SAAAG,GACnB,IAAMR,EAAUQ,EAAER,QAAU,uBAAMyE,UAAU,eAAhB,wBAAmD,KAC/E,OAAO,uBACHA,UAAU,+BACVC,QAAS,kBAAM0G,EAAmB5K,IAF/B,UAKEA,EAAEoG,KACF5G,IAHAQ,EAAEhB,YAmIEgL,OAEL,uBAAK/F,UAAU,eAAf,UACI,sBAAKA,UAAU,qBAAf,oBACA,6BAAI0G,EAAgBI,cAM5B,sBAAK9G,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,SACI,oEAaR,uBAAKA,UAAU,iBAAf,UA3HY,WACpB,GAAI2E,EACA,OACI,eAAC,GAAD,CACI9F,MAAK,2BAAsBA,EAAMA,OACjCyE,MAAM,iBACNxB,OAAQ,CACJ,CACIG,MAAO,OACPE,KAAM,OACN1I,KAAM,QACNkI,UAAU,GAEd,CACIM,MAAO,QACPE,KAAM,QACN1I,KAAM,YAEV,CACIwI,MAAO,mBACPE,KAAM,UACN1I,KAAM,aAGd8I,SAAU,SAAC7H,GAAD,OAAgB+L,EAAc/L,EAAYmE,EAAM9D,KAC1D0I,KAAI,sBAAiB5E,EAAM9D,IAC3BqL,cAAe,CAAE7K,SAAS,GAC1B+K,oBAAoB,EACpB/E,SAAS,gBAgGR8E,GACAK,GA3FQ,WACrB,GAAI/B,EACA,OAAO,eAAC,GAAD,CACH9F,MAAK,eAAU6H,EAAgBvE,MAC/BmB,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,OACPE,KAAM,OACN1I,KAAM,SAEV,CACIwI,MAAO,QACPE,KAAM,QACN1I,KAAM,YAEV,CACIwI,MAAO,mBACPE,KAAM,UACN1I,KAAM,aAGd8I,SAAU,SAAA7H,GAAU,OAAIU,EAAYV,EAAYgM,EAAgB3L,GAAI8D,EAAM9D,KAC1EqL,cAAepK,KAAEC,KAAKyK,EAAiB,OAAQ,QAAS,WACxDjD,KAAI,uBAAkB5E,EAAM9D,IAC5BuL,oBAAoB,EACpB/E,SAAS,gBAiEegF,GACnBG,GA7DU,WACvB,GAAI/B,EACA,OAAO,eAAC,GAAD,CACHpC,SAAU,kBAAMjE,EAAcoI,EAAgB3L,GAAI8D,EAAM9D,KACxDsJ,YAAaqC,EAAgBvE,OAyDLqE,SA1Id,WAElB,GAAI5I,EAEA,OACI,eAAC,GAAD,CAAQvB,QAASuB,EAAYiB,MAAOA,EAAOU,QAASmH,IAwIvDK,UCnJEjH,eAAQ,KAAM,CAAEkH,WRypBL,SAACC,GAAD,OAAU,SAAChN,EAAUU,GAG3C,IAAMuM,EAAa,CACfrI,MAAOoI,EAAKpI,MACZU,QAAS0H,EAAK1H,QAAQ4C,KACtBqD,KAAMyB,EAAKtH,OAAO6F,KAClBnI,SAAU4J,EAAKtH,OAAOtC,SACtB8J,MAAOF,EAAKtH,OAAO5E,IAGvBd,EAAS,CAAER,KAAMd,GAAae,QAAS,CAAEuN,KAAMC,EAAYE,OAAQH,EAAK/H,UQpqBjCmI,mBRyqBT,SAACJ,GAAD,OAAU,SAAChN,EAAUU,GAMnD,IAAMuM,EAAa,CACfrI,MAAOoI,EAAKpI,MACZU,QAAS0H,EAAK1H,QAAQ4C,KACtBqD,KAAMyB,EAAKtH,OAAO6F,KAClBnI,SAAU4J,EAAKtH,OAAOtC,SACtB8J,MAAOF,EAAKtH,OAAO5E,GACnBuM,SAAUL,EAAKK,UAGnBrN,EAAS,CAAER,KAAMd,GAAae,QAAS,CAAEuN,KAAMC,EAAYE,OAAQH,EAAK/L,cQxrBb2E,aAAW9F,eAA3D+F,EApDO,SAAC,GAAsE,IAsBrFyH,EApBiB/B,EAFAyB,EAAmE,EAAnEA,KAAMD,EAA6D,EAA7DA,WAAYQ,EAAiD,EAAjDA,WAAYH,EAAqC,EAArCA,mBAAqC,EAAjBtN,WA6BvE,OALIwN,EAAU,kCAMV,uBAAKvH,UAAU,iBAAf,UACI,sBAAKA,UAAU,sBAAf,SAzBY,SAACyH,GACjB,IAAMC,EAAUC,KAAKC,MAAMH,EAAO,IAC5BI,EAAUF,KAAKC,MAAMH,EAAO,IAAM,GAAK,IAAME,KAAKC,MAAMH,EAAO,IAAME,KAAKC,MAAMH,EAAO,IAC7F,MAAM,GAAN,OAAUC,EAAV,YAAqBG,GAsBqBC,CAAYb,EAAKtH,OAAOtC,YAC9D,sBACIgG,IAAI,mBAAmBrD,UAAU,YACjCC,QAtBG,SAACM,GACZA,EAAEC,kBACiB,SAAfgH,EACAR,EAAWC,GACW,aAAfO,GACPH,EAAmBJ,MAmBnB,uBAAKjH,UAAU,yBAAf,UACI,6BAAIiH,EAAK1H,QAAQ4C,OACjB,8BApCSqD,EAoCOyB,EAAKtH,OAAO6F,KAnC7BC,KAAOC,IAAIF,GAAMG,OAAO,kBAqC3B,oBACI3F,UAAU,WACVC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAChBuH,KAAI,UAAKR,EAAL,+BAAmCN,EAAKtH,OAAO5E,GAA/C,YAAqDiN,mBAAmBf,EAAKpI,MAAMA,QACvFoJ,UAAQ,EAJZ,SAMI,sBAAK5E,IAAI,iCCmMVvD,gBAZS,SAAAC,GACpB,MAAO,CACHzE,SAAUyE,EAAMzE,SAChBe,QAAS0D,EAAM1D,QACf6L,KAAMnI,EAAMlF,MAAMD,YAClB2D,UAAWwB,EAAMxB,UACjB7C,OAAQqE,EAAMrE,OACdyL,MAAOpH,EAAMoH,MACbgB,MAAOpI,EAAMoI,SAImB,CAAE9N,iBAAeE,gBAAc8E,iBAAeK,gBAAc1E,sBAAoBoN,UT8H/F,SAAC1N,EAAYJ,EAAS4D,GAAtB,8CAAiC,WAAOjE,EAAUU,GAAjB,mBAAAT,EAAA,sEAE1CU,EAAgBD,IAAWE,MAA3BD,YACJyN,EAAa3N,EAAW4N,KAHsB,SAI3BnO,EAAWqB,MAAX,kBACRlB,GADQ,2BAEdI,GAFc,IAEF6N,YAAarK,EAAQtD,YAAaA,EAAYG,MANjB,OAI5C3B,EAJ4C,OAQlDa,EAAS,CAAER,KAAM3B,EAAY4B,QAAS,CAAEmF,MAAOzF,EAASC,KAAM6F,KAAM,CAAEsJ,IAAKH,EAAYI,IAAKvK,MAR1C,gDAUlDjE,EAASf,GAAa,EAAD,KAV6B,yDAAjC,yDS9H0GmF,gBAApHyB,CAAmImF,IA7OpI,SAAC,GAAsN,IAApN/F,EAAmN,EAAnNA,KAAML,EAA6M,EAA7MA,MAAOnD,EAAsM,EAAtMA,OAAQrB,EAA8L,EAA9LA,cAAeiB,EAA+K,EAA/KA,SAAUe,EAAqK,EAArKA,QAAS9B,EAA4J,EAA5JA,aAAcoK,EAA8I,EAA9IA,WAAYuD,EAAkI,EAAlIA,KAAM3J,EAA4H,EAA5HA,UAAWc,EAAiH,EAAjHA,cAAeK,EAAkG,EAAlGA,aAAc1E,EAAoF,EAApFA,mBAAoBoN,EAAgE,EAAhEA,UAAW/J,EAAqD,EAArDA,YAAaqK,EAAwC,EAAxCA,QAASvB,EAA+B,EAA/BA,MAAOwB,EAAwB,EAAxBA,WAAYR,EAAY,EAAZA,MAEpN,EAA4B7D,oBAAS,GAArC,oBAAOsE,EAAP,KAAeC,EAAf,KACA,EAAsCvE,mBAAS,MAA/C,oBAAO3I,EAAP,KAAoBmN,EAApB,KACA,EAAoCxE,mBAAS,MAA7C,oBAAO1G,EAAP,KAAmBgJ,EAAnB,KACA,EAAwBtC,mBAAS,MAAjC,oBAAO2C,EAAP,KAAa8B,EAAb,KAEAzD,qBAAU,WACNjL,EAAcwE,EAAM9D,MACrB,IAEHuK,qBAAU,WAENwD,EAAejK,EAAMvD,SAASM,KAAI,SAAAb,GAAE,OAAIO,EAASP,SAGlD,CAACO,EAAUuD,IAEdyG,qBAAU,WACN,GAAI3J,GAAeA,EAAY,GAAI,CAE/B,IAAIqN,EAEEC,EAAatN,EAAYC,KAAI,SAAAG,GAAC,OAAIA,EAAEhB,MAErC8D,EAAM6H,iBAAoBuC,EAAWjK,SAASH,EAAM6H,gBAAgB3L,IAE9D8D,EAAM6H,kBAITsC,EAHCrN,EAAYqD,SAASH,EAAM6H,iBAGV7H,EAAM6H,gBAFN/K,EAAYG,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,KAAO8D,EAAM6H,gBAAgB3L,OAH3EiO,EAAkBrN,EAAYG,MAAK,SAAAC,GAAC,OAAIA,EAAER,WAQ9C8D,EAAc2J,EAAiBnK,EAAM9D,IAGrC8D,EAAM6H,iBACNnM,EAAasE,EAAM6H,gBAAgB3L,MAGxC,CAACY,IAEJ2J,qBAAU,WACFzG,EAAM6H,kBACF7H,EAAM6H,gBAAgBrK,QAAQ,GAC9BuK,EAAc/H,EAAM6H,gBAAgBrK,QAAQT,KAAI,SAAAb,GAAE,OAAIsB,EAAQtB,OAE9B,OAAzB8D,EAAMqG,iBAEb0B,EAAc,MACdlH,EAAa,KAAMb,EAAM9D,QAGlC,CAACsB,IAEJiJ,qBAAU,WAGF,IAAI4D,EAFJtL,GAAcA,EAAW,IAIrBiB,EAAMqG,gBAAkBtH,EAAWoB,SAASH,EAAMqG,gBAClDgE,EAAiBrK,EAAMqG,gBAEvBgE,EAAiBtL,EAAW9B,MAAK,SAAAgC,GAAC,OAAIA,EAAExB,UACxCqM,EAAW9J,EAAOqK,IAGlBA,IAAmBrK,EAAMqG,gBAEzBxF,EAAawJ,EAAgBrK,EAAM9D,KAIhCkM,GACP8B,EAAQ,QAGb,CAACnL,IAGJ0H,qBAAU,WAEFzG,EAAMqG,gBAAkBrG,EAAM6H,gBAEzBO,GAAQA,EAAKP,kBAAoBO,EAAK1H,SAAW0H,EAAK/B,iBAAmB+B,EAAKtH,SAE/EoJ,EAAQ,CACJ7J,OACAL,QACAU,QAASV,EAAM6H,gBACf/G,OAAQd,EAAMqG,iBAGlBwD,EAAQ,CAAE3N,GAAI8D,EAAM9D,GAAIsC,SAAUwB,EAAMqG,eAAe7H,YAEpD4J,IAASpI,EAAMqG,iBACtB6D,EAAQ,MACRL,EAAQ,CAAE3N,GAAI8D,EAAM9D,GAAIsC,SAAU,OAGvC,CAAC3B,EAAOmD,EAAM9D,IAAI2L,gBAAiBhL,EAAOmD,EAAM9D,IAAImK,iBAGvD,IAyFMiE,EAAQP,EAAS,aAAe,GAEhCrN,EAAU4L,EAAMiC,YAAcjC,EAAMiC,YAAYjC,MAAQ,KACxDC,EAASD,EAAMC,OAASD,EAAMC,OAAOrM,GAAK,KAE5CsO,EAAe,GAEf9N,GAAWsD,EAAMqG,iBACjBmE,EAAejC,IAAWlI,EAAKnE,IAAMQ,IAAYsD,EAAMqG,eAAenK,GAAK,eAAiB,IAGhG,IAAIuO,EAAOV,EAAS,OAAS,SAE7B,OACI,uBAAK5I,UAAU,eAAf,UACI,sBAAKA,UAAS,oBAAeqJ,EAAf,YAA+BT,EAAS,WAAa,IAAnE,SACI,uBAAK5I,UAAU,SAASC,QAAS,kBAAM4I,GAAWD,IAAlD,UACI,uBAAK5I,UAAU,aAAf,UACI,sBAAKA,UAAS,gBAAWmJ,GAAS9F,IAAG,4BACrC,8BAAKxE,EAAMA,WA5GH,WAExB,GAAIoI,EACA,OAAO,eAAC,GAAD,CAAeA,KAAMA,EAAMO,WAAW,SA2GpC+B,GAtFK,WAClB,GAAI5E,EAAY,CACZ,IACM6E,EADgBtB,EAAK3J,UAAU3C,KAAI,SAAAb,GAAE,OAAIwD,EAAUxD,MACnBa,KAAI,SAAAkD,GACtC,GAAIA,EACA,MAAO,CAAEmC,MAAOnC,EAAG/D,GAAImG,QAASpC,EAAGqD,SAMrCsH,EAHYvB,EAAKC,MAClBxJ,QAAO,SAAA+K,GAAC,OAAIA,IAAMxK,EAAKnE,MACvBa,KAAI,SAAAb,GAAE,OAAIoN,EAAMpN,MACSa,KAAI,SAAA8N,GAC9B,GAAIA,EACA,MAAO,CAAEzI,MAAOyI,EAAE3O,GAAImG,QAASwI,EAAEvH,SAIzC,OADAsH,EAAYE,QAAQ,CAAE1I,MAAO,KAAMC,QAAS,KAExC,uBAAKlB,UAAU,eAAf,UACKiH,GAAQ,eAAC,GAAD,CACLpI,MAAM,oBACN0D,SAAU,SAAA7H,GAAU,OA9BhB,SAAAA,GACpBM,EAAmB,2BACZN,GADW,IAEdiF,OAAQd,EAAMqG,eAAenK,GAC7BwE,QAASV,EAAM6H,gBAAgB3L,GAC/B8D,MAAOA,EAAM9D,MAyBuB6O,CAAgBlP,IACxC4I,MAAM,sBACNxB,OAAQ,CACJ,CACIrI,KAAM,SACNsH,QAASyI,EACTrH,KAAM,aACNF,MAAO,aAGfwB,KAAI,0BAAqB5E,EAAM9D,IAC/BuL,oBAAoB,IAExB,eAAC,GAAD,CACIzH,MAAK,eAAUA,EAAMA,OACrByE,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,QACPE,KAAM,QACN1I,KAAM,QACNkI,UAAU,GAEd,CACIM,MAAO,eACPE,KAAM,OACN1I,KAAM,SACNsH,QAAS0I,IAGjBlH,SAAU,SAAA7H,GAAU,OAAI0N,EAAU1N,EAAYmE,EAAM9D,GAAImE,EAAKnE,KAC7DqL,cAAe,CAAEvH,MAAOA,EAAMA,MAAOyJ,KAAM,MAC3C7E,KAAI,qBAAgB5E,EAAM9D,IAC1BuL,oBAAoB,IAExB,eAAC,GAAD,CACI/D,SAAU,kBAAMlE,EAAYQ,EAAM9D,GAAImE,EAAKnE,KAC3CsJ,YAAaxF,EAAMA,YA6BtBgL,QAGT,sBAAK7J,UAAS,4BAAuBsJ,GAArC,SACKV,GAxGL,eAAC,GAAD,CAAStN,SAAUK,EAAakD,MAAOA,aCyIpCiB,gBATS,SAAAC,GACpB,MAAO,CACHrE,OAAQqE,EAAMrE,OACdwM,KAAMnI,EAAMlF,MAAMD,YAClBuN,MAAOpI,EAAMoI,SAKmB,CAAE1N,cAAYqP,YVrI3B,SAAA5L,GAAM,8CAAI,WAAOjE,GAAP,eAAAC,EAAA,+EAENC,EAAWC,IAAX,kBAA0B8D,IAFpB,OAEvB9E,EAFuB,OAG7Ba,EAAS,CAAER,KAAMxC,EAAcyC,QAASN,EAASC,OAHpB,gDAK7BY,EAASf,GAAa,EAAD,KALQ,yDAAJ,uDUqIkC6Q,SVkG3C,SAACrP,EAAYwD,GAAb,8CAAwB,WAAOjE,EAAUU,GAAjB,iBAAAT,EAAA,sEAEhCU,EAAgBD,IAAWE,MAA3BD,YAFgC,SAGjBT,EAAWqB,MAAX,iBACT0C,GADS,2BAEdxD,GAFc,IAEFE,YAAaA,EAAYG,MALN,OAGlC3B,EAHkC,OAOxCa,EAAS,CAAER,KAAM9B,EAAW+B,QAASN,EAASC,OAPN,gDASxCY,EAASf,GAAa,EAAD,KATmB,yDAAxB,yDUlGqD8Q,YVhElD,SAACtP,EAAYwD,GAAb,8CAAwB,WAAOjE,EAAUU,GAAjB,iBAAAT,EAAA,6DACvCU,EAAgBD,IAAWE,MAA3BD,YADuC,kBAGpBT,EAAWW,KAC9B,UADmB,2BAEdJ,GAFc,IAEFE,YAAaA,EAAYG,GAAImE,KAAMhB,KALb,OAGrC9E,EAHqC,OAO3Ca,EAAS,CAAER,KAAMnC,EAAcoC,QAAS,CAAEmF,MAAOzF,EAASC,KAAM6F,KAAMhB,KAP3B,gDAS3CjE,EAASf,GAAa,EAAD,KATsB,yDAAxB,yDUgE+D+E,eAA3E6B,CAAyFmF,IA5P3F,SAAC,GAA+F,IAA7F/F,EAA4F,EAA5FA,KAAMxD,EAAsF,EAAtFA,OAAQoO,EAA8E,EAA9EA,YAAanF,EAAiE,EAAjEA,WAAYuD,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAO4B,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,YAAa/L,EAAiB,EAAjBA,WAEvF,EAA4BqG,oBAAS,GAArC,oBAAOsE,EAAP,KAAeC,EAAf,KACA,EAA4CvE,mBAAS,MAArD,oBAAO2F,EAAP,KAAuBC,EAAvB,KACA,EAA0B5F,mBAAS,IAAnC,oBAAO6F,EAAP,KAAcC,EAAd,KACA,EAA8B9F,mBAAS,QAAvC,oBAAO+F,EAAP,KAAgBC,EAAhB,KAEMC,EAAgBC,iBAAO,IAE7BlF,qBAAU,WACNwE,EAAY5K,EAAKnE,MAClB,IAEHuK,qBAAU,WACN4E,EAAkBhL,EAAKf,UAClBvC,KAAI,SAAAb,GAAE,OAAIW,EAAOX,SACvB,CAACW,EAAQwD,IAEZ,IAAMyJ,EAAa,SAAC9J,EAAOc,GAClB4K,EAAchP,QAAQsD,EAAM9D,MAC7BwP,EAAchP,QAAQsD,EAAM9D,IAAM,IAAI0P,KAAK9K,EAAO6F,QA0IpDkD,EAAU,SAACgC,GACTP,EAAMO,EAAM3P,MAAQ2P,EAAMrN,UAC1B+M,EAAS,2BAAKD,GAAN,mBAAcO,EAAM3P,GAAK2P,EAAMrN,aAoDzC8L,EAAQP,EAAS,aAAe,GAChCU,EAAOV,EAAS,OAAS,SAE/B,OACI,uCACI,sBAAK5I,UAAS,mBAAc4I,EAAS,WAAa,IAAM3I,QAAS,kBAAM4I,GAAWD,IAAlF,SACI,uBAAK5I,UAAU,SAAf,UACI,uBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAS,gBAAWmJ,GAAS9F,IAAG,2BACrC,8BAAKnE,EAAKiD,OA9JN,WACpB,GAAIwC,EACA,OACI,eAAC,GAAD,CACI9F,MAAK,yBAAoBK,EAAKiD,MAC9BmB,MAAM,iBACNxB,OAAQ,CACJ,CACIG,MAAO,QACPE,KAAM,QACN1I,KAAM,QACNkI,UAAU,IAGlBY,SAAU,SAAC7H,GACPsP,EAAYtP,EAAYwE,EAAKnE,IAC7B8N,GAAU,IAEdpF,KAAI,oBAAevE,EAAKnE,IACxBwG,SAAS,aA4IJ8E,MAEL,uBAAKrG,UAAU,aAAf,UACI,uBAAKA,UAAU,aAAf,UAA6Bd,EAAKf,UAAU3B,OAA5C,YACA,sBAAKwD,UAAU,aAAf,SAxFI,WAGpB,IAAM2K,EAAQnM,OAAOC,OAAO0L,GAAOS,QAAO,SAACC,EAAMC,GAC7C,OAAOD,EAAOC,IACf,GAEH,IAAKH,EACD,OAAO,KAGX,IAAMjD,EAAUC,KAAKC,MAAM+C,EAAQ,IAC7B9C,EAAUF,KAAKC,MAAM+C,EAAQ,IAAM,GAAK,IAAMhD,KAAKC,MAAM+C,EAAQ,IAAMhD,KAAKC,MAAM+C,EAAQ,IAChG,OACI,yCACQjD,EADR,YACmBG,KAyEsBkD,QA7D7B,SAAZV,EAEI,uBAAKrK,UAAU,WAAf,UACI,8CACA,sBACIA,UAAU,4BACVC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAFpB,kBAMA,sBACIR,UAAU,eACVC,QAAS,SAAAM,GACLA,EAAEC,kBACF8J,EAAW,SAJnB,oBAWW,SAAZD,EAEH,uBAAKrK,UAAU,WAAf,UACI,6CACA,sBACIA,UAAU,eACVC,QAAS,SAAAM,GACLA,EAAEC,kBACF8J,EAAW,SAJnB,kBASA,sBACItK,UAAU,4BACVC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAFpB,yBAbL,EA2CK,uBAAKR,UAAU,eAAf,UA7IS,WACrB,GAAI2E,EAAY,CAEZ,IAAMqG,EAAW9C,EAAKC,MACjBvM,KAAI,SAAAb,GAAE,OAAIoN,EAAMpN,MAChB8K,MAAK,SAAC3L,EAAG4D,GAAJ,OAAU5D,EAAEoN,SAAWxJ,EAAEwJ,UAAY,EAAI,KAC9C1L,KAAI,SAAA8N,GACD,GAAIA,EACA,MAAO,CAAEzI,MAAOyI,EAAEpC,SAAUpG,QAASwI,EAAEpC,aAKnD,OACI,eAAC,GAAD,CACIzI,MAAK,eAAUK,EAAKiD,MACpBmB,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,YACPE,KAAM,OACN1I,KAAM,QACNkI,UAAU,GACX,CACCM,MAAO,gBACPE,KAAM,WACN1I,KAAM,SACNsH,QAASiK,IAGjBzI,SAAU,SAAC7H,GAAD,OAAgBqP,EAASrP,EAAYwE,EAAKnE,KACpDqL,cAAe,CAAEjE,KAAMjD,EAAKiD,KAAMmF,SAAUpI,EAAKoI,UACjD7D,KAAI,oBAAevE,EAAKnE,IACxBuL,oBAAoB,KA6GfC,GAvGM,WACvB,GAAI5B,EACA,OACI,eAAC,GAAD,CACIpC,SAAU,kBAAMtE,EAAWiB,EAAKnE,KAChCsJ,YAAanF,EAAKiD,OAmGbqE,WAIb,wBACA,sBAAKxG,UAAS,0BAAqBsJ,GAAnC,SACKV,GAAUqB,GArNF,WAEjB,IAAIgB,EA2BJ,MAzBgB,SAAZZ,IAEAY,EAAYhB,EAAepE,MAAK,SAAC3L,EAAG4D,GAChC,OAAIyM,EAAchP,QAAQrB,EAAEa,KAAOwP,EAAchP,QAAQuC,EAAE/C,IACnDwP,EAAchP,QAAQrB,EAAEa,IAAMwP,EAAchP,QAAQuC,EAAE/C,KAC9C,EAED,EAEJwP,EAAchP,QAAQrB,EAAEa,KACvB,EACDwP,EAAchP,QAAQuC,EAAE/C,IACxB,OADJ,MAMC,SAAZsP,IAEAY,EAAYhB,EAAepE,MAAK,SAAC3L,EAAG4D,GAChC,OAAO5D,EAAE2E,MAAQf,EAAEe,OAAS,EAAI,MAKjCoM,EAAUrP,KAAI,SAAAiD,GACjB,GAAIA,EACA,OACI,eAAC,GAAD,CAAOA,MAAOA,EAAOK,KAAMA,EAAqBwJ,QAASA,EAASC,WAAYA,GAAxC9J,EAAM9D,OAqLnBmQ,YCpC9BpL,gBAdS,SAAAC,GAEpB,MAAO,CACHrB,cAAeqB,EAAMrB,cACrBwJ,KAAMnI,EAAMlF,MAAMD,YAClB2D,UAAWwB,EAAMxB,UACjBjD,SAAUyE,EAAMzE,SAChBe,QAAS0D,EAAM1D,QACfX,OAAQqE,EAAMrE,OACdyL,MAAOpH,EAAMoH,SAKmB,CAAE5M,gBAAcF,iBAAe8Q,iBXiTvC,SAACzQ,EAAYkF,GAAb,8CAAgC,WAAO3F,EAAUU,GAAjB,qBAAAT,EAAA,sEAEhDU,EAAgBD,IAAWE,MAA3BD,YACFqM,EAAOtM,IAAW+D,cAAckB,GAClClF,EAAW4N,OACL8C,EAAU,CACZjQ,WAAYT,EAAW4N,KACvBzJ,MAAOoI,EAAKpI,MACZU,QAAS0H,EAAK1H,QACdI,OAAQsH,EAAKtH,QAEjB1F,EAASe,GAAmBoQ,KAXwB,SAajCjR,EAAWqB,MAAX,yBACDoE,GADC,2BAEdlF,GAFc,IAEFE,YAAaA,EAAYG,MAfU,OAalD3B,EAbkD,OAiBxDa,EAAS,CAAER,KAAM5B,EACb6B,QAAS,CACLuB,aAAc7B,EAASC,KACvB6B,SAAUR,EAAWS,cApB2B,kDAwBxDlB,EAASf,GAAa,EAAD,KAxBmC,0DAAhC,yDWjTyD+F,uBAA1Ea,CAAgGmF,IAzM1F,SAAC,GAAkL,IAAhL/J,EAA+K,EAA/KA,SAAUqD,EAAqK,EAArKA,UAAW0I,EAA0J,EAA1JA,KAAMvI,EAAoJ,EAApJA,cAAeiG,EAAqI,EAArIA,WAAYrJ,EAAyH,EAAzHA,SAAUe,EAA+G,EAA/GA,QAASX,EAAsG,EAAtGA,OAAQnB,EAA8F,EAA9FA,aAAcF,EAAgF,EAAhFA,cAAe8Q,EAAiE,EAAjEA,iBAAkBlM,EAA+C,EAA/CA,mBAAoBkI,EAA2B,EAA3BA,MAAOuB,EAAoB,EAApBA,QAASR,EAAW,EAAXA,KAExL,EAAgC5D,mBAAS,MAAzC,oBAAO+G,EAAP,KAAiBC,EAAjB,KAEAhG,qBAAU,WACNjL,EAAc4M,EAAKpI,OACnBnD,EAAOuL,EAAKpI,OAAOvD,SAAS8C,SAAQ,SAAArD,GAChCR,EAAaQ,QAElB,IAEHuK,qBAAU,WACF5J,EAAOuL,EAAKpI,QACZyM,EAAY,CACJpQ,WACA2D,MAAOnD,EAAOuL,EAAKpI,OACnBU,QAASjE,EAAS2L,EAAK1H,SACvBI,OAAQtD,EAAQ4K,EAAKtH,QACrB2H,SAAUL,EAAKK,WAGnBjL,EAAQ4K,EAAKtH,SACb+I,EAAQ,CAAE3N,GAAIkM,EAAKlM,GAAIsC,SAAUhB,EAAQ4K,EAAKtH,QAAQtC,aAE/D,CAACqB,EAAcuI,EAAKlM,IAAKsB,EAAQ4K,EAAKtH,QAASjE,EAAOuL,EAAKpI,OAAQvD,EAAS2L,EAAK1H,WAEpF,IA8HMhE,EAAU4L,EAAMiC,YAAcjC,EAAMiC,YAAYjC,MAAQ,KACxDC,EAASD,EAAMC,OAASD,EAAMC,OAAOrM,GAAK,KAE5CsO,EAAe,GAOnB,OALI9N,GAAW0L,EAAKtH,SAChB0J,EAAejC,IAAWlM,EAASH,IAAMQ,IAAY0L,EAAKtH,OAAS,eAAiB,IAKpF,sBAAKK,UAAU,eAAf,SACI,sBAAKA,UAAS,iCAA4BqJ,GAA1C,SACI,uBAAKrJ,UAAU,SAAf,UACI,uBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,gBAAf,SACI,6BAAIiH,EAAKK,aAEb,8BAAKL,GAAQvL,EAAOuL,EAAKpI,QAAUnD,EAAOuL,EAAKpI,OAAOA,WA9IlEwM,GAAYA,EAAS1L,QAAU0L,EAAS9L,QACjC,eAAC,GAAD,CAAe0H,KAAMoE,EAAU7D,WAAW,aAG7C,uBAAKxH,UAAU,yBAAf,UACI,6BACK1E,EAAS2L,EAAK1H,SAAd,UAA4BjE,EAAS2L,EAAK1H,SAAS4C,MAAS,wBAEjE,uDA0IA,uBAAKnC,UAAU,eAAf,UAzHS,WACrB,GAAI2E,GAAcjJ,EAAOuL,EAAKpI,OAAQ,CAElC,IAAM0M,EAAa/M,OAAOC,OAAOC,GAC5BC,QAAO,SAAA6M,GAAC,OAAItQ,EAAS6D,MAAMC,SAASwM,EAAEzQ,OACtC8K,MAAK,SAAC3L,EAAE4D,GAAH,OAAS5D,EAAEoN,SAAWxJ,EAAEwJ,UAAY,EAAI,KAC7C1L,KAAI,SAAA4P,GACD,MAAO,CAAEvK,MAAOuK,EAAElE,SAAUpG,QAASsK,EAAElE,aAKzCmE,EAFY/P,EAAOuL,EAAKpI,OAEEvD,SAASM,KAAI,SAAAb,GAAE,OAAIO,EAASP,MAEtD2Q,EAAeD,EAAc7P,KAAI,SAAAG,GACnC,GAAIA,EACA,OAAOA,EAAEM,QAAQT,KAAI,SAAAb,GAAE,OAAIsB,EAAQtB,SAKrC4Q,EAAc,GAEpBF,EAAcrN,SAAQ,SAACrC,EAAGgG,GAClB2J,EAAa3J,IACb2J,EAAa3J,GAAG3D,SAAQ,SAAAN,GACpB,GAAIA,EAAG,CACH,IAAIvC,EAAU,GACVQ,EAAER,SAAWuC,EAAExB,SACff,EAAS,cAEboQ,EAAY7R,KAAK,CACbmH,MAAOnD,EAAE/C,GACTmG,QAAQ,GAAD,OAAKnF,EAAEoG,KAAP,eAAkBsD,KAAOC,IAAI5H,EAAE0H,MAAMG,OAAO,aAA5C,OAA0DpK,YAQrF,IAIMiO,EAJgBtB,EAAK3J,UACtBI,QAAO,SAAA5D,GAAE,OAAIA,IAAOG,EAASH,MAC7Ba,KAAI,SAAAb,GAAE,OAAIwD,EAAUxD,MAEaa,KAAI,SAAAkD,GACtC,GAAIA,EACA,MAAO,CAAEmC,MAAOnC,EAAG/D,GAAImG,QAASpC,EAAGqD,SAM3C,OAFAqH,EAAgBG,QAAQ,CAAE1I,MAAO,KAAMC,QAAS,KAG5C,eAAC,GAAD,CACIoC,MAAM,mBACNzE,MAAK,eAAUnD,EAAOuL,EAAKpI,OAAOA,OAClC0D,SAAU,SAAA7H,GAAU,OAlEf,SAAAA,GACjB,IAAMW,EAAcmD,OAAOC,OAAOnD,GAAUQ,MAAK,SAAAC,GAAC,OAAIA,EAAEM,QAAQ2C,SAAStE,EAAWiF,WACpFwL,EAAiB,2BACVzQ,GADS,IAEZ6E,QAASlE,EAAYN,GACrBI,WAAYD,EAASH,KACtBkM,EAAKlM,IA4D4B+K,CAAapL,IACrCoH,OAAQ,CACJ,CACIK,KAAM,WACNF,MAAO,WACPxI,KAAM,SACNsH,QAASwK,GAEb,CACIpJ,KAAM,SACNF,MAAO,SACPxI,KAAM,SACNsH,QAAS4K,EACThK,UAAU,GAEd,CACIM,MAAO,kBACPE,KAAM,OACN1I,KAAM,SACNsH,QAASyI,IAGjBpD,cAAea,EAAKtH,OAAL,2BAAmB3D,KAAEC,KAAKgL,EAAM,WAAY,WAA5C,IAAuDqB,KAAM,OAAS,CAAEhB,SAAUL,EAAKK,SAAUgB,KAAM,MACtH7E,KAAI,4BAAuBwD,EAAKlM,IAChCuL,oBAAoB,EACpB/E,SAAS,eAwCJgF,GAlCM,WACvB,GAAI5B,EACA,OACI,eAAC,GAAD,CACIpC,SAAU,kBAAMtD,EAAmBgI,EAAKlM,GAAIG,EAASH,KACrDsJ,YAAa3I,EAAOuL,EAAKpI,OAAOA,QA8B3B2H,iBCzBV1G,gBARS,SAAAC,GACpB,MAAO,CACHxB,UAAWwB,EAAMxB,UACjBG,cAAeqB,EAAMrB,cACrBwJ,KAAMnI,EAAMlF,MAAMD,eAIc,CAAEgR,mBZIR,SAAAzQ,GAAU,8CAAI,WAAOlB,GAAP,eAAAC,EAAA,+EAEjBC,EAAWC,IAAX,yBAAiCe,IAFhB,OAElC/B,EAFkC,OAGxCa,EAAS,CAAER,KAAM7C,EAAqB8C,QAASN,EAASC,OAHhB,gDAKxCY,EAASf,GAAa,EAAD,KALmB,yDAAJ,uDYJkB2S,eZogBhC,SAAA1Q,GAAU,8CAAI,WAAOlB,EAAUU,GAAjB,iBAAAT,EAAA,6DAEhCU,EAAgBD,IAAWE,MAA3BD,YAFgC,kBAIbT,EAAWW,KAC9B,oBACA,CACIK,aACAP,YAAaA,EAAYG,KARG,QAI9B3B,EAJ8B,QAW3BC,KAAK0F,MAAMX,SAAQ,SAAAwB,GACxB3F,EAASgF,GAAmBW,EAAgBxG,EAASC,KAAK0B,QAE9Dd,EAAS,CAAER,KAAMtB,EAAiBuB,QAASN,EAASC,OAdhB,gDAgBpCY,EAASf,GAAa,EAAD,KAhBe,yDAAJ,0DYpgBzB4G,CAAiEmF,IAxJ/D,SAAC,GAAkG,IAAhG/J,EAA+F,EAA/FA,SAAUqD,EAAqF,EAArFA,UAAWqN,EAA0E,EAA1EA,mBAAoBlN,EAAsD,EAAtDA,cAAeiG,EAAuC,EAAvCA,WAAYkH,EAA2B,EAA3BA,eAAgB3D,EAAW,EAAXA,KAEpG,EAA4B5D,oBAAS,GAArC,oBAAOsE,EAAP,KAAeC,EAAf,KACA,EAAwCvE,mBAAS,IAAjD,oBAAOwH,EAAP,KAAqBC,EAArB,KACA,EAA0BzH,mBAAS,IAAnC,oBAAO6F,EAAP,KAAcC,EAAd,KACA,EAA0C9F,mBAAS,MAAnD,oBAAO0H,EAAP,KAAsBC,EAAtB,KAGA3G,qBAAU,WACNsG,EAAmB1Q,EAASH,MAC7B,IAEHuK,qBAAU,WACN2G,EAAiB/Q,EAAS6D,MAAMnD,KAAI,SAAAb,GAAE,OAAI2D,EAAc3D,SACzD,CAAC2D,EAAexD,EAAS6D,QAe5BuG,qBAAU,WACN,GAAI4C,EAAK3J,UAAU/B,OAAQ,CACvB,IAAM0P,EAAkBhE,EAAK3J,UAAU3C,KAAI,SAAAb,GAAE,OAAIwD,EAAUxD,MAAK8K,MAAK,SAAC3L,EAAG4D,GACrE,OAAI5D,EAAEoN,SAAWxJ,EAAEwJ,UACP,EAERxJ,EAAEwJ,SAAWpN,EAAEoN,SACR,OADX,KAIJyE,EAAgBG,EAAgBtQ,KAAI,SAAA8N,GAChC,GAAIA,EACA,MAAO,CAAEzI,MAAOyI,EAAEpC,SAAUpG,QAASwI,EAAEpC,iBAIpD,CAAC/I,IAEJ,IA6DMmK,EAAU,SAACgC,GACTP,EAAMO,EAAM3P,MAAQ2P,EAAMrN,UAC1B+M,EAAS,2BAAKD,GAAN,mBAAcO,EAAM3P,GAAK2P,EAAMrN,aAKzC8L,EAAQP,EAAS,aAAe,GAChCU,EAAOV,EAAS,OAAS,SAE/B,OACI,uCACI,sBAAK5I,UAAS,mBAAc4I,EAAS,WAAa,IAAM3I,QAAS,kBAAM4I,GAAWD,IAAlF,SACI,uBAAK5I,UAAU,mBAAf,UACI,uBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAS,gBAAWmJ,GAAS9F,IAAG,4BACrC,8BAAKnI,EAASiH,UAElB,uBAAKnC,UAAU,aAAf,UACI,uBAAKA,UAAU,aAAf,UAA6B9E,EAAS6D,MAAMvC,OAA5C,YACA,sBAAKwD,UAAU,aAAf,SAxCI,WAGpB,IAAM2K,EAAQnM,OAAOC,OAAO0L,GAAOS,QAAO,SAACC,EAAMC,GAC7C,OAAOD,EAAOC,IACf,GAEH,IAAKH,EACD,OAAO,KAGX,IAAMjD,EAAUC,KAAKC,MAAM+C,EAAQ,IAC7B9C,EAAUF,KAAKC,MAAM+C,EAAQ,IAAM,GAAK,IAAMhD,KAAKC,MAAM+C,EAAQ,IAAMhD,KAAKC,MAAM+C,EAAQ,IAChG,OACI,yCACQjD,EADR,YACmBG,KAyBsBkD,QAEjC,uBAAK/K,UAAU,eAAf,UAnFS,WACrB,GAAI2E,EAGA,OACI,eAAC,GAAD,CACI9F,MAAK,eAAU3D,EAASiH,MACxBmB,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,gBACPE,KAAM,OACN1I,KAAM,SACP,CACCwI,MAAO,oBACPE,KAAM,WACN1I,KAAM,SACNsH,QAAS+K,IAGjBvJ,SAAU,SAAC7H,GAAD,OZ2aF,SAACA,EAAYS,GAAb,8CAA4B,WAAOlB,EAAUU,GAAjB,iBAAAT,EAAA,sEAExCU,EAAgBD,IAAWE,MAA3BD,YAFwC,SAGzBT,EAAWqB,MAAX,qBACLL,GADK,2BAEdT,GAFc,IAEFE,YAAaA,EAAYG,MALE,OAG1C3B,EAH0C,OAOhDa,EAAS,CAAER,KAAM7B,EAAe8B,QAASN,EAASC,OAPF,gDAShDY,EAASf,GAAa,EAAD,KAT2B,yDAA5B,wDY3akBiT,CAAazR,EAAYQ,EAASH,KAC5DqL,cAAepK,KAAEC,KAAKf,EAAU,OAAQ,YACxCuI,KAAI,eAAUvI,EAASH,IACvBuL,oBAAoB,EACpB/E,SAAS,aA4DAgF,GAtDE,WACvB,GAAI5B,EACA,OACI,eAAC,GAAD,CACIpC,SAAU,kBAAMsJ,EAAe3Q,EAASH,KACxCsJ,YAAanJ,EAASiH,OAkDbqE,WAIjB,wBACA,sBAAKxG,UAAS,0BAAqBsJ,GAAnC,SACKV,IAxHToD,EAAcnG,MAAK,SAAC3L,EAAG4D,GAAJ,OAAU5D,EAAEoN,SAAWxJ,EAAEwJ,UAAY,EAAI,KAErD0E,EAAcpQ,KAAI,SAAAqL,GACrB,GAAIA,EACA,OACA,eAAC,GAAD,CAAcA,KAAMA,EAAM/L,SAAUA,EAAwBwN,QAASA,GAAlBzB,EAAKlM,iBC6GzD+E,gBARS,SAAAC,GACpB,MAAO,CACHoI,MAAOpI,EAAMoI,MACb5J,UAAWwB,EAAMxB,UACjB6K,YAAarJ,EAAMoH,MAAMiC,eAIO,CAAEgD,WbrBhB,SAAAC,GAAM,8CAAI,WAAOpS,GAAP,eAAAC,EAAA,+EAELC,EAAWC,IAAX,iBAAyBiS,IAFpB,OAEtBjT,EAFsB,OAG5Ba,EAAS,CAAER,KAAM9C,EAAa+C,QAASN,EAASC,OAHpB,gDAK5BY,EAASf,GAAa,EAAD,KALO,yDAAJ,uDaqBsBoT,ebexB,SAAAD,GAAM,8CAAI,WAAOpS,GAAP,eAAAC,EAAA,+EAETC,EAAWC,IAAX,qBAA6BiS,IAFpB,OAE1BjT,EAF0B,OAGhCa,EAAS,CAAER,KAAM3C,EAAiB4C,QAASN,EAASC,OAHpB,gDAKhCY,EAASf,GAAa,EAAD,KALW,yDAAJ,uDafkCuB,cAAY8R,ebqLpD,SAAA7R,GAAU,8CAAI,WAAOT,EAAUU,GAAjB,iBAAAT,EAAA,sEAE5BU,EAAgBD,IAAWE,MAA3BD,YAF4B,SAGbT,EAAWW,KAC9B,aADmB,2BAEdJ,GAFc,IAEFE,YAAaA,EAAYG,MALV,OAG9B3B,EAH8B,OAOpCa,EAAS,CAAER,KAAMlC,EAAiBmC,QAASN,EAASC,OAPhB,gDASpCY,EAASf,GAAa,EAAD,KATe,yDAAJ,0DarLzB4G,CAAqFmF,IApI9E,SAAC,GAAiH,IAA/GqH,EAA8G,EAA9GA,eAAgB7R,EAA8F,EAA9FA,WAAY2R,EAAkF,EAAlFA,WAAYjE,EAAsE,EAAtEA,MAAO5J,EAA+D,EAA/DA,UAAW2J,EAAoD,EAApDA,KAAMvD,EAA8C,EAA9CA,WAAY4H,EAAkC,EAAlCA,eAAgBnD,EAAkB,EAAlBA,YAEjH,EAAgC9E,mBAAS,IAAzC,oBAAO0G,EAAP,KAAiBwB,EAAjB,KACA,EAAwClI,mBAAS,IAAjD,oBAAOwH,EAAP,KAAqBC,EAArB,KAEAzG,qBAAU,WACN8G,EAAWlE,EAAKnN,IAChBuR,EAAepE,EAAKnN,MACrB,IAEHuK,qBAAU,WACNkH,EAAYtE,EAAKC,MAAMvM,KAAI,SAAAb,GAAE,OAAIoN,EAAMpN,MAAK8K,MAAK,SAAC3L,EAAG4D,GACjD,OAAI5D,EAAEoN,SAAWxJ,EAAEwJ,UACP,EAERxJ,EAAEwJ,SAAWpN,EAAEoN,SACR,OADX,QAIL,CAACa,IAEJ7C,qBAAU,WACNyG,EAAgB7D,EAAK3J,UAAU3C,KAAI,SAAAb,GAAE,OAAIwD,EAAUxD,MAAK8K,MAAK,SAAC3L,EAAG4D,GAC7D,OAAI5D,EAAEoN,SAAWxJ,EAAEwJ,UACP,EAERxJ,EAAEwJ,SAAWpN,EAAEoN,SACR,OADX,QAIL,CAAC/I,IAEJ,IA8DMkO,EAAgBrD,EAAc,iBAAmB,GAEvD,OACI,uBAAKpJ,UAAS,eAAUyM,GAAxB,UACI,uBAAKzM,UAAU,iBAAf,UACI,qBAAIA,UAAU,gBAAd,mBACA,sBAAKA,UAAU,cAAf,SAxDgB,WACxB,GAAI2E,EACA,OACI,eAAC,GAAD,CACIpC,SAAU,SAAA7H,GAAU,OAAID,EAAWC,IACnCmE,MAAM,aACNyE,MAAM,kBACNxB,OAAQ,CAAC,CACLG,MAAO,YACPE,KAAM,WACN1I,KAAM,QACNkI,UAAU,IAEdJ,SAAS,aA4CRmL,QAGT,wBACCvE,GAvEE6C,EAASpP,KAAI,SAAAsD,GAChB,GAAIA,EACA,OACI,eAAC,GAAD,CAAMA,KAAMA,GAAWA,EAAKnE,OAqEpC,uBAAKiF,UAAU,YAAf,UACI,uBAAKA,UAAU,iBAAf,UACI,qBAAIA,UAAU,gBAAd,uBACA,sBAAKA,UAAU,cAAf,SA7CgB,WAC5B,GAAI2E,EACA,OACI,eAAC,GAAD,CACIpC,SAAU,SAAA7H,GAAU,OAAI6R,EAAe7R,IACvCmE,MAAM,iBACNyE,MAAM,kBACNxB,OAAQ,CAAC,CACLG,MAAO,gBACPE,KAAM,eACN1I,KAAM,QACNkI,UAAU,IAEdJ,SAAS,aAiCJoL,QAGT,wBACCpO,GA7BFuN,EAAalQ,KAAI,SAAAV,GACpB,GAAIA,EACA,OACI,eAAC,GAAD,CAAUA,SAAUA,GAAeA,EAASH,iBC3F1D6R,G,oDAEF,WAAYzM,GAAQ,IAAD,+BACf,cAAMA,IAUVJ,MAAQ,CAAE8M,OAAQ,GAAIC,eAAgB,GAXnB,EAoBnBvH,YAAc,SAAAC,GACV,OAAOC,KAAOC,IAAIF,GAAMG,OAAO,aArBhB,EA4BnBoH,aAAe,WACX,IAAMzF,EAAY,EAAKH,MAAM5L,QAAQyR,YAAc,EAAK7F,MAAM5L,QAAQ8B,SAAY,IAClF,EAAKoK,KAAO,EAAKwF,WAAW,EAAK9F,MAAM5L,QAAQyR,aAC1CE,MAAM5F,IACP,EAAK1G,SAAS,CACVkM,eAAgBxF,KAjCT,EAsCnB6F,kBAAoB,SAAC5M,GACF,UAAXA,EAAE6M,OACF7M,EAAE8M,iBACE,EAAKlN,MAAMmN,MACX,EAAKC,OAEL,EAAKD,UA5CE,EAiDnBE,WAAa,WAET,EAAKrN,MAAMpG,WADK,qEAlDD,EA6HnB0T,SAAW,WAEP,EAAKtN,MAAMsN,YA/HI,EAmInBF,KAAO,WACH,EAAKpN,MAAMN,aApII,EAuInByN,MAAQ,WACJ,EAAKnN,MAAMuN,cAxII,EA2InBC,eAAiB,SAACpN,GACd,IAAM+G,EAAY/G,EAAEtD,OAAOgE,MAAQ,IAAQ,EAAKkG,MAAM5L,QAAQ8B,SAC9D,EAAK8J,MAAM5L,QAAQyR,YAAc1F,GA7IlB,EAgJnBsG,cAAgB,WAER,EAAKzN,MAAMoN,KACX,EAAKD,QAEL,EAAKC,QAlJL,EAAK/X,IAAM,kCAIf,EAAK2R,MAAQvE,IAAMC,YAPJ,E,+CAanB,SAAW4E,GAEP,IAAIC,EAAUD,EAAO,IAAP,WAAiBE,KAAKC,MAAMH,EAAK,KAAQE,KAAKC,MAAMH,EAAK,IACnEI,EAAUJ,EAAO,GAAK,GAAZ,WAAqBE,KAAKC,MAAMH,EAAO,KAAQE,KAAKC,MAAMH,EAAO,IAC/E,MAAM,GAAN,OAAUC,EAAV,YAAqBG,K,qBAOzB,SAAQ9M,GACJ,MAAM,GAAN,OAAUiI,KAAKxN,IAAf,sBAAgCuF,EAAhC,U,+BA6BJ,WAMIiI,KAAKmE,MAAM5L,QAAU,IAAIsS,MAEzB7K,KAAKmE,MAAM5L,QAAQ2H,iBAAiB,aAAcF,KAAK+J,cAEvD/J,KAAKmE,MAAM5L,QAAQ2H,iBAAiB,QAASF,KAAKwK,YAIlDxK,KAAKmE,MAAM5L,QAAQ2H,iBAAiB,QAASF,KAAKyK,UAIlDxK,SAASC,iBAAiB,UAAWF,KAAKmK,mBAG1CnK,KAAKmE,MAAM5L,QAAQ2H,iBAAiB,iBAAkBF,KAAKmE,MAAM5L,QAAQgS,Q,gCAM7E,SAAmBzK,GAIVE,KAAK8K,WACNjR,OAAOkR,OAAOlR,OAAOmR,QAASnR,OAAOoR,QAAU,IAC/CjL,KAAK8K,UAAW,GAGhB9K,KAAK7C,MAAM8G,MAIPjE,KAAK7C,MAAM8G,OAASnE,EAAUmE,MAC9BjE,KAAKmE,MAAM5L,QAAQ8H,IAAIL,KAAKkL,QAAQlL,KAAK7C,MAAM8G,KAAKE,OACpDnE,KAAKmE,MAAM5L,QAAQsR,OAAS7J,KAAK7C,MAAM0M,OAAS,KAEzC7J,KAAK7C,MAAMoN,MAAQzK,EAAUwK,MAEpCtK,KAAKmE,MAAM5L,QAAQgS,OACZvK,KAAK7C,MAAMmN,OAASxK,EAAUyK,MACrCvK,KAAKmE,MAAM5L,QAAQ+R,QAEnBtK,KAAK7C,MAAM0M,SAAW/J,EAAU+J,SAChC7J,KAAKmE,MAAM5L,QAAQsR,OAAS7J,KAAK7C,MAAM0M,OAAS,MAIpD7J,KAAKmE,MAAM5L,QAAQ+R,U,kCAI3B,WACIrK,SAASG,oBAAoB,UAAWJ,KAAKmK,mBAE7CnK,KAAKmE,MAAM5L,QAAQ8H,IAAI,GACvBL,KAAKmE,MAAM5L,QAAQ6H,oBAAoB,aAAcJ,KAAK+J,cAC1D/J,KAAKmE,MAAM5L,QAAQ6H,oBAAoB,QAASJ,KAAKwK,YACrDxK,KAAKmE,MAAM5L,QAAQ6H,oBAAoB,QAASJ,KAAKyK,UACrDzK,KAAKmE,MAAM5L,QAAQ6H,oBAAoB,iBAAkBJ,KAAKmE,MAAM5L,QAAQgS,MAE5EvK,KAAK7C,MAAMgO,oB,oBAgCf,WAEI,OAAInL,KAAK7C,MAAM8G,KAGP,uBAAKjH,UAAU,UAAf,UACI,uBAAKA,UAAU,iBAAf,UACQ,sBAAKA,UAAU,gBAAf,SACI,6BAAIgD,KAAK7C,MAAM8G,KAAKpI,MAAMA,UAElC,sBAAKmB,UAAU,qBAAqBC,QAAS+C,KAAK4K,cAAlD,SACI,sBAAK5N,UAAU,eAAeqD,IAAKL,KAAK7C,MAAMoN,KAAO,oBAAsB,uBAE/E,uBAAKvN,UAAU,eAAf,UACI,uBAAKA,UAAU,sBAAf,UACI,0CACA,6BAAIgD,KAAK7C,MAAM8G,KAAK1H,aAExB,uBAAKS,UAAU,sBAAf,UACI,uCACA,6BAAIgD,KAAKuC,YAAYvC,KAAK7C,MAAM8G,KAAKzB,iBAIjD,uBAAKxF,UAAU,uBAAf,UACI,sBAAKA,UAAU,kBAAf,SACKgD,KAAKyE,OAEV,wBACIhO,KAAK,QACL2U,IAAI,IACJC,IAAI,OACJpN,MAAO+B,KAAKjD,MAAM+M,eAClB9M,UAAU,aACVsO,QAAStL,KAAK2K,iBAElB,sBAAK3N,UAAU,kBAAf,SACKgD,KAAKiK,WAAWjK,KAAK7C,MAAM8G,KAAK5J,kBAM1C,S,GAvMQuF,IAAMW,WAqNlBzD,gBATS,SAAAC,GACpB,MAAO,CACHkH,KAAMlH,EAAMoH,MAAMiC,YAClBmE,KAAMxN,EAAMoH,MAAMoG,KAClBD,MAAOvN,EAAMoH,MAAMmG,MACnBT,OAAQ9M,EAAMoH,MAAM0F,UAIY,CAAEhN,aAAW6N,Wdof3B,WACtB,MAAO,CAAEjU,KAAMf,Icrf8C+U,Sd2hBzC,kBAAM,SAACxT,EAAUU,GACrC,MAAgCA,IAAWwM,MAAnCC,EAAR,EAAQA,OAAQgC,EAAhB,EAAgBA,YAChB,GAAIhC,EAAOjJ,UAAW,CAClB,IAAMoQ,EAAYnH,EAAOjJ,UACpBvC,KAAI,SAAAb,GAAE,OAAIJ,IAAWe,OAAOX,MAC5B8K,MAAK,SAAC3L,EAAG4D,GACN,OAAI5D,EAAEgL,gBAAkBpH,EAAEoH,eAClB,IAAIuF,KAAKvQ,EAAEgL,eAAeM,MAAQ,IAAIiF,KAAK3M,EAAEoH,eAAeM,OACpD,EAED,EAEJtL,EAAEgL,gBACD,EACDpH,EAAEoH,eACF,OADJ,KAKT+B,EAAOsH,EAAUA,EAAUC,QAAQpF,EAAYvK,OAAS,GAE9D,GAAIoI,GAAQA,EAAKP,iBAAmBO,EAAK/B,eAAgB,CACrD,IAAM3F,EAAU5E,IAAWW,SAAS2L,EAAKP,gBAAgB3L,IACnD4E,EAAShF,IAAW0B,QAAQ4K,EAAK/B,eAAenK,IAEhDmM,EAAa,CACfrI,MAAOoI,EACP1H,QAASA,EAAQ4C,KACjBqD,KAAM7F,EAAO6F,KACbnI,SAAUsC,EAAOtC,SACjB8J,MAAOxH,EAAO5E,IAGlBd,EAAS,CAAER,KAAMb,GAAWc,QAASwN,SAErCjN,EAAS,CAAER,KAAMX,KAGzB,GAAIsO,EAAOrI,MAAO,CAOd,IANA,IAGIkI,EAHEwH,EAAWrH,EAAOrI,MAAMnD,KAAI,SAAAb,GAAE,OAAIJ,IAAW+D,cAAc3D,MAC5D8K,MAAK,SAAC3L,EAAE4D,GAAH,OAAS5D,EAAEoN,SAAWxJ,EAAEwJ,UAAa,EAAI,KAG/CoH,EAAQtF,EAAY9B,SAEjBoH,EAAQD,EAASjS,QAAQ,CAC5B,GAA+B,OAA3BiS,EAASC,GAAO/O,OAAiB,CACjCsH,EAAOwH,EAASC,GAChB,MAEJA,IAGJ,IAAKzH,EACD,OAAOhN,EAAS,CAAER,KAAMX,KAG5B,IAAMyG,EAAU5E,IAAWW,SAAS2L,EAAK1H,SACnCI,EAAShF,IAAW0B,QAAQ4K,EAAKtH,QAGjCuH,EAAa,CACfrI,MAHUlE,IAAWe,OAAOuL,EAAKpI,OAIjCU,QAASA,EAAQ4C,KACjBqD,KAAM7F,EAAO6F,KACbnI,SAAUsC,EAAOtC,SACjB8J,MAAOxH,EAAO5E,GACduM,SAAUL,EAAKK,UAEnBrN,EAAS,CAAER,KAAMb,GAAWc,QAASwN,OchmB8BnN,cAAYoU,gBdymBxD,WAC3B,MAAO,CAAE1U,KAAMX,Mc1mBJgH,CAA2F8M,ICpH3F9M,gBATS,SAAAC,GACpB,MAAO,CACHmI,KAAMnI,EAAMlF,MAAMD,YAClBkK,KAAM/E,EAAMgF,KAAK4J,YACjBC,SAAU7O,EAAMgF,KAAK8J,WACrBhC,OAAQ9M,EAAMoH,MAAM0F,UAIY,CAAEiC,UfDjB,SAAAC,GAAQ,8CAAI,WAAO9U,GAAP,eAAAC,EAAA,+EAENC,EAAWC,IAAX,iBAAyB2U,IAFnB,OAEvB3V,EAFuB,OAG7Ba,EAAS,CAAER,KAAM1C,EAAY2C,QAASN,EAASC,OAHlB,gDAK7BY,EAASf,GAAa,EAAD,KALQ,yDAAJ,uDeCoBS,WAASqV,afytBlC,SAAA/N,GACxB,MAAO,CAAExH,KAAMZ,GAAea,QAASuH,Ke1tB5BnB,CAA+DmF,IA/F/D,SAAC,GAAyG,IAAvG6J,EAAsG,EAAtGA,UAAW5G,EAA2F,EAA3FA,KAAM+G,EAAqF,EAArFA,MAAOtK,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,aAAcE,EAAoD,EAApDA,KAAM8J,EAA8C,EAA9CA,SAAUjV,EAAoC,EAApCA,QAASkT,EAA2B,EAA3BA,OAAQmC,EAAmB,EAAnBA,aAEjG,EAA4B1K,oBAAS,GAArC,oBAAOsE,EAAP,KAAeC,EAAf,KACMqG,EAAO1E,iBAAO,MAEpBlF,qBAAU,WAGN,OAFAwJ,EAAUG,EAAME,OAAOJ,UACvB9L,SAASC,iBAAiB,QAASkM,EAAgB,CAAEjM,SAAS,IACvD,WACHF,SAASG,oBAAoB,QAASgM,EAAgB,CAAEjM,SAAS,OAEtE,IAEHmC,qBAAU,WACNV,MACD,CAACsD,EAAMpD,IAEV,IAAMsK,EAAiB,SAAC7O,GAChB2O,EAAK3T,SAAW2T,EAAK3T,QAAQoF,SAASJ,EAAEtD,SAG5C4L,GAAU,IAkCd,OAAO,uCAEH,uBAAK7I,UAAU,SAAf,UACI,eAAC,GAAD,IACA,uBAAKA,UAAU,cAAf,UACI,uBAAKA,UAAU,YAAf,UACI,8BAAKkI,GAAQA,EAAK/F,OAClB,uBAAKnC,UAAU,cAAcU,IAAKwO,EAAMjP,QAAS,kBAAM4I,GAAWD,IAAlE,UACI,sBAAKvF,IAAI,oBACRuF,IAAWjE,EArCxB,uBAAK3E,UAAU,OAAf,UACI,eAAC,KAAD,CAAMA,UAAU,YAAYqP,GAAG,QAA/B,uBACA,eAAC,KAAD,CAAMrP,UAAU,YAAYqP,GAAG,QAA/B,kBACA,sBAAKrP,UAAU,YAAYC,QAAStG,EAApC,yBAOJ,uBAAKqG,UAAU,OAAf,UACI,eAAC,KAAD,CAAMA,UAAU,YAAYqP,GAAG,IAA/B,kBACA,eAAC,KAAD,CAAMrP,UAAU,YAAYqP,GAAG,QAA/B,kBACA,eAAC,KAAD,CAAMrP,UAAU,YAAYqP,GAAG,UAA/B,+BA2BA,uBAAKrP,UAAU,mBAAf,UACI,wBACIvG,KAAK,QACL2U,IAAI,IAAIC,IAAI,MACZrO,UAAU,SACViB,MAAO4L,EACPyB,QAAS,SAAA/N,GAAC,OAAIyO,EAAazO,EAAEtD,OAAOgE,UAExC,sBAAKoC,IAAI,gCA7BhB6E,EAGD0G,IAAa9J,EACN,KAEJ,eAACwK,GAAD,CAAMpH,KAAMA,IALR,YC0CJpI,gBAPS,SAAAC,GACpB,MAAO,CACH+E,KAAM/E,EAAMgF,KAAKD,KACjBjK,MAAOkF,EAAMlF,SAImB,CAAE0U,WhB+EhB,SAAA7U,GAAU,8CAAI,WAAOT,GAAP,eAAAC,EAAA,+EAETC,EAAWW,KAAK,SAAUJ,GAFjB,OAE1BtB,EAF0B,OAGhCa,EAAS,CAAER,KAAM/B,EAAagC,QAASN,EAASC,OAHhB,gDAKhCY,EAASf,GAAa,EAAD,KALW,yDAAJ,uDgB/EkBc,cAAYwV,ShB8P1C,SAAC9U,EAAY2R,GAAb,8CAAwB,WAAMpS,GAAN,eAAAC,EAAA,+EAEjBC,EAAWqB,MAAM,SAAjB,2BAAgCd,GAAhC,IAA4CE,YAAayR,KAFxC,OAElCjT,EAFkC,OAGxCa,EAAS,CAAER,KAAMxB,EAAWyB,QAASN,EAASC,OAHN,gDAKxCY,EAASf,GAAa,EAAD,KALmB,yDAAxB,uDgB9PoDuW,WhBmclD,SAAApD,GAAM,8CAAI,WAAMpS,GAAN,eAAAC,EAAA,+EAELC,EAAWW,KAC9B,gBACA,CAAEF,YAAayR,IAJS,QAEtBjT,EAFsB,QAMnBC,KAAK8O,MAAM/J,SAAQ,SAAAF,GACxBjE,EAASgE,GAAWC,EAAQ9E,EAASC,KAAK0B,QAE9Cd,EAAS,CAAER,KAAMjB,EAAakB,QAASN,EAASC,OATpB,gDAW5BY,EAASf,GAAa,EAAD,KAXO,yDAAJ,uDgBncwDS,YAAzEmG,EA1FF,SAAC,GAA4E,IAA1EgF,EAAyE,EAAzEA,KAAMjK,EAAmE,EAAnEA,MAAO0U,EAA4D,EAA5DA,WAAYvV,EAAgD,EAAhDA,WAAYwV,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAY9V,EAAc,EAAdA,QAEvE2L,qBAAU,WACNtL,MACD,IAuCH,OAAI8K,EACO,uCACH,uBAAK9E,UAAU,cAAf,UACI,uBAAKA,UAAU,kBAAf,UACI,sBAAIA,UAAU,aAAd,UACK8E,EAAK4K,SADV,cAGA,eAAC,GAAD,CACInN,SAAU,SAAA7H,GAAU,OAAI6U,EAAW7U,IACnCmE,MAAM,gBACNyE,MAAM,iBACNxB,OAAQ,CAAC,CACLG,MAAO,YACPE,KAAM,WACN1I,KAAM,eAIlB,uBAAKuG,UAAU,kBAAf,UACI,eAAC,KAAD,CAAMA,UAAU,YAAYqP,GAAG,IAA/B,kBAGA,sBAAKrP,UAAU,YAAYC,QAAStG,EAApC,4BAKR,wBACA,sBAAKqG,UAAU,YAAf,SAjEY,WAChB,IAAM2P,EAAW7K,EAAKjK,MAAMe,KAAI,SAAAb,GAAE,OAAIF,EAAME,MAC5C,OAAK4U,EAASnT,QAAWmT,EAAS,GAG3BA,EAAS/T,KAAI,SAAAsM,GAChB,GAAIA,EACA,OACI,uBAAKlI,UAAU,YAAf,UACI,eAAC,KAAD,CAAMqP,GAAE,WAAMnH,EAAK1S,KAAnB,SACI,8BAAK0S,EAAK/F,SAEd,uBAAKnC,UAAU,eAAf,UACI,eAAC,GAAD,CACIuC,SAAU,SAAA7H,GAAU,OAAI8U,EAAS9U,EAAYwN,EAAKnN,KAClD8D,MAAK,eAAUqJ,EAAK/F,MACpBmB,MAAM,kBACNxB,OAAQ,CAAC,CACLG,MAAO,YACPE,KAAM,OACN1I,KAAM,UAEV2M,cAAe,CAAEjE,KAAM+F,EAAK/F,MAC5BmE,oBAAoB,EACpB7C,KAAI,oBAAeyE,EAAKnN,MAE5B,eAAC,GAAD,CACIwH,SAAU,kBAAMkN,EAAWvH,EAAKnN,KAChCsJ,YAAa6D,EAAK/F,YApBE+F,EAAKnN,OALtC,+DA+DF6U,QAMF,QCnFTC,G,+MAEFC,YAAc,YAA+D,IAA5D1O,EAA2D,EAA3DA,MAAOa,EAAoD,EAApDA,MAAaxI,GAAuC,EAA7C+H,KAA6C,EAAvC/H,MAAMsW,EAAiC,EAAjCA,aAAiC,EAAnBC,aAErD,OACI,iCACI,iCAAQ/N,IACR,oCACIxI,KAAMA,EACNsW,aAAcA,GACV3O,Q,EAMpBkB,WAAa,SAAA5H,GACT,EAAKyF,MAAMoC,SAAS7H,I,6CAIxB,WACI,OACI,wBAAMsF,UAAU,SAASuC,SAAUS,KAAK7C,MAAMuC,aAAaM,KAAKV,YAAhE,UACI,eAACJ,GAAA,EAAD,CACIC,KAAK,WACLC,UAAWY,KAAK8M,YAChB7N,MAAM,aACNxI,KAAK,OACLsW,aAAa,aAGjB,eAAC7N,GAAA,EAAD,CACIC,KAAK,WACLC,UAAWY,KAAK8M,YAChB7N,MAAM,aACNxI,KAAK,WACLsW,aAAa,qBAEjB,yBAAQ/P,UAAU,gBAAlB,2B,GAvCO4C,IAAMW,WA+CdC,gBAAU,CACrBC,KAAM,YADKD,CAEZqM,ICXY/P,gBAJS,SAAAC,GACpB,MAAO,CAAE8O,WAAY9O,EAAMgF,KAAK8J,cAGI,CAAEoB,OlBiBpB,SAAAvV,GAAU,8CAAI,WAAOT,GAAP,eAAAC,EAAA,+EAELC,EAAWW,KAAK,UAAWJ,GAFtB,OAEtBtB,EAFsB,OAG5BnD,aAAaia,QAAQ,QAAS9W,EAASC,KAAKrD,OAC5CiE,EAAS,CAAER,KAAMjD,EAASkD,QAASN,EAASC,KAAKyL,OACjDjL,GAAQC,KAAK,SALe,gDAO5BG,EAASf,GAAa,EAAD,KAPO,yDAAJ,wDkBjBjB4G,EAhCA,SAAC,GAA4B,IAA1BmQ,EAAyB,EAAzBA,OAAQpB,EAAiB,EAAjBA,WAQtB,OANAvJ,qBAAU,WACFuJ,GACAhV,GAAQC,KAAK,WAElB,IAIC,uBAAKkG,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,iCAGA,0CACA,eAAC,GAAD,CAAUuC,SAAU,SAAA7H,GAAU,OAAIuV,EAAOvV,MACzC,uBAAKsF,UAAU,eAAf,UACI,eAAC,KAAD,CAAMqP,GAAG,IAAT,kBAGA,eAAC,KAAD,CAAMA,GAAG,SAAT,8BCWDvP,gBAJS,SAAAC,GACpB,MAAO,CAAE8O,WAAY9O,EAAMgF,KAAK8J,cAGI,CAAEsB,OnBmCpB,SAAAzV,GAAU,8CAAI,WAAOT,GAAP,eAAAC,EAAA,+EAELC,EAAWW,KAAK,UAAWJ,GAFtB,OAEtBtB,EAFsB,OAG5BnD,aAAaia,QAAQ,QAAS9W,EAASC,KAAKrD,OAC5CiE,EAAS,CAAER,KAAMjD,EAASkD,QAASN,EAASC,KAAKyL,OACjDjL,GAAQC,KAAK,SALe,gDAO5BG,EAASf,GAAa,EAAD,KAPO,yDAAJ,wDmBnCjB4G,EA/BA,SAAC,GAA4B,IAA1BqQ,EAAyB,EAAzBA,OAAQtB,EAAiB,EAAjBA,WAQtB,OANAvJ,qBAAU,WACFuJ,GACAhV,GAAQC,KAAK,WAElB,IAGC,uBAAKkG,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,iCAGA,0CACA,eAAC,GAAD,CAAUuC,SAAU,SAAA7H,GAAU,OAAIyV,EAAOzV,MACzC,uBAAKsF,UAAU,eAAf,UACI,eAAC,KAAD,CAAMqP,GAAG,IAAT,kBAGA,eAAC,KAAD,CAAMA,GAAG,SAAT,8BCrBVe,G,2KAGF,WACIpN,KAAK7C,MAAMnG,e,yBAGf,WAMI,cAJOgJ,KAAK7C,MAAMtF,MAAMD,YAEV4D,OAAOC,OAAOuE,KAAK7C,MAAMtF,OAE1Be,KAAI,SAAAsM,GACb,OACI,sBAAKlI,UAAU,YAAf,SACI,eAAC,KAAD,CAAMqP,GAAE,WAAMnH,EAAK1S,KAAnB,SACI,8BAAK0S,EAAK/F,UAFc+F,EAAKnN,S,oBAWjD,WACI,OACI,uBAAKiF,UAAU,YAAf,UACI,qBAAIA,UAAU,cAAd,iCACA,uBAAKA,UAAU,eAAf,UACI,eAAC,KAAD,CAAMqP,GAAG,UAAT,qBAGA,eAAC,KAAD,CAAMA,GAAG,UAAT,qBAGA,eAAC,KAAD,CAAMA,GAAG,QAAT,4BAIJ,6CACA,sBAAKrP,UAAU,YAAf,SACKgD,KAAK7C,MAAMtF,OAASmI,KAAK4M,uB,GA3C3BhN,IAAMW,WA0DVzD,gBANS,SAAAC,GACpB,MAAO,CACHlF,MAAOkF,EAAMlF,SAImB,CAAEb,eAA3B8F,CAAyCsQ,ICczCC,GA5EF,WACT,OAAO,uCACH,uBAAKrQ,UAAU,eAAf,UACI,eAAC,KAAD,CAAMqP,GAAG,IAAT,kBACA,eAAC,KAAD,CAAMA,GAAG,SAAT,qBACA,eAAC,KAAD,CAAMA,GAAG,SAAT,wBAEJ,uBAAKrP,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,uHAGA,wDAGA,sBAAKA,UAAU,OAAf,0NAGA,oGAIA,gDAGA,yNAGA,wCAGA,sTAGA,yCAGA,gTAGA,2CAGA,oVAGA,0CAGA,sNAGA,4CAGA,gRAGA,4SAGA,2CAGA,4KAGA,oBAAGA,UAAU,SAAb,iGAGA,oBAAG+H,KAAK,4CAAR,4CCdGjI,gBAPS,SAAAC,GACpB,MAAO,CACH6O,SAAU7O,EAAMgF,KAAK8J,WACrBvV,MAAOyG,EAAMzG,MAAMA,SAIa,CAAEgX,UtBgCjB,yDAAM,WAAMrW,GAAN,eAAAC,EAAA,+EAEAC,EAAWC,IAAI,SAFf,QAEjBhB,EAFiB,QAGVC,KACTY,EAAS,CAAER,KAAMjD,EAASkD,QAASN,EAASC,OAE5CY,EAASN,MANU,gDASvBM,EAASf,GAAa,EAAD,KATE,yDAAN,wDsBhCV4G,EAzCH,SAAC,GAAoC,IAAlC8O,EAAiC,EAAjCA,SAAU0B,EAAuB,EAAvBA,UAAWhX,EAAY,EAAZA,MAEhCgM,qBAAU,WACFsJ,GACA0B,MAEL,IAEH,IAAMC,EAAWjX,EAAQ,eAAiB,GAE1C,OAAO,uCACH,eAAC,GAAD,IACA,sBAAK0G,UAAS,oBAAeuQ,GAA7B,SACI,eAAC,IAAD,CAAQ1W,QAASA,GAAjB,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO2W,KAAK,IAAIC,OAAK,EAACrO,UAAWgO,KACjC,eAAC,IAAD,CAAOI,KAAK,UAAUC,OAAK,EAACrO,UAAWsO,KAF3C,IAGI,eAAC,IAAD,CAAOF,KAAK,UAAUC,OAAK,EAACrO,UAAWuO,KAH3C,IAII,eAAC,IAAD,CAAOH,KAAK,QAAQC,OAAK,EAACG,OAAQ,SAAAC,GAC9B,OAAKjC,EAIE,eAAC,GAAD,eAAUiC,KAHbhX,GAAQC,KAAK,WACN,SAIf,eAAC,IAAD,CAAO0W,KAAK,QAAQC,OAAK,EAACrO,UAAWiO,KACrC,eAAC,IAAD,CAAOG,KAAK,aAAapO,UAAW0O,kB,UCzClDC,GAAgB,CAClBlC,YAAY,EACZ/J,KAAM,MCFJkM,GAAe,CACjBzD,MAAM,EACNV,OAAQ,GACRzD,YAAa,MCQF6H,eAAgB,CAC3BxN,KAAMyN,KACNnM,KFRW,WAAoC,IAAnChF,EAAkC,uDAA1BgR,GAAeI,EAAW,uCAC9C,OAAQA,EAAO1X,MACX,KAAKjD,EACD,OAAO,2BAAKuJ,GAAZ,IAAmB8O,YAAY,EAAM/J,KAAMqM,EAAOzX,UACtD,KAAKjD,EACD,OAAO,2BAAKsJ,GAAZ,IAAmB8O,YAAY,EAAO/J,KAAM,OAChD,KAAKpN,EACD,IAAQoN,EAAS/E,EAAT+E,KAER,OADAA,EAAKjK,MAAMf,KAAKqX,EAAOzX,QAAQqB,IACxB,2BAAKgF,GAAZ,IAAmB+E,SACvB,QACI,OAAO/E,IEFfoI,MCbW,WAAyB,IAAxBpI,EAAuB,uDAAf,GAAIoR,EAAW,uCAEnC,OAAQA,EAAO1X,MAEX,KAAK9C,EACD,OAAO,2BAAKoJ,GAAU/D,KAAEoV,QAAQD,EAAOzX,QAAS,OACpD,KAAKtC,EACD,OAAO,2BAAK2I,GAAZ,mBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,UACnD,KAAK/B,EACD,IAAM0Z,EAActR,EAAMoR,EAAOzX,QAAQqB,IAArB,SACduW,EAAcH,EAAOzX,QAAQ4N,SAC/BiK,EAAmB,GACvB,GAAIF,EAAcC,EACd,cAAiB9S,OAAOC,OAAOsB,GAA/B,eAAuC,CAAlC,IAAIyR,EAAI,KACT,GAAIA,EAAKlK,UAAYgK,GAAeE,EAAKlK,SAAW+J,EAAa,CAC7D,IAAMI,EAAMD,EAAKlK,SACjBiK,EAAiBC,EAAKzW,IAAtB,2BAAiCyW,GAAjC,IAAuClK,SAAUmK,EAAM,KAInE,GAAIJ,EAAcC,EACd,cAAiB9S,OAAOC,OAAOsB,GAA/B,eAAuC,CAAlC,IAAIyR,EAAI,KACT,GAAIA,EAAKlK,SAAW+J,GAAeG,EAAKlK,UAAYgK,EAAa,CAC7D,IAAMG,EAAMD,EAAKlK,SACjBiK,EAAiBC,EAAKzW,IAAtB,2BAAiCyW,GAAjC,IAAuClK,SAAUmK,EAAM,KAInE,OAAO,2BAAK1R,GAAZ,mBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,SAAY6X,GAC/D,KAAKrZ,EACD,IAAMwZ,EAAiBlT,OAAOC,OAAOzC,KAAE2V,KAAK5R,EAAOA,EAAMnF,cAAc+D,QAAO,SAAA+K,GAAC,OAAIA,EAAEpC,SAAW6J,EAAOzX,QAAQ4N,YAK/G,OAJAoK,EAAetT,SAAQ,SAACc,GACpBA,EAAKoI,SAAWpI,EAAKoI,SAAW,YAE7BvH,EAAMoR,EAAOzX,QAAQqB,IACrB,2BAAKgF,GAAU/D,KAAEoV,QAAQM,EAAgB,OACpD,KAAKpa,EACD,IAAMsa,EAAY7R,EAAMoR,EAAOzX,QAAQwF,MAEvC,OADA0S,EAAUzT,UAAUrE,KAAKqX,EAAOzX,QAAQmF,MAAM9D,IACvC,2BAAKgF,GAAZ,mBAAoB6R,EAAU7W,GAAK6W,IACvC,KAAK9Z,EACD,GAAIqZ,EAAOzX,QAAQwF,KAAKsJ,IAAK,CAAC,IAAD,EACnBqJ,EAAU9R,EAAMoR,EAAOzX,QAAQwF,KAAKsJ,KAC1CqJ,EAAQ1T,UAAUrE,KAAKqX,EAAOzX,QAAQmF,MAAM9D,IAC5C,IAAM+W,EAAU/R,EAAMoR,EAAOzX,QAAQwF,KAAKuJ,KAE1C,OADAqJ,EAAQ3T,UAAY2T,EAAQ3T,UAAUQ,QAAO,SAAA5D,GAAE,OAAIA,IAAOoW,EAAOzX,QAAQmF,MAAM9D,MACxE,2BAAKgF,GAAZ,wBAAoB8R,EAAQ9W,GAAK8W,GAAjC,eAA2CC,EAAQ/W,GAAK+W,GAAxD,IAEA,OAAO/R,EAEf,KAAK1H,EACD,IAAM0Z,EAAiBhS,EAAMoR,EAAOzX,QAAQwF,MAC5C,GAAI6S,EAAgB,CAChB,IAAMC,EAAeD,EAAe5T,UAAUQ,QAAO,SAAA5D,GAAE,OAAIA,IAAOoW,EAAOzX,QAAQmF,MAAM9D,MAEvF,OADAgX,EAAe5T,UAAY6T,EACpB,2BAAKjS,GAAZ,mBAAoBgS,EAAehX,GAAKgX,IAEhD,QACI,OAAOhS,ID5CfrE,OEbW,WAAyB,IAAxBqE,EAAuB,uDAAf,GAAIoR,EAAW,uCAEnC,OAAQA,EAAO1X,MAEX,KAAKxC,EACD,OAAO,2BAAK8I,GAAU/D,KAAEoV,QAAQD,EAAOzX,QAAS,OACpD,KAAKpC,EAEL,KAAKQ,EACD,OAAO,2BAAKiI,GAAZ,mBAAoBoR,EAAOzX,QAAQmF,MAAM9D,GAAKoW,EAAOzX,QAAQmF,QACjE,KAAKxG,EAED,cADO0H,EAAMoR,EAAOzX,QAAQmF,MAAM9D,IAC3B,eAAKgF,GAChB,KAAKhH,GACD,IAAMkZ,EAAelS,EAAMoR,EAAOzX,QAAQY,SAE1C,OADA2X,EAAavL,gBAAkByK,EAAOzX,QAAQ6F,QACvC,2BAAKQ,GAAZ,mBAAoBkS,EAAalX,GAAKkX,IAC1C,KAAKjZ,GACD,IAAMkZ,EAAcnS,EAAMoR,EAAOzX,QAAQY,SAEzC,OADA4X,EAAYhN,eAAiBiM,EAAOzX,QAAQiG,OACrC,2BAAKI,GAAZ,mBAAoBmS,EAAYnX,GAAKmX,IACzC,KAAK1a,EACD,IAAM2a,EAAapS,EAAMoR,EAAOzX,QAAQmF,OAExC,OADAsT,EAAW7W,SAASxB,KAAKqX,EAAOzX,QAAQ6F,QAAQxE,IACzC,2BAAKgF,GAAZ,mBAAoBoS,EAAWpX,GAAKoX,IACxC,KAAK7Z,EACD,IAAM8Z,EAAkBrS,EAAMoR,EAAOzX,QAAQmF,OAC7C,GAAIuT,EAAiB,CACjB,IAAMC,EAAiBD,EAAgB9W,SAASqD,QAAO,SAAA5D,GAAE,OAAIA,IAAOoW,EAAOzX,QAAQ6F,QAAQxE,MAE3F,OADAqX,EAAgB9W,SAAW+W,EACpB,2BAAKtS,GAAZ,mBAAoBqS,EAAgBrX,GAAKqX,IAEjD,QACI,OAAOrS,IFnBfzE,SGdW,WAAyB,IAAxByE,EAAuB,uDAAf,GAAIoR,EAAW,uCAEnC,OAAQA,EAAO1X,MAEX,KAAKvC,EACD,OAAO,2BAAK6I,GAAU/D,KAAEoV,QAAQD,EAAOzX,QAAS,OACpD,KAAKlC,EACD,OAAO,2BAAKuI,GAAZ,mBAAoBoR,EAAOzX,QAAQ6F,QAAQxE,GAAKoW,EAAOzX,QAAQ6F,UACnE,KAAKxH,EACD,OAAO,2BAAKgI,GAAZ,mBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,UACnD,KAAKpB,EAED,cADOyH,EAAMoR,EAAOzX,QAAQ6F,QAAQxE,IAC7B,eAAKgF,GAChB,KAAKtI,EACD,IAAM6a,EAAevS,EAAMoR,EAAOzX,QAAQ6F,SAE1C,OADA+S,EAAajW,QAAQvC,KAAKqX,EAAOzX,QAAQiG,OAAO5E,IACzC,2BAAKgF,GAAZ,mBAAoBuS,EAAavX,GAAKuX,IAC1C,KAAK/Z,EACD,IAAMga,EAAoBxS,EAAMoR,EAAOzX,QAAQ6F,SAC/C,GAAIgT,EAAmB,CACnB,IAAMC,EAAgBD,EAAkBlW,QAAQsC,QAAO,SAAA5D,GAAE,OAAIA,IAAOoW,EAAOzX,QAAQiG,OAAO5E,MAE1F,OADAwX,EAAkBlW,QAAUmW,EACrB,2BAAKzS,GAAZ,mBAAoBwS,EAAkBxX,GAAKwX,IAEnD,QACI,OAAOxS,IHVf1D,QIhBW,WAAyB,IAAxB0D,EAAuB,uDAAf,GAAIoR,EAAW,uCAEnC,OAAQA,EAAO1X,MAEX,KAAKtC,EACD,OAAO,2BAAK4I,GAAU/D,KAAEoV,QAAQD,EAAOzX,QAAS,OACpD,KAAKjC,EACD,OAAO,2BAAKsI,GAAZ,mBAAoBoR,EAAOzX,QAAQiG,OAAO5E,GAAKoW,EAAOzX,QAAQiG,SAClE,KAAK3H,EACD,OAAO,2BAAK+H,GAAZ,mBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,UACnD,KAAKnB,EAED,cADOwH,EAAMoR,EAAOzX,QAAQiG,OAAO5E,IAC5B,eAAKgF,GAChB,QACI,OAAOA,IJGfxB,UKjBW,WAAyB,IAAxBwB,EAAuB,uDAAf,GAAIoR,EAAW,uCAEnC,OAAQA,EAAO1X,MAEX,KAAK3C,EACD,OAAO,2BAAKiJ,GAAU/D,KAAEoV,QAAQD,EAAOzX,QAAS,OACpD,KAAK7C,EAEL,KAAKU,EACD,OAAO,2BAAKwI,GAAZ,mBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,UACnD,KAAK9B,EACD,IAAMyZ,EAActR,EAAMoR,EAAOzX,QAAQqB,IAArB,SACduW,EAAcH,EAAOzX,QAAQ4N,SAC/BiK,EAAmB,GACvB,GAAIF,EAAcC,EACd,cAAiB9S,OAAOC,OAAOsB,GAA/B,eAAuC,CAAlC,IAAIyR,EAAI,KACT,GAAIA,EAAKlK,UAAYgK,GAAeE,EAAKlK,SAAW+J,EAAa,CAC7D,IAAMI,EAAMD,EAAKlK,SACjBiK,EAAiBC,EAAKzW,IAAtB,2BAAiCyW,GAAjC,IAAuClK,SAAUmK,EAAM,KAInE,GAAIJ,EAAcC,EACd,cAAiB9S,OAAOC,OAAOsB,GAA/B,eAAuC,CAAlC,IAAIyR,EAAI,KACT,GAAIA,EAAKlK,SAAW+J,GAAeG,EAAKlK,UAAYgK,EAAa,CAC7D,IAAMG,EAAMD,EAAKlK,SACjBiK,EAAiBC,EAAKzW,IAAtB,2BAAiCyW,GAAjC,IAAuClK,SAAUmK,EAAM,KAInE,OAAO,2BAAK1R,GAAZ,mBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,SAAY6X,GAC/D,KAAKpZ,SACM4H,EAAMnF,YACb,IAAM8W,EAAiBlT,OAAOC,OAAOsB,GAAOpB,QAAO,SAAA8T,GAAC,OAAIA,EAAEnL,SAAW6J,EAAOzX,QAAQ4N,YAKpF,OAJAoK,EAAetT,SAAQ,SAAClD,GACpBA,EAASoM,SAAWpM,EAASoM,SAAW,YAErCvH,EAAMoR,EAAOzX,QAAQqB,IACrB,2BAAKgF,GAAU/D,KAAEoV,QAAQM,EAAgB,OACpD,KAAKra,EACD,IAAMqb,EAAgB3S,EAAMoR,EAAOzX,QAAQwB,UAE3C,OADAwX,EAAc3T,MAAMjF,KAAKqX,EAAOzX,QAAQuB,aAAaF,IAC9C,2BAAKgF,GAAZ,mBAAoB2S,EAAc3X,GAAK2X,IAC3C,KAAKta,EACD,IAAMua,EAAqB5S,EAAMoR,EAAOzX,QAAQwB,UAChD,GAAIyX,EAAoB,CACpB,IAAMC,EAAcD,EAAmB5T,MAAMJ,QAAO,SAAA5D,GAAE,OAAIA,IAAOoW,EAAOzX,QAAQuB,aAAaF,MAE7F,OADA4X,EAAmB5T,MAAQ6T,EACpB,2BAAK7S,GAAZ,mBAAoB4S,EAAmB5X,GAAK4X,IAEpD,QACI,OAAO5S,ILjCfrB,cMlBW,WAAyB,IAAxBqB,EAAuB,uDAAf,GAAIoR,EAAW,uCAEnC,OAAQA,EAAO1X,MAEX,KAAK7C,EACD,OAAO,2BAAKmJ,GAAU/D,KAAEoV,QAAQD,EAAOzX,QAAS,OACpD,KAAKrC,EACD,OAAO,2BAAK0I,GAAZ,mBAAoBoR,EAAOzX,QAAQuB,aAAaF,GAAKoW,EAAOzX,QAAQuB,eACxE,KAAKpD,EACD,IAAMwZ,EAActR,EAAMoR,EAAOzX,QAAQuB,aAAaF,IAAlC,SACduW,EAAcH,EAAOzX,QAAQuB,aAAaqM,SAC5CiK,EAAmB,GAEvB,GAAIF,EAAcC,EACd,cAAiB9S,OAAOC,OAAOsB,GAA/B,eAAuC,CAAlC,IAAIyR,EAAI,KACT,GAAIA,EAAKlK,UAAYgK,GAAeE,EAAKlK,SAAW+J,EAAa,CAC7D,IAAMI,EAAMD,EAAKlK,SACjBiK,EAAiBC,EAAKzW,IAAtB,2BAAiCyW,GAAjC,IAAuClK,SAAUmK,EAAM,KAInE,GAAIJ,EAAcC,EACd,cAAiB9S,OAAOC,OAAOsB,GAA/B,eAAuC,CAAlC,IAAIyR,EAAI,KACT,GAAIA,EAAKlK,SAAW+J,GAAeG,EAAKlK,UAAYgK,EAAa,CAC7D,IAAMG,EAAMD,EAAKlK,SACjBiK,EAAiBC,EAAKzW,IAAtB,2BAAiCyW,GAAjC,IAAuClK,SAAUmK,EAAM,KAKnE,OAAO,2BAAK1R,GAAZ,mBAAoBoR,EAAOzX,QAAQuB,aAAaF,GAAKoW,EAAOzX,QAAQuB,cAAiBsW,GACzF,KAAKnZ,EACD,IAAMsZ,EAAiBlT,OAAOC,OAAOsB,GAAOpB,QAAO,SAAA8T,GAAC,OAAIA,EAAEnL,SAAW6J,EAAOzX,QAAQuB,aAAaqM,YAKjG,OAJAoK,EAAetT,SAAQ,SAAC6I,GACpBA,EAAKK,SAAWL,EAAKK,SAAW,YAE7BvH,EAAMoR,EAAOzX,QAAQuB,aAAaF,IAClC,eAAKgF,GAChB,KAAKzH,EACD,IAAK,IAAMyC,KAAMgF,EACTA,EAAMhF,GAAIwE,UAAY4R,EAAOzX,QAAQ6F,QAAQxE,KAC7CgF,EAAMhF,GAAIwE,QAAU,KACpBQ,EAAMhF,GAAI4E,OAAS,MAG3B,OAAO,eAAKI,GAChB,KAAKxH,EACD,IAAK,IAAMwC,KAAMgF,EACTA,EAAMhF,GAAI4E,SAAWwR,EAAOzX,QAAQiG,OAAO5E,KAC3CgF,EAAMhF,GAAI4E,OAAS,MAG3B,OAAO,eAAKI,GAChB,QACI,OAAOA,INnCflF,MOnBW,WAAyB,IAAD,UAAvBkF,EAAuB,uDAAf,GAAIoR,EAAW,uCAEnC,OAAQA,EAAO1X,MACX,KAAK1C,EACD,OAAO,2BAAKgJ,GAAZ,wBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,SAA/C,6BAAqEyX,EAAOzX,SAA5E,IACJ,KAAK1C,EACD,OAAO,2BAAK+I,GAAU/D,KAAEoV,QAAQD,EAAOzX,QAAS,OACpD,KAAKhC,EAEL,KAAKO,EACD,OAAO,2BAAK8H,GAAZ,mBAAoBoR,EAAOzX,QAAQqB,GAAKoW,EAAOzX,UACnD,KAAKlB,EAED,cADOuH,EAAMoR,EAAOzX,QAAQqB,IACrB,eAAKgF,GAChB,KAAK3I,EACD,IAAQwD,EAAgBmF,EAAhBnF,YAER,OADAA,EAAYuN,MAAMrO,KAAKqX,EAAOzX,QAAQqB,IAC/B,2BAAKgF,GAAZ,wBAAoBnF,EAAYG,GAAKH,GAArC,6BAAkDA,GAAlD,IACJ,KAAK1C,EACD,IAAMgQ,EAAOnI,EAAMnF,YACbiY,EAAW3K,EAAKC,MAAMxJ,QAAO,SAAA5D,GAAE,OAAIA,IAAOoW,EAAOzX,QAAQqB,MAE/D,OADAmN,EAAKC,MAAQ0K,EACN,2BAAK9S,GAAZ,wBAAoBmI,EAAKnN,GAAKmN,GAA9B,6BAAiDA,GAAjD,IACJ,KAAK3Q,EACD,IAAMub,EAAe/S,EAAMnF,YAE3B,OADAkY,EAAavU,UAAUzE,KAAKqX,EAAOzX,QAAQqB,IACpC,2BAAKgF,GAAZ,wBAAoB+S,EAAa/X,GAAK+X,GAAtC,6BAAiEA,GAAjE,IACJ,KAAK3a,EACD,IAAM4a,EAAQhT,EAAMnF,YACdoY,EAAeD,EAAMxU,UAAUI,QAAO,SAAA5D,GAAE,OAAIA,IAAOoW,EAAOzX,QAAQqB,MAExE,OADAgY,EAAMxU,UAAYyU,EACX,2BAAKjT,GAAZ,wBAAoBgT,EAAMhY,GAAKgY,GAA/B,6BAAmDA,GAAnD,IACJ,KAAKtc,EACD,OAAOuF,KAAE2V,KAAK5R,EAAOA,EAAMnF,aAC/B,QACI,OAAOmF,IPffzG,MQpBW,WAAyB,IAAxByG,EAAuB,uDAAf,GAAIoR,EAAW,uCACnC,OAAQA,EAAO1X,MACX,KAAK/C,EACD,MAAO,CAAE4C,MAAO6X,EAAOzX,SAC3B,QACI,OAAOqG,IRgBfoH,MDhBW,WAAmC,IAAlCpH,EAAiC,uDAAzBiR,GAAcG,EAAW,uCAC7C,OAAQA,EAAO1X,MACX,KAAKhB,EACD,OAAO,2BAAKsH,GAAZ,IAAmBwN,MAAM,EAAMD,OAAO,IAC1C,KAAK5U,EACD,OAAO,2BAAKqH,GAAZ,IAAmBwN,MAAM,EAAOD,OAAO,IAC3C,KAAK3U,GACD,MAAyBwY,EAAOzX,QAAxBuN,EAAR,EAAQA,KAAMG,EAAd,EAAcA,OACd,OAAO,2BAAKrH,GAAZ,IAAmBqJ,YAAanC,EAAMsG,MAAM,EAAMnG,WACtD,KAAKxO,GACD,OAAO,2BAAKmH,GAAZ,IAAmBqJ,YAAa+H,EAAOzX,UAC3C,KAAKnB,EACD,OAAIwH,EAAMqJ,aAAe+H,EAAOzX,QAAQiG,OAAO5E,KAAOgF,EAAMqJ,YAAYjC,MAC7D,eAAK6J,IAELjR,EAMf,KAAKlH,GACD,OAAO,2BAAKkH,GAAZ,IAAmB8M,OAAQsE,EAAOzX,UACtC,KAAKZ,GACD,OAAO,eAAKkY,IAChB,QACI,OAAOjR,MUrBbiR,GAAe,GAEP/a,aAAaC,QAAQ,WAG/B8a,GAAajM,KAAO,CAAE8J,YAAY,IAGtC,IAAMoE,GAAmBpW,OAAOqW,sCAAwCC,IAClEC,GAAQC,YACVC,GACAtC,GACAiC,GAAiBM,YAAgBC,OAGrCzP,IAAS6M,OACL,eAAC,IAAD,CAAUwC,MAAOA,GAAjB,SACI,eAAC,GAAD,MAEJnQ,SAASU,cAAc,Y","file":"static/js/main.24e8c736.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = {};\n\nif (process.env.NODE_ENV === 'production') {\n    url.baseURL = 'https://exploring-the-space.com/api';\n} else {\n    url.baseURL = 'http://localhost:3001/api'\n}\n\nconst instance = axios.create(url);\n\ninstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = token;\n        }\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\n\n\nexport default instance;","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const ERROR = 'ERROR';\n\nexport const FETCH_TIERS = 'FETCH_TIERS';\nexport const FETCH_PLAYLISTSONGS = 'FETCH_PLAYLISTSONGS';\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\nexport const FETCH_PLAYLISTS = 'FETCH_PLAYLISTS';\nexport const FETCH_BAND = 'FETCH_BAND';\nexport const FETCH_BANDS = 'FETCH_BANDS';\nexport const FETCH_TITLES = 'FETCH_TITLES';\nexport const FETCH_VERSIONS = 'FETCH_VERSIONS';\nexport const FETCH_BOUNCES = 'FETCH_BOUNCES';\n\nexport const FETCH_TITLE = 'FETCH_TITLE';\nexport const FETCH_VERSION = 'FETCH_VERSION';\nexport const FETCH_BOUNCE = 'FETCH_BOUNCE';\n\nexport const CREATE_TIER = 'CREATE_TIER';\nexport const CREATE_PLAYLISTSONG = 'CREATE_PLAYLISTSONG';\nexport const CREATE_TITLE = 'CREATE_TITLE';\nexport const CREATE_PLAYLIST = 'CREATE_PLAYLIST';\nexport const CREATE_VERSION = 'CREATE_VERSION';\nexport const CREATE_BOUNCE = 'CREATE_BOUNCE';\nexport const CREATE_BAND = 'CREATE_BAND';\n\nexport const EDIT_TIER = 'EDIT_TIER';\nexport const EDIT_PLAYLIST = 'EDIT_PLAYLIST';\nexport const EDIT_PLAYLISTSONG = 'EDIT_PLAYLISTSONG';\nexport const EDIT_TITLE = 'EDIT_TITLE';\nexport const EDIT_VERSION = 'EDIT_VERSION';\nexport const EDIT_BOUNCE = 'EDIT_BOUNCE';\nexport const EDIT_BAND = 'EDIT_BAND';\n\nexport const DELETE_TIER = 'DELETE_TIER';\nexport const DELETE_PLAYLIST = 'DELETE_PLAYLIST';\nexport const DELETE_PLAYLISTSONG = 'DELETE_PLAYLISTSONG';\nexport const DELETE_TITLE = 'DELETE_TITLE';\nexport const DELETE_VERSION = 'DELETE_VERSION';\nexport const DELETE_BOUNCE = 'DELETE_BOUNCE';\nexport const DELETE_BAND = 'DELETE_BAND';\n\nexport const PLAY_AUDIO = 'PLAY_AUDIO';\nexport const PAUSE_AUDIO = 'PAUSE_AUDIO';\nexport const QUEUE_SONGS = 'QUEUE_SONGS';\nexport const NEXT_SONG = 'NEXT_SONG';\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\nexport const INITIALIZE_AUDIO = 'INITIALIZE_AUDIO';\n\nexport const SELECT_VERSION = 'SELECT_VERSION';\nexport const SELECT_BOUNCE = 'SELECT_BOUNCE';","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import greenhouse from '../apis/greenhouse';\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    ERROR,\n    FETCH_BAND,\n    FETCH_BANDS,\n    FETCH_TIERS,\n    FETCH_TITLES,\n    FETCH_VERSIONS,\n    FETCH_BOUNCES,\n    FETCH_PLAYLISTS,\n    FETCH_PLAYLISTSONGS,\n    CREATE_BAND,\n    CREATE_TIER,\n    CREATE_TITLE,\n    CREATE_VERSION,\n    CREATE_BOUNCE,\n    CREATE_PLAYLIST,\n    CREATE_PLAYLISTSONG,\n    EDIT_BAND,\n    EDIT_TIER,\n    EDIT_TITLE,\n    EDIT_VERSION,\n    EDIT_BOUNCE,\n    EDIT_PLAYLIST,\n    EDIT_PLAYLISTSONG,\n    DELETE_BAND,\n    DELETE_TIER,\n    DELETE_TITLE,\n    DELETE_VERSION,\n    DELETE_BOUNCE,\n    DELETE_PLAYLIST,\n    DELETE_PLAYLISTSONG,\n    PLAY_AUDIO,\n    PAUSE_AUDIO,\n    QUEUE_SONGS,\n    NEXT_SONG,\n    CHANGE_VOLUME,\n    INITIALIZE_AUDIO,\n    SELECT_VERSION,\n    SELECT_BOUNCE,\n} from './types';\nimport history from '../history';\nimport _ from 'lodash';\n\nconst errorHandler = err => {\n    let message;\n    if (err.response) {\n        message = err.response.data.error\n    } else {\n        message = err.message;\n    }\n    console.log(err)\n    return { type: ERROR, payload: message };\n};\n\n\nexport const signIn = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signin', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const signOut = () => {\n    localStorage.removeItem('token');\n    history.push('/');\n    return { type: SIGN_OUT };\n};\n\nexport const signUp = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signup', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const throwError = message => {\n    return { type: ERROR, payload: message };\n};\n\nexport const fetchUser = () => async dispatch => {\n    try {\n        const response = await greenhouse.get('/user');\n        if (response.data) {\n            dispatch({ type: SIGN_IN, payload: response.data });\n        } else {\n            dispatch(signOut());\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBand = bandName => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands/${bandName}`);    \n        dispatch({ type: FETCH_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBands = () => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands`);\n        dispatch({ type: FETCH_BANDS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTiers = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/tiers/${bandId}`);\n        dispatch({ type: FETCH_TIERS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTitles = tierId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/titles/${tierId}`);\n        dispatch({ type: FETCH_TITLES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchVersions = titleId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/versions/${titleId}`);\n        dispatch({ type: FETCH_VERSIONS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBounces = versionId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bounces/${versionId}`);\n        dispatch({ type: FETCH_BOUNCES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylists = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlists/${bandId}`);\n        dispatch({ type: FETCH_PLAYLISTS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylistSongs = playlistId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlistsongs/${playlistId}`);\n        dispatch({ type: FETCH_PLAYLISTSONGS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\nexport const createBand = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/bands', formValues);\n        dispatch({ type: CREATE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTier = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/tiers',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTitle = (formValues, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles',\n            { ...formValues, currentBand: currentBand.id, tier: tierId }\n        );\n        dispatch({ type: CREATE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createVersion = (formValues, titleId) => async (dispatch, getState) => {\n    try {\n\n        const { currentBand } = getState().bands;\n        const parentTitle = getState().titles[titleId];\n\n        if (!parentTitle.versions.length) {\n            formValues.current = true;\n        }\n        \n        const response = await greenhouse.post(\n            '/versions',\n            { ...formValues, currentBand: currentBand.id, title: titleId }\n        );    \n\n        if (response.data.current) {\n            if (parentTitle.versions.length) {\n                const versionList = parentTitle.versions.map(id => getState().versions[id]);\n                const oldCurrent = versionList.find(v => v.current);\n                oldCurrent.current = false;\n                dispatch(editVersion(\n                    _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n                ));\n            }\n            dispatch({ type: SELECT_VERSION, payload: { titleId, version: response.data } });\n        }\n\n        dispatch({ type: CREATE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createBounce = (formValues, versionId, titleId) => async (dispatch, getState) => {\n\n    try {\n        const { currentBand } = getState().bands;\n        const parentVersion = getState().versions[versionId];\n\n        if (!parentVersion.bounces.length) {\n            formValues.latest = true;\n        }\n\n        formValues.file = formValues.file[0];\n        \n        // Create instance of FileReader\n        const reader = new FileReader();\n\n        // When the file has been succesfully read\n        reader.onload = event => {\n\n            // Create an instance of AudioContext\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n            // Asynchronously decode audio file data contained in an ArrayBuffer.\n            audioContext.decodeAudioData(event.target.result, async (buffer) => {\n\n                // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                const duration = parseInt(buffer.duration);\n\n                const formObject = {\n                    ...formValues,\n                    currentBand: currentBand.id,\n                    version: versionId,\n                    duration\n                }\n\n                const formData = new FormData();\n\n                for ( let key in formObject ) {\n                    formData.append(key, formObject[key]);\n                }\n\n                const response = await greenhouse.post(\n                    '/bounces', \n                    formData,\n                    {\n                        headers: { 'Content-Type': 'multipart/form-data'}\n                    }\n                );\n\n                if (response.data.latest) {\n                    \n                    if (parentVersion.bounces.length) {\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }\n                    dispatch({ type: SELECT_BOUNCE, payload: { titleId, bounce: response.data } });\n                }\n\n                dispatch({ type: CREATE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n            });\n        };\n\n        // In case the file couldn't be read\n        reader.onerror =  event => {\n            console.error(\"An error ocurred reading the file: \", event);\n        };\n\n        // Read file as an ArrayBuffer, important !\n        reader.readAsArrayBuffer(formValues.file);\n\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylist = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlists',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylistSong = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlistsongs',\n            { \n                ...formValues,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: CREATE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: formValues.playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBand = (formValues, bandId) => async dispatch => {\n    try {\n        const response = await greenhouse.patch('/bands', { ...formValues, currentBand: bandId});\n        dispatch({ type: EDIT_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTier = (formValues, tierId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/tiers/${tierId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTitle = (formValues, titleId, tierId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        let changeTier = formValues.move;\n        const response = await greenhouse.patch(\n            `/titles/${titleId}`,\n            { ...formValues, currentTier: tierId, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TITLE, payload: { title: response.data, tier: { new: changeTier, old: tierId } } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editVersion = (formValues, versionId, titleId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisVersion = getState().versions[versionId];\n        if (thisVersion.current) {\n            formValues.current = true;\n        }\n        const response = await greenhouse.patch(\n            `/versions/${versionId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        if (response.data.current && !thisVersion.current) {\n            const parentTitle = getState().titles[titleId];\n            const versionList = parentTitle.versions.map(id => getState().versions[id]);\n            const oldCurrent = versionList.find(v => v.current);\n            oldCurrent.current = false;\n            dispatch(editVersion(\n                _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n            ));   \n        }\n        dispatch({ type: EDIT_VERSION, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBounce = (formValues, bounceId, versionId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisBounce = getState().bounces[bounceId];\n        if (thisBounce.latest) {\n            formValues.latest = true;\n        }\n        if (formValues.file && formValues.file.length) {\n            formValues.file = formValues.file[0];\n \n            // Create instance of FileReader\n            const reader = new FileReader();\n    \n            // When the file has been succesfully read\n            reader.onload = event => {\n    \n                // Create an instance of AudioContext\n                const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    \n                // Asynchronously decode audio file data contained in an ArrayBuffer.\n                audioContext.decodeAudioData(event.target.result, async (buffer) => {\n    \n                    // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                    const duration = parseInt(buffer.duration);\n    \n                    const formObject = {\n                        ...formValues,\n                        currentBand: currentBand.id,\n                        duration\n                    }\n    \n                    const formData = new FormData();\n    \n                    for ( let key in formObject ) {\n                        formData.append(key, formObject[key]);\n                    }\n    \n                    const response = await greenhouse.patch(\n                        `/bounces/${bounceId}`, \n                        formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data'}\n                        }\n                    );\n\n\n                    if (response.data.latest && !thisBounce.latest) {\n                        console.log('hahahaha')\n                        const parentVersion = getState().versions[versionId];\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }\n    \n                    dispatch({ type: EDIT_BOUNCE, payload: response.data });\n    \n                });\n            };\n    \n            // In case the file couldn't be read\n            reader.onerror =  event => {\n                console.error(\"An error ocurred reading the file: \", event);\n            };\n    \n            // Read file as an ArrayBuffer, important !\n            reader.readAsArrayBuffer(formValues.file);\n        } else {\n            const response = await greenhouse.patch(\n                `/bounces/${bounceId}`,\n                { ...formValues, currentBand: currentBand.id }\n            );\n            if (response.data.latest && !thisBounce.latest) {\n                const parentVersion = getState().versions[versionId];\n                const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                const oldLatest = bounceList.find(b => b.latest);\n                oldLatest.latest = false;\n                dispatch(editBounce(\n                    _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                ));\n            }\n            dispatch({ type: EDIT_BOUNCE, payload: response.data });\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylist = (formValues, playlistId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/playlists/${playlistId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylistSong = (formValues, playlistSongId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const song = getState().playlistSongs[playlistSongId];\n        if (formValues.move) {\n            const newSong = {\n                playlistId: formValues.move,\n                title: song.title,\n                version: song.version,\n                bounce: song.bounce\n            };\n            dispatch(createPlaylistSong(newSong));\n        }\n        const response = await greenhouse.patch(\n            `/playlistsongs/${playlistSongId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLISTSONG,\n            payload: { \n                playlistsong: response.data,\n                playlist: formValues.playlistId\n            }\n        });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\n\n\nexport const deleteBand = bandId => async dispatch => {\n    try {\n        const response = await greenhouse.post(\n            '/bands/delete',\n            { currentBand: bandId }\n        );\n        response.data.tiers.forEach(tierId => {\n            dispatch(deleteTier(tierId, response.data.id));\n        });\n        dispatch({ type: DELETE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTier = tierId => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/tiers/delete',\n            {\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.trackList.forEach(titleId => {\n            dispatch(deleteTitle(titleId, response.data.id));\n        });\n        dispatch({ type: DELETE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTitle = (titleId, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles/delete',\n            {\n                titleId,\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.versions.forEach(versionId => {\n            dispatch(deleteVersion(versionId, response.data.id));\n        });\n        const playlists = Object.values(getState().playlists);\n        const playlistSongs = Object.values(getState().playlistSongs).filter(pls => pls.title === titleId);\n        playlistSongs.forEach(pls => {\n            const playlist = playlists.find(pl => pl.songs.includes(pls.id));\n            dispatch(deletePlaylistSong(pls.id, playlist.id));\n        });\n        dispatch({ type: DELETE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteVersion = (versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/versions/delete',\n            {\n                versionId,\n                titleId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.current) {\n            const parentTitle = getState().titles[titleId];\n            if (parentTitle) {\n                const remainingVersions = parentTitle.versions.filter(id => id !== versionId);\n                if (remainingVersions.length) {\n                    const newCurrent = getState().versions[remainingVersions[remainingVersions.length-1]];\n                    newCurrent.current = true;\n                    dispatch(selectVersion(newCurrent.id, titleId));\n                    dispatch(editVersion(\n                        _.pick(newCurrent, 'name', 'notes', 'current'), newCurrent.id, titleId\n                    ));\n                } else {\n                    dispatch(selectVersion(null, titleId));     \n                }   \n            }\n        }\n        response.data.bounces.forEach(bounceId => {\n            dispatch(deleteBounce(bounceId, response.data.id, titleId));\n        });\n        dispatch({ type: DELETE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteBounce = (bounceId, versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/bounces/delete',\n            {\n                bounceId,\n                versionId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.latest) {\n            const parentVersion = getState().versions[versionId];\n            if (parentVersion) {\n                const remainingBounces = parentVersion.bounces.filter(id => id !== bounceId);\n                if (remainingBounces.length) {\n                    const newLatest = getState().bounces[remainingBounces[remainingBounces.length -1]];\n                    newLatest.latest = true;\n                    dispatch(selectBounce(newLatest.id, titleId));\n                    dispatch(editBounce(\n                        _.pick(newLatest, 'date', 'comments', 'latest'), newLatest.id, versionId\n                    ));\n                } else {\n                    dispatch(selectBounce(null, titleId));\n                }  \n            }\n        }\n        dispatch({ type: DELETE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylist = playlistId => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlists/delete',\n            {\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.songs.forEach(playlistSongId => {\n            dispatch(deletePlaylistSong(playlistSongId, response.data.id));\n        });\n        dispatch({ type: DELETE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylistSong = (playlistSongId, playlistId) => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlistsongs/delete',\n            {\n                playlistSongId,\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: DELETE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const playAudio = () => {\n    return { type: PLAY_AUDIO };\n};\n\nexport const pauseAudio = () => {\n    return { type: PAUSE_AUDIO };\n};\n\nexport const queueSongs = (song) => (dispatch, getState) => {\n  \n\n    const songObject = {\n        title: song.title,\n        version: song.version.name,\n        date: song.bounce.date,\n        duration: song.bounce.duration,\n        audio: song.bounce.id\n    };\n\n    dispatch({ type: QUEUE_SONGS, payload: { song: songObject, parent: song.tier } });\n    \n\n};\n\nexport const queuePlaylistSongs = (song) => (dispatch, getState) => {\n\n    // const version = getState().versions[song.version];\n    // const bounce = getState().bounces[song.bounce];\n    // const title = getState().titles[song.title];\n\n    const songObject = {\n        title: song.title,\n        version: song.version.name,\n        date: song.bounce.date,\n        duration: song.bounce.duration,\n        audio: song.bounce.id,\n        position: song.position\n    };\n\n    dispatch({ type: QUEUE_SONGS, payload: { song: songObject, parent: song.playlist } });\n};\n\n\nexport const nextSong = () => (dispatch, getState) => {\n    const { parent, currentSong } = getState().audio;\n    if (parent.trackList) {\n        const allTitles = parent.trackList\n            .map(id => getState().titles[id])\n            .sort((a, b) => {\n                if (a.selectedBounce && b.selectedBounce) {\n                    if (new Date(a.selectedBounce.date) > new Date(b.selectedBounce.date)) {\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                } else if (a.selectedBounce) {\n                    return -1\n                } else if (b.selectedBounce) {\n                    return 1;\n                }\n            });\n\n        const song = allTitles[allTitles.indexOf(currentSong.title) + 1];\n\n        if (song && song.selectedVersion && song.selectedBounce) {\n            const version = getState().versions[song.selectedVersion.id];\n            const bounce = getState().bounces[song.selectedBounce.id];\n\n            const songObject = {\n                title: song,\n                version: version.name,\n                date: bounce.date,\n                duration: bounce.duration,\n                audio: bounce.id\n            };\n\n            dispatch({ type: NEXT_SONG, payload: songObject });\n        } else {\n            dispatch({ type: INITIALIZE_AUDIO });\n        }\n    }\n    if (parent.songs) {\n        const allSongs = parent.songs.map(id => getState().playlistSongs[id])\n            .sort((a,b) => a.position < b.position  ? -1 : 1);\n\n        let song;\n        let index = currentSong.position;\n\n        while (index < allSongs.length) {\n            if (allSongs[index].bounce !== null) {\n                song = allSongs[index];\n                break;\n            }\n            index++;\n        }\n\n        if (!song) {\n            return dispatch({ type: INITIALIZE_AUDIO });\n        }\n\n        const version = getState().versions[song.version];\n        const bounce = getState().bounces[song.bounce];\n        const title = getState().titles[song.title];\n\n        const songObject = {\n            title: title,\n            version: version.name,\n            date: bounce.date,\n            duration: bounce.duration,\n            audio: bounce.id,\n            position: song.position\n        };\n        dispatch({ type: NEXT_SONG, payload: songObject });\n    }\n    \n}\n\nexport const changeVolume = value => {\n    return { type: CHANGE_VOLUME, payload: value };\n}\n\nexport const initializeAudio = () => {\n    return { type: INITIALIZE_AUDIO };\n}\n\n\nexport const selectVersion = (version, titleId) => {\n    return { type: SELECT_VERSION, payload: { version, titleId } };\n}\n\nexport const selectBounce = (bounce, titleId) => {\n    return { type: SELECT_BOUNCE, payload: { bounce, titleId } };\n}","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { throwError } from '../actions';\n\nconst Error = ({ error, throwError }) => {\n\n    if (!error) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\" onClick={() => throwError(null)}>\n            {error}\n        </div>\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.error.error\n    }\n}\n\nexport default connect(mapStateToProps, { throwError })(Error);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n\n\nclass AddButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    state = { boxVisible: false, selectedOption: null };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.boxVisible === false && this.state.boxVisible === true) {\n            document.addEventListener('click', this.bodyClick, {capture: true});\n            document.addEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        } else if (prevState.boxVisible === true && this.state.boxVisible === false) {\n            document.removeEventListener('click', this.bodyClick, {capture: true});\n            document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        }\n        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.bodyClick, {capture: true});\n        document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n    }\n\n    blockSpaceBarPress = (e) => {\n        e.stopPropagation();\n    }\n\n    bodyClick = (e) => {\n        if (this.ref.current && this.ref.current.contains(e.target)) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        }\n    }\n\n    showOptions = (field) => {\n        return field.options.map(option => {\n            return (\n                <option\n                    key={option.value}\n                    value={option.value}\n                >\n                    {option.display}\n                </option>\n            );\n        });\n    };\n\n    onDrop = (e, input) => {\n        const file = e.target.files[0];\n        const { onChange } = input;\n        onChange(file);\n    }\n\n    input = (field) => {\n        let addClass = '';\n        if (field.type === 'date') {\n            addClass = 'calendar';\n        }\n\n        if (field.type === 'file') {\n            delete field.input.value;\n\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <input\n                    {...field.input}\n                    type='file'\n                    className='inputfile'\n\n                    onDrop={(e) => this.onDrop(e, field.input)}\n                        \n                />\n            </>;\n        } else if (field.type === 'select') {\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <select\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </select>\n            </>;\n        } else {\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <input\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                    className={`text-input ${addClass}`}\n                />\n            </>;\n        }\n    }\n\n    required = value => {\n        return value ? undefined : 'Required';\n    }\n\n    showFields = () => {\n\n        return this.props.fields.map((field, i) => {\n            const autoFocus = i === 0 ? true : false;\n            let comp = this.input;\n            // if (field.type === 'select') {\n            //     comp = 'select'\n            // }\n            return <div key={field.label}>\n                <label>{field.label}: </label>\n                <Field\n                    name={field.name}\n                    component={comp}\n                    autoFocus={autoFocus}\n                    type={field.type}\n                    validate={field.required ? this.required : null}\n                    options={field.options}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </Field>\n            </div>\n        });\n \n    };\n\n    submitForm = (formValues) => {\n        this.props.onSubmit(formValues);\n        this.setState({ boxVisible: false });\n        this.props.reset();\n    }\n\n    showBox = () => {\n        if (this.state.boxVisible) {\n            const addClass = this.props.addClass ? this.props.addClass : '';\n            return <>    \n                <div className={`add-box ${addClass}`} onClick={e => e.stopPropagation()}>\n                    <h3 className=\"add-box-title\">{this.props.title}</h3>\n                    <form onSubmit = {this.props.handleSubmit(this.submitForm)}>\n                        {this.showFields()}\n                        <div className=\"submit-button-centered\">\n                            <button className=\"submit-button\" type='submit'>OK</button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        }\n    }\n\n    click = (e) => {\n        e.stopPropagation();\n        if (this.ref.current && this.ref.current === e.target) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        } else {\n            this.setState({ boxVisible: true });\n        }\n\n    }\n    \n    render() {\n\n        return <>\n            <div className=\"add\" onClick={this.click} ref={this.ref}>\n                <img src={this.props.image} />\n                {this.showBox()}\n            </div>\n        </>;\n    }\n\n}\n\nexport default reduxForm({ form: 'form' })(AddButton);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Modal extends React.Component {\n\n    componentDidMount() {\n        document.querySelector('.container').classList.add('modal-active');\n    }\n    componentWillUnmount() {\n        document.querySelector('.container').classList.remove('modal-active');\n    }\n\n    render() {\n        return ReactDOM.createPortal(\n            <div onClick={this.props.onDismiss} className=\"modal-background\">\n                <div \n                    onClick={e => e.stopPropagation()}\n                    className=\"modal-box\"\n                >\n                    <div className=\"modal-title\">\n                        {this.props.content}\n                    </div>\n                    <div>\n                        {this.props.actions}\n                    </div>\n                </div>\n            </div>,\n            document.querySelector('#modal')\n        );\n    }\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from './Modal';\n\nconst DeleteButton = ({ onSubmit, displayName }) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const renderContent = () => {\n        return `Seriously delete \"${displayName}\"?`;\n    };\n\n    const renderActions = () => {\n        return (\n            <>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => {\n                        onSubmit();\n                        setVisible(false);\n                    }}\n                >\n                    Delete\n                </button>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => setVisible(false)}\n                >\n                    No Wait\n                </button>\n            </>\n        );\n    };\n\n    const showModal = () => {\n\n        return (\n            <Modal \n                content={renderContent()}\n                actions={renderActions()}\n                onDismiss={e => {\n                    e.stopPropagation();\n                    setVisible(false)\n                }}\n            />\n        );\n    };\n\n\n\n    const onClick = (e) => {\n        e.stopPropagation();\n        setVisible(true);\n    };\n\n\n    return (\n        <div>\n            <img src=\"/images/delete.png\" className=\"delete\" onClick={onClick} />\n            {visible && showModal()}\n        </div>\n    );\n\n};\n\nexport default DeleteButton;","import React from 'react';\nimport { connect } from 'react-redux';\n\nexport default ChildComponent => {\n\n    class ComposedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n        }\n\n        state = { authorized: false };\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n\n        // componentDidUpdate() {\n        //     this.checkAuth();\n        // }\n\n        handleUpdate = () => {\n            this.checkAuth();\n        }\n\n        checkAuth() {\n            if (this.props.user && this.props.currentBand && this.props.user.bands.includes(this.props.currentBand.id)) {\n                this.setState({ authorized: true });\n            }\n        }\n\n        render() {\n\n            return <ChildComponent {...this.props} authorized={this.state.authorized} handleUpdate={this.handleUpdate} />;\n\n        }\n\n    }\n\n    const mapStateToProps = state => {\n        return {\n            user: state.auth.user,\n            currentBand: state.bands.currentBand\n        }\n    };\n\n    return connect(mapStateToProps)(ComposedComponent);\n\n};\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\nimport { selectBounce, createBounce, editBounce, deleteBounce } from '../actions';\n\nconst Bounce = ({ bounces, selectBounce, title, authorized, version, createBounce, editBounce, deleteBounce }) => {\n\n    const [selectedBounce, setSelectedBounce] = useState(title.selectedBounce);\n\n    const [uploadActive, setUploadActive] = useState(false);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(selectedBounce, title.id);\n        }\n    }, [selectedBounce]);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(title.selectedBounce, title.id);\n        }\n    }, [title.selectedBounce]);\n\n    useEffect(() => {\n        setSelectedBounce(title.selectedBounce);\n        setUploadActive(false);\n    }, [title.selectedBounce]);\n\n    const displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    const renderBounceList = () => {\n\n        if (bounces[0]) {\n\n            const bounceList = bounces.filter(b => b.id !== selectedBounce.id);\n            bounceList.sort((a, b) => a.date < b.date ? 1 : -1);\n\n            return bounceList.map(b => {\n                const current = b.latest ? <span className=\"list-current\"> * current</span> : null;\n                return <div\n                    className=\"dropdown-link change-song\"\n                    onClick={() => setSelectedBounce(b)}\n                    key={b.id}\n                >\n                    {displayDate(b.date)}\n                    {current}\n                </div>\n            });\n        }\n    };\n\n    const onAddSubmit = (formValues) => {\n\n        createBounce(formValues, version.id, title.id);\n        setUploadActive(true);\n\n    };\n\n    const onEditSubmit = (formValues) => {\n\n        editBounce(formValues, selectedBounce.id, version.id);\n        setUploadActive(true);\n\n    };\n\n    const uploadContent = () => {\n        return (\n\n                <div className='upload-image'>\n                    <p>Uploading...</p>\n                    <img className='windmill' src='/images/windmill.gif' />\n                </div>\n\n        );\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Bounce of ${version.name}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'File',\n                            name: 'file',\n                            type: 'file',\n                            required: true\n                        },\n                        {\n                            label: 'Date',\n                            name: 'date',\n                            type: 'date',\n                            required: true         \n                        },\n                        {\n                            label: 'Comments',\n                            name: 'comments',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Latest Bounce?',\n                            name: 'latest',\n                            type: 'checkbox',        \n                        },\n                    ]}\n                    onSubmit={formValues => onAddSubmit(formValues)}\n                    form={`add-bounce-${title.id}`}\n                    initialValues={{ latest: true }}\n                    addClass='add-bounce'\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={'Edit this Bounce'}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'File',\n                        name: 'file',\n                        type: 'file', \n                    },\n                    {\n                        label: 'Date',\n                        name: 'date',\n                        type: 'date',          \n                    },\n                    {\n                        label: 'Comments',\n                        name: 'comments',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Bounce?',\n                        name: 'latest',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={onEditSubmit}\n                initialValues={\n                    { ..._.pick(selectedBounce, 'comments', 'latest'), date: moment.utc(selectedBounce.date).format('YYYY-MM-DD') }\n                }\n                form={`edit-bounce-${title.id}`}\n                enableReinitialize={true}\n                addClass='add-bounce'\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return <DeleteButton\n                onSubmit={() => deleteBounce(selectedBounce.id, version.id, title.id)}\n                displayName={displayDate(selectedBounce.date)}\n            />;\n        }\n    };\n\n    const latestTag = () => {\n        if (selectedBounce.latest) {\n            return (\n                <div className=\"latest\">\n                    Current\n                </div>\n            );\n        }\n    };\n\n    const bounceCount = () => {\n        let count;\n        if (bounces.length === 1) {\n            count = '1 Bounce:';\n        } else {\n            count = `${bounces.length} Bounces:`\n        }\n\n        return (\n            <h5>\n                {count}\n            </h5>\n        );\n    };\n    \n\n    const renderBounceDetail = () => {\n        if (selectedBounce) {\n            return (\n                <div className='detail-content'>\n                    <div className='detail-header'>\n                        {bounceCount()}\n                        <div className='dropdown'>\n                            <button className='dropbtn'>\n                                {displayDate(selectedBounce.date)}\n                            </button>\n                            <div className='dropdown-content'>\n                                {renderBounceList()}\n                            </div>\n                        </div>\n                        <div>\n                            {latestTag()}\n                        </div>\n                    </div>\n                    <div className='detail-notes'>\n                        <div className=\"detail-notes-title\">Notes:</div>\n                        <p>{selectedBounce.comments}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>No Bounces for this Version</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n    \n\n    if (uploadActive) {\n        return <div className=\"detail-box bounce\">\n            {uploadContent()}\n        </div>\n    } else {\n        if (version) {\n            return (\n                <div className=\"detail-box bounce\">   \n                    {renderBounceDetail()}                                            \n                    <div className=\"detail-buttons\">\n                        {renderAddButton()}\n                        {selectedBounce && renderEditButton()}\n                        {selectedBounce && renderDeleteButton()}\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n};\n\nexport default connect(null, { selectBounce, createBounce, editBounce, deleteBounce })(requireAuth(Bounce));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion } from '../actions';\nimport Bounce from './Bounce';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Version = ({ versions, bounces, fetchBounces, selectVersion, title, createVersion, authorized, editVersion, deleteVersion }) => {\n\n    const [selectedVersion, setSelectedVersion] = useState(title.selectedVersion);\n    const [bounceList, setBounceList] = useState(null);\n\n    useEffect(() => {\n        // console.log(selectedVersion);\n        if (selectedVersion) {\n            selectVersion(selectedVersion, title.id);\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n        }\n    }, [selectedVersion]);\n\n    useEffect(() => {\n        if (selectedVersion) {\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (selectedVersion !== title.selectedVersion) {\n            setSelectedVersion(title.selectedVersion);\n            fetchBounces(title.selectedVersion.id);\n        }\n    }, [versions, title.selectedVersion]);\n\n    const renderVersionList = () => {\n        const versionList = versions.filter(v => v.id !== selectedVersion.id);\n\n        return versionList.map(v => {\n            const current = v.current ? <span className=\"list-current\"> * current</span> : null;\n            return <div\n                className=\"dropdown-link change-version\"\n                onClick={() => setSelectedVersion(v)}\n                key={v.id}\n            >\n                    {v.name}\n                    {current}\n            </div>\n        });\n    };\n    \n    const versionCount = () => {\n        let count;\n        if (versions.length === 1) {\n            count = '1 Version:';\n        } else {\n            count = `${versions.length} Versions:`\n        }\n\n        return (\n            <h5>{count}</h5>\n        );\n    };\n    \n    const renderBounces = () => {\n\n        if (bounceList) {\n\n            return (\n                <Bounce bounces={bounceList} title={title} version={selectedVersion} />\n            );\n        \n            \n        }\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Version of ${title.title}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true         \n                        },\n                        {\n                            label: 'Notes',\n                            name: 'notes',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Current Version?',\n                            name: 'current',\n                            type: 'checkbox',      \n                        },\n                    ]}\n                    onSubmit={(formValues) => createVersion(formValues, title.id)}\n                    form={`add-version-${title.id}`}\n                    initialValues={{ current: true }}\n                    enableReinitialize={true}\n                    addClass='add-version'\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={`Edit ${selectedVersion.name}`}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'Name',\n                        name: 'name',\n                        type: 'input', \n                    },\n                    {\n                        label: 'Notes',\n                        name: 'notes',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Version?',\n                        name: 'current',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={formValues => editVersion(formValues, selectedVersion.id, title.id)}\n                initialValues={_.pick(selectedVersion, 'name', 'notes', 'current')}\n                form={`edit-version-${title.id}`}\n                enableReinitialize={true}\n                addClass='add-version'\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return <DeleteButton\n                onSubmit={() => deleteVersion(selectedVersion.id, title.id)}\n                displayName={selectedVersion.name}\n            />;\n        }\n    };\n\n    const latestTag = () => {\n        if (selectedVersion.current) {\n            return (\n                <div className=\"current\">\n                    Current\n                </div>\n            );\n        }\n    };\n\n    const renderVersionDetail = () => {\n        if (selectedVersion) {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        {versionCount()}\n                        <div className=\"dropdown\">\n                            <button className=\"dropbtn\">\n                                {selectedVersion.name}\n                            </button>\n                            <div className=\"dropdown-content\">\n                                {renderVersionList()}\n                            </div>\n                        </div>\n                        {latestTag()}\n                    </div>\n                    <div className=\"detail-notes\">\n                        <div className=\"detail-notes-title\">Notes:</div>\n                        <p>{selectedVersion.notes}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>No Versions for this Song Yet</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n\n\n    \n    return <>\n            <div className=\"detail-box\">\n                {renderVersionDetail()}      \n                <div className=\"detail-buttons\">\n                    {renderAddButton()}\n                    {selectedVersion && renderEditButton()}\n                    {selectedVersion && renderDeleteButton()}\n                </div>\n            </div>\n            {renderBounces()}          \n    </>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        bounces: state.bounces\n    };\n}\n\nexport default connect(mapStateToProps, { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion })(requireAuth(Version));","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { queueSongs, queuePlaylistSongs, playAudio, throwError } from '../actions';\n\n\nconst PlayContainer = ({ song, queueSongs, parentType, queuePlaylistSongs, throwError }) => {\n\n    const displayDate = (date) => {\n        return moment.utc(date).format('MM/DD/YY');\n    }\n\n    const displayTime = (time) => {\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time % 60) < 10 ? '0' + Math.floor(time % 60) : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    const onPlay = (e) => {\n        e.stopPropagation();\n        if (parentType === \"tier\") {\n            queueSongs(song);\n        } else if (parentType === \"playlist\") {\n            queuePlaylistSongs(song);\n        }\n    };\n\n\n    let baseUrl;\n    if (process.env.NODE_ENV === 'production') {\n        baseUrl = 'https://exploring-the-space.com'\n    } else {\n        baseUrl = 'http://localhost:3001';\n    }\n\n    return (\n        <div className='play-container'>\n            <div className='play-container-time'>{displayTime(song.bounce.duration)}</div>           \n            <img\n                src='/images/play.svg' className='play-icon'\n                onClick={onPlay}\n            /> \n            <div className='play-container-display'>\n                <p>{song.version.name}</p>\n                <p>{displayDate(song.bounce.date)}</p>\n            </div>\n            <a\n                className='download'\n                onClick={e => e.stopPropagation()}\n                href={`${baseUrl}/api/audio/download/${song.bounce.id}/${encodeURIComponent(song.title.title)}`}\n                download\n            >\n                <img src=\"/images/download.svg\" />\n            </a>\n        </div>\n    );\n};\n\nexport default connect(null, { queueSongs, queuePlaylistSongs, playAudio, throwError })(PlayContainer);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport Version from './Version';\nimport AddButton from './AddButton';\nimport { fetchVersions, fetchBounces, selectBounce, selectVersion, createPlaylistSong, editTitle, deleteTitle } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\nimport DeleteButton from './DeleteButton';\n\nconst Title = ({ tier, title, titles, fetchVersions, versions, bounces, fetchBounces, authorized, band, playlists, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle, getTime, audio, findLatest, tiers }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [versionList, setVersionList] = useState(null);\n    const [bounceList, setBounceList] = useState(null);\n    const [song, setSong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(title.id);\n    }, []);\n\n    useEffect(() => {\n\n        setVersionList(title.versions.map(id => versions[id]));\n        // console.log('set version list')\n        \n    }, [versions, title]);\n\n    useEffect(() => {\n        if (versionList && versionList[0]) {\n            \n            let versionToSelect;\n\n            const versionIds = versionList.map(v => v.id);\n\n            if (!title.selectedVersion || !versionIds.includes(title.selectedVersion.id)) {\n                versionToSelect = versionList.find(v => v.current);\n            } else if (title.selectedVersion) {\n                if (!versionList.includes(title.selectedVersion)) {\n                    versionToSelect = versionList.find(v => v.id === title.selectedVersion.id);\n                } else {\n                    versionToSelect = title.selectedVersion;\n                }\n            }\n            selectVersion(versionToSelect, title.id);\n            // console.log('select version')\n        }\n        if (title.selectedVersion) {\n            fetchBounces(title.selectedVersion.id);\n            // console.log('fetch bounces')\n        }\n    }, [versionList]);\n\n    useEffect(() => {\n        if (title.selectedVersion) {\n            if (title.selectedVersion.bounces[0]) {\n                setBounceList(title.selectedVersion.bounces.map(id => bounces[id]));\n                // console.log('set bounce list')\n            } else if (title.selectedBounce !== null) {\n                // console.log('set bounce list null')\n                setBounceList(null);\n                selectBounce(null, title.id);\n            }\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (bounceList && bounceList[0]) {\n\n            let bounceToSelect;\n\n            if (title.selectedBounce && bounceList.includes(title.selectedBounce)) {\n                bounceToSelect = title.selectedBounce;\n            } else {\n                bounceToSelect = bounceList.find(b => b.latest);\n                findLatest(title, bounceToSelect);\n            }\n\n            if (bounceToSelect !== title.selectedBounce) {\n                \n                selectBounce(bounceToSelect, title.id);\n                // console.log('select bounce');\n                \n            }\n        } else if (song) {\n            setSong(null);\n        }\n\n    }, [bounceList]);\n\n\n    useEffect(() => {\n\n        if (title.selectedBounce && title.selectedVersion) {\n\n            if (!song || song.selectedVersion !== song.version || song.selectedBounce !== song.bounce) {\n\n                setSong({\n                    tier,\n                    title,\n                    version: title.selectedVersion,\n                    bounce: title.selectedBounce\n                });\n                // console.log('title update')\n                getTime({ id: title.id, duration: title.selectedBounce.duration });\n            }\n        } else if (song && !title.selectedBounce) {\n            setSong(null);\n            getTime({ id: title.id, duration: 0 });\n        }\n        \n    }, [titles[title.id].selectedVersion, titles[title.id].selectedBounce]);\n\n\n    const renderPlayContainer = () => {\n\n        if (song) {\n            return <PlayContainer song={song} parentType=\"tier\" />;\n        }\n    }\n\n    const renderVersion = () => {\n\n   \n        return (\n            <Version versions={versionList} title={title} />\n        )\n    }\n\n    const onAddToPlaylist = formValues => {\n        createPlaylistSong({\n            ...formValues,\n            bounce: title.selectedBounce.id,\n            version: title.selectedVersion.id,\n            title: title.id\n        });\n    }\n\n    const renderButtons = () => {\n        if (authorized) {\n            const bandPlaylists = band.playlists.map(id => playlists[id]);\n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name};\n                }\n            });\n            const bandTiers = band.tiers\n                .filter(t => t !== tier.id)\n                .map(id => tiers[id]);\n            const tierOptions = bandTiers.map(t => {\n                if (t) {\n                    return { value: t.id, display: t.name };\n                }\n            });\n            tierOptions.unshift({ value: null, display: ''});\n            return (\n                <div className='tier-display'>\n                    {song && <AddButton\n                        title=\"Add to a Playlist\"\n                        onSubmit={formValues => onAddToPlaylist(formValues)}\n                        image=\"images/playlist.png\"\n                        fields={[\n                            {\n                                type: 'select',\n                                options: playlistOptions,\n                                name: 'playlistId',\n                                label: 'Playlist'\n                            }\n                        ]}\n                        form={`add-to-playlist-${title.id}`}\n                        enableReinitialize={true}\n                    />}\n                    <AddButton\n                        title={`Edit ${title.title}`}\n                        image=\"images/edit.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            },\n                            {\n                                label: 'Move to Tier',\n                                name: 'move',\n                                type: 'select',\n                                options: tierOptions\n                            }\n                        ]}\n                        onSubmit={formValues => editTitle(formValues, title.id, tier.id)}\n                        initialValues={{ title: title.title, move: null }}\n                        form={`edit-title-${title.id}`}\n                        enableReinitialize={true}\n                    />\n                    <DeleteButton\n                        onSubmit={() => deleteTitle(title.id, tier.id)}\n                        displayName={title.title}\n                    />\n                </div>\n            )\n        }\n    }\n\n    const arrow = expand ? 'down-arrow' : '';\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && title.selectedBounce) {\n        currentClass = parent === tier.id && current === title.selectedBounce.id ? 'current-song' : '';\n    }\n\n    let open = expand ? 'open' : 'closed';\n\n    return (\n        <div className=\"title-margin\">\n            <div className={`row title ${currentClass} ${expand ? 'row-open' : ''}`}>\n                <div className=\"marqee\" onClick={() => setExpand(!expand)}>\n                    <div className=\"title-name\"   >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`} />              \n                        <h3>{title.title}</h3>\n                    </div>\n                    {renderPlayContainer()}\n                    {renderButtons()}\n                </div>\n            </div>\n            <div className={`version-container ${open}`}>\n                {expand && renderVersion()}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        versions: state.versions,\n        bounces: state.bounces,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        titles: state.titles,\n        audio: state.audio,\n        tiers: state.tiers\n    }\n}\n\nexport default connect(mapStateToProps, { fetchVersions, fetchBounces, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle })(requireAuth(Title));","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { createTier, editTier, fetchTitles, createTitle, deleteTier } from '../actions';\nimport Title from './Title';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\n\nconst Tier = ({ tier, titles, fetchTitles, authorized, band, tiers, editTier, createTitle, deleteTier }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [titlesToRender, setTitlesToRender] = useState(null);\n    const [times, setTimes] = useState({});\n    const [orderBy, setOrderBy] = useState('date');\n\n    const orderedTitles = useRef({});\n\n    useEffect(() => {\n        fetchTitles(tier.id);\n    }, []);\n\n    useEffect(() => {\n        setTitlesToRender(tier.trackList\n            .map(id => titles[id]));\n    }, [titles, tier]);\n\n    const findLatest = (title, bounce) => {\n        if (!orderedTitles.current[title.id]) {\n            orderedTitles.current[title.id] = new Date(bounce.date);\n        }\n    };\n\n    const renderTitles = () => {\n\n        let titleList;\n\n        if (orderBy === 'date') {\n\n            titleList = titlesToRender.sort((a, b) => {\n                if (orderedTitles.current[a.id] && orderedTitles.current[b.id]) {\n                    if (orderedTitles.current[a.id] > orderedTitles.current[b.id]) {\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                } else if (orderedTitles.current[a.id]) {\n                    return -1;\n                } else if (orderedTitles.current[b.id]) {\n                    return 1;\n                }\n            });\n        }\n\n        if (orderBy === 'name') {\n\n            titleList = titlesToRender.sort((a, b) => {\n                return a.title < b.title ? -1 : 1;\n            });\n\n        }\n\n        return titleList.map(title => {\n            if (title) {\n                return (\n                    <Title title={title} tier={tier} key={title.id} getTime={getTime} findLatest={findLatest}/>\n                );\n            }\n        });\n    };\n\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Title to ${tier.name}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'Title',\n                            name: 'title',\n                            type: 'input',\n                            required: true\n                        }\n                    ]}\n                    onSubmit={(formValues) => {\n                        createTitle(formValues, tier.id);\n                        setExpand(true);\n                    }}\n                    form={`add-title-${tier.id}`}\n                    addClass='add-left'\n                />\n            )\n        }\n    }\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n            const tierList = band.tiers\n                .map(id => tiers[id])\n                .sort((a, b) => a.position < b.position ? -1 : 1)\n                .map(t => {\n                    if (t) {\n                        return { value: t.position, display: t.position };\n                    }\n                });\n\n\n            return (\n                <AddButton\n                    title={`Edit ${tier.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Tier Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true        \n                        }, {\n                            label: 'Tier Position',\n                            name: 'position',\n                            type: 'select',\n                            options: tierList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editTier(formValues, tier.id)}\n                    initialValues={{ name: tier.name, position: tier.position }}\n                    form={`edit-tier-${tier.id}`}\n                    enableReinitialize={true}\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deleteTier(tier.id)}\n                    displayName={tier.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n    const renderOrderButton = () => {\n        if (orderBy === 'date') {\n            return (\n                <div className='order-by'>\n                    <div>Order by: </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrderBy('name');\n                        }}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        } else if (orderBy === 'name') {\n            return (\n                <div className='order-by'>\n                    <div>Order by:</div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrderBy('date');\n                        }}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        }\n\n     \n    }\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)}>\n                <div className=\"marqee\">\n                    <div className=\"tier-name\">\n                        <img className={`arrow ${arrow}`} src={`images/right-arrow.svg`} />\n                        <h2>{tier.name}</h2>\n                        {renderAddButton()}\n                    </div>\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{tier.trackList.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    {renderOrderButton()}\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && titlesToRender && renderTitles()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        titles: state.titles,\n        band: state.bands.currentBand,\n        tiers: state.tiers\n    }\n};\n\n\nexport default connect(mapStateToProps, { createTier, fetchTitles, editTier, createTitle, deleteTier })(requireAuth(Tier));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport { editPlaylistSong, fetchVersions, fetchBounces, deletePlaylistSong } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\n\nconst PlaylistSong = ({ playlist, playlists, song, playlistSongs, authorized, versions, bounces, titles, fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong, audio, getTime, band }) => {\n\n    const [playSong, setPlaySong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(song.title);\n        titles[song.title].versions.forEach(id => {\n            fetchBounces(id);\n        });\n    }, []);\n    \n    useEffect(() => {\n        if (titles[song.title]) {\n            setPlaySong({\n                    playlist,\n                    title: titles[song.title],\n                    version: versions[song.version],\n                    bounce: bounces[song.bounce],\n                    position: song.position\n                });\n            }\n            if (bounces[song.bounce]) {\n                getTime({ id: song.id, duration: bounces[song.bounce].duration });\n            }   \n    }, [playlistSongs[song.id], bounces[song.bounce], titles[song.title], versions[song.version]]);\n\n    const renderPlayContainer = () => {\n\n        if (playSong && playSong.bounce && playSong.version) {\n            return <PlayContainer song={playSong} parentType=\"playlist\" />;\n        } else {\n            return (\n                <div className=\"playlistsong-no-bounce\">\n                    <p>\n                        {versions[song.version] ? `${versions[song.version].name}` : 'No Version Selected'}\n                    </p>\n                    <p>\n                        No Bounce Selected\n                    </p>\n                </div>\n            );\n        }\n    };\n\n    const onEditSubmit = formValues => {\n        const thisVersion = Object.values(versions).find(v => v.bounces.includes(formValues.bounce));\n        editPlaylistSong({\n            ...formValues,\n            version: thisVersion.id,\n            playlistId: playlist.id\n        }, song.id);\n    };\n\n    const renderEditButton = () => {\n        if (authorized && titles[song.title]) {\n\n            const otherSongs = Object.values(playlistSongs)\n                .filter(s => playlist.songs.includes(s.id))\n                .sort((a,b) => a.position < b.position ? -1 : 1)\n                .map(s => {\n                    return { value: s.position, display: s.position };\n            });\n\n            const thisTitle = titles[song.title];\n\n            const otherVersions = thisTitle.versions.map(id => versions[id]);\n\n            const otherBounces = otherVersions.map(v => {\n                if (v) {\n                    return v.bounces.map(id => bounces[id]);\n                }\n            });\n\n\n            const editOptions = [];\n            \n            otherVersions.forEach((v, i) => {\n                if (otherBounces[i]) {\n                    otherBounces[i].forEach(b => {\n                        if (b) {\n                            let current = '';\n                            if (v.current && b.latest) {\n                                current =' * current';\n                            }\n                            editOptions.push({\n                                value: b.id,\n                                display: `${v.name} -- ${moment.utc(b.date).format('MM/DD/YY')}${current}`\n                            });\n                        }\n                    });\n                }\n            });\n\n\n            const bandPlaylists = band.playlists\n                .filter(id => id !== playlist.id)\n                .map(id => playlists[id]);\n                \n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name };\n                }\n            });\n\n            playlistOptions.unshift({ value: null, display: ''})\n\n            return (\n                <AddButton\n                    image='/images/edit.png'\n                    title={`Edit ${titles[song.title].title}`}\n                    onSubmit={formValues => onEditSubmit(formValues)}\n                    fields={[\n                        {\n                            name: 'position',\n                            label: 'Position',\n                            type: 'select',\n                            options: otherSongs\n                        },\n                        {\n                            name: 'bounce',\n                            label: 'Bounce',\n                            type: 'select',\n                            options: editOptions,\n                            required: true\n                        },\n                        {\n                            label: 'Add to Playlist',\n                            name: 'move',\n                            type: 'select',\n                            options: playlistOptions\n                        }\n                    ]}\n                    initialValues={song.bounce ? { ..._.pick(song, 'position', 'bounce'), move: null } : { position: song.position, move: null }}\n                    form={`edit-playlistsong-${song.id}`}\n                    enableReinitialize={true}\n                    addClass='add-right'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylistSong(song.id, playlist.id)}\n                    displayName={titles[song.title].title}\n                />\n            );\n        }\n    };\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && song.bounce) {\n        currentClass = parent === playlist.id && current === song.bounce ? 'current-song' : '';\n    }\n\n\n    return (\n        <div className='title-margin'>\n            <div className={`row title playlistsong ${currentClass}`}>                    \n                <div className=\"marqee\">\n                    <div className='title-name'>\n                        <div className=\"song-position\">\n                            <p>{song.position}</p>\n                        </div>\n                        <h3>{song && titles[song.title] && titles[song.title].title}</h3>\n                    </div>      \n\n                    {renderPlayContainer()}\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\n\n\nconst mapStateToProps = state => {\n\n    return {\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        versions: state.versions,\n        bounces: state.bounces,\n        titles: state.titles,\n        audio: state.audio\n    }\n\n}\n\nexport default connect(mapStateToProps, { fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong })(requireAuth(PlaylistSong));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchPlaylistSongs, deletePlaylist, editPlaylist } from '../actions';\nimport PlaylistSong from './PlaylistSong';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Playlist = ({ playlist, playlists, fetchPlaylistSongs, playlistSongs, authorized, deletePlaylist, band }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [playlistList, setPlaylistList] = useState([]);\n    const [times, setTimes] = useState({});\n    const [songsToRender, setSongsToRender] = useState(null);\n\n\n    useEffect(() => {\n        fetchPlaylistSongs(playlist.id);\n    }, []);\n\n    useEffect(() => {\n        setSongsToRender(playlist.songs.map(id => playlistSongs[id]));\n    }, [playlistSongs, playlist.songs]);\n\n    const renderPlaylistSongs = () => {\n\n        songsToRender.sort((a, b) => a.position < b.position ? -1 : 1);\n\n        return songsToRender.map(song => {\n            if (song) {\n                return (\n                <PlaylistSong song={song} playlist={playlist} key={song.id} getTime={getTime} />\n                );\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (band.playlists.length) {\n            const playlistsToShow = band.playlists.map(id => playlists[id]).sort((a, b) => {\n                if (a.position < b.position) {\n                    return -1;\n                }\n                if (b.position < a.position) {\n                    return 1;\n                }\n            });\n            setPlaylistList(playlistsToShow.map(t => {\n                if (t) {\n                    return { value: t.position, display: t.position };\n                }\n            }));\n        }\n    }, [playlists]);\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n\n            return (\n                <AddButton\n                    title={`Edit ${playlist.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Playlist Name',\n                            name: 'name',\n                            type: 'input',          \n                        }, {\n                            label: 'Playlist Position',\n                            name: 'position',\n                            type: 'select',\n                            options: playlistList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editPlaylist(formValues, playlist.id)}\n                    initialValues={_.pick(playlist, 'name', 'position')}\n                    form={`edit-${playlist.id}`}\n                    enableReinitialize={true}\n                    addClass='add-tier'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylist(playlist.id)}\n                    displayName={playlist.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)} >\n                <div className=\"marqee tier-info\">\n                    <div className=\"tier-name\"  >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`}/>\n                        <h2>{playlist.name}</h2>\n                    </div>\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{playlist.songs.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                            {renderEditButton()}\n                            {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && renderPlaylistSongs()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        playlists: state.playlists,\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand\n    }\n}\n\nexport default connect(mapStateToProps, { fetchPlaylistSongs, deletePlaylist })(requireAuth(Playlist));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchTiers, fetchPlaylists, createTier, createPlaylist } from '../actions';\nimport Tier from './Tier';\nimport Playlist from './Playlist';\nimport AddButton from './AddButton';\nimport requireAuth from './requireAuth';\n\nconst BodyContainer = ({ fetchPlaylists, createTier, fetchTiers, tiers, playlists, band, authorized, createPlaylist, currentSong }) => {\n\n    const [tierList, setTierList] = useState([]);\n    const [playlistList, setPlaylistList] = useState([]);\n\n    useEffect(() => {\n        fetchTiers(band.id);\n        fetchPlaylists(band.id);\n    }, []);\n\n    useEffect(() => {\n        setTierList(band.tiers.map(id => tiers[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [tiers]);\n\n    useEffect(() => {\n        setPlaylistList(band.playlists.map(id => playlists[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [playlists]);\n\n    const renderTiers = () => {\n\n        return tierList.map(tier => {\n            if (tier) {\n                return (\n                    <Tier tier={tier} key={tier.id} />\n                );\n            }\n        });\n    };\n\n\n    const renderTierAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createTier(formValues)}\n                    title='Add a Tier'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Tier Name',\n                        name: 'tierName',\n                        type: 'input',\n                        required: true          \n                    }]}\n                    addClass='add-left'\n                    \n                />\n            );\n        }\n    };\n\n    const renderPlaylistAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createPlaylist(formValues)}\n                    title='Add a Playlist'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Playlist Name',\n                        name: 'playlistName',\n                        type: 'input',\n                        required: true             \n                    }]}\n                    addClass='add-left'\n                />\n            );\n        }\n    };\n\n    const renderPlaylists = () => {\n\n        return playlistList.map(playlist => {\n            if (playlist) {\n                return (\n                    <Playlist playlist={playlist} key={playlist.id} />               \n                );\n            }\n        });\n    };\n\n    const playbarActive = currentSong ? 'playbar-active' : ''\n\n    return (\n        <div className={`main ${playbarActive}`}>\n            <div className=\"section-header\">\n                <h2 className=\"section-title\">Tiers</h2>\n                <div className=\"section-add\">\n                    {renderTierAddButton()}\n                </div>\n            </div>\n            <hr />\n            {tiers && renderTiers()}\n            <div className=\"playlists\">\n                <div className=\"section-header\">\n                    <h2 className=\"section-title\">Playlists</h2>\n                    <div className=\"section-add\">\n                        {renderPlaylistAddButton()}\n                    </div>\n                </div>\n                <hr />\n                {playlists && renderPlaylists()}\n            </div>\n        </div>\n\n\n    );\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        tiers: state.tiers,\n        playlists: state.playlists,\n        currentSong: state.audio.currentSong\n    };\n};\n\nexport default connect(mapStateToProps, { fetchTiers, fetchPlaylists, createTier, createPlaylist })(requireAuth(BodyContainer));","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { playAudio, pauseAudio, nextSong, throwError, initializeAudio } from '../actions';\n\n\nclass AudioDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'production') {\n            this.url = 'https://exploring-the-space.com'\n        } else {\n            this.url = 'http://localhost:3001';\n        }\n        this.audio = React.createRef();\n    }\n\n\n    state = { volume: 50, sliderPosition: 0 };\n\n    formatTime(time) {\n\n        let minutes = time < 600 ? `0${Math.floor(time/60)}` : Math.floor(time/60);\n        let seconds = time % 60 < 10 ? `0${Math.floor(time % 60)}` : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    wrapUrl(id) {\n        return `${this.url}/api/audio/${id}.mp3`\n    }\n\n    updateSlider = () => {\n        const position = (this.audio.current.currentTime / this.audio.current.duration) * 1000;\n        this.time = this.formatTime(this.audio.current.currentTime);\n        if (!isNaN(position)) {\n            this.setState({\n                sliderPosition: position\n            });\n        }\n    }\n\n    setSpaceBarToPlay = (e) => {\n        if (e.code === 'Space') {\n            e.preventDefault();\n            if (this.props.pause) {\n                this.play();\n            } else {\n                this.pause();\n            }\n        }\n    }\n\n    audioError = () => {\n        const message = \"The audio player had an error, probably can't connect to server.\"\n        this.props.throwError(message);\n    }\n\n    componentDidMount() {\n\n        // if there's no audio element created, create one with the current song\n        // add event listener to link the slider position to the time of the song\n\n        \n        this.audio.current = new Audio();\n\n        this.audio.current.addEventListener('timeupdate', this.updateSlider);\n\n        this.audio.current.addEventListener('error', this.audioError);\n\n        // load next song at song end\n\n        this.audio.current.addEventListener('ended', this.nextSong);\n\n        // space bar stop/start\n\n        document.addEventListener('keydown', this.setSpaceBarToPlay);\n\n\n        this.audio.current.addEventListener('loadedmetadata', this.audio.current.play);\n        \n\n        \n    }\n\n    componentDidUpdate(prevProps) {\n\n        // scroll down to compensate for the playbar pushing content down\n\n        if (!this.scrolled) {\n            window.scroll(window.scrollX, window.scrollY + 96);\n            this.scrolled = true;\n        }\n        \n        if (this.props.song) {\n            // if the current song is changed to something other than what is already loaded, change the src url and play the audio\n                        // if redux gets a signal to play, play if not already\n            // reverse for pause\n            if (this.props.song !== prevProps.song) {\n                this.audio.current.src=this.wrapUrl(this.props.song.audio);\n                this.audio.current.volume = this.props.volume / 100;\n                // this.audio.current.play();\n            } else if (this.props.play && prevProps.pause) {\n\n                this.audio.current.play();\n            } else if (this.props.pause && prevProps.play) {\n                this.audio.current.pause();\n            }\n            if (this.props.volume !== prevProps.volume) {\n                this.audio.current.volume = this.props.volume / 100;\n\n            }\n        } else {\n            this.audio.current.pause();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.setSpaceBarToPlay);\n\n        this.audio.current.src='';\n        this.audio.current.removeEventListener('timeupdate', this.updateSlider);\n        this.audio.current.removeEventListener('error', this.audioError);\n        this.audio.current.removeEventListener('ended', this.nextSong);\n        this.audio.current.removeEventListener('loadedmetadata', this.audio.current.play);\n\n        this.props.initializeAudio();\n    }\n\n    nextSong = () => {\n        // setTimeout(() => {\n        this.props.nextSong();\n        // }, 400);\n    }\n\n    play = () => {\n        this.props.playAudio();\n    }\n\n    pause = () => {\n        this.props.pauseAudio();\n    }\n\n    onSliderChange = (e) => {\n        const position = (e.target.value / 1000) * this.audio.current.duration;\n        this.audio.current.currentTime = position;\n    }\n\n    onPauseButton = () => {\n\n        if (this.props.play) {\n            this.pause();\n        } else {\n            this.play();\n        }\n\n    }\n\n    render() {\n\n        if (this.props.song) {\n\n            return (\n                <div className=\"playbar\">\n                    <div className=\"playbar-header\">\n                            <div className=\"playbar-title\">\n                                <p>{this.props.song.title.title}</p>\n                            </div>\n                        <div className=\"big-play-container\" onClick={this.onPauseButton}>\n                            <img className=\"big-play-btn\" src={this.props.play ? \"/images/pause.svg\" : \"/images/play.svg\"} />\n                        </div>\n                        <div className=\"playbar-info\">\n                            <div className=\"playbar-info-detail\">\n                                <p>Version:</p>\n                                <p>{this.props.song.version}</p>\n                            </div>\n                            <div className=\"playbar-info-detail\">\n                                <p>Date:</p>\n                                <p>{this.displayDate(this.props.song.date)}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"playslider-container\">\n                        <div className=\"playslider-time\">\n                            {this.time}\n                        </div>\n                        <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"1000\"\n                            value={this.state.sliderPosition}\n                            className='playslider'\n                            onInput={this.onSliderChange}\n                        />\n                        <div className=\"playslider-time\">\n                            {this.formatTime(this.props.song.duration)}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.audio.currentSong,\n        play: state.audio.play,\n        pause: state.audio.pause,\n        volume: state.audio.volume\n    };\n};\n\nexport default connect(mapStateToProps, { playAudio, pauseAudio, nextSong, throwError, initializeAudio })(AudioDisplay);","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchBand, signOut, changeVolume } from '../actions';\nimport Main from './Main';\nimport AudioDisplay from './AudioDisplay';\nimport requireAuth from './requireAuth';\n\nconst Header = ({ fetchBand, band, match, authorized, handleUpdate, user, signedIn, signOut, volume, changeVolume }) => {\n\n    const [expand, setExpand] = useState(false);\n    const menu = useRef(null);\n\n    useEffect(() => {\n        fetchBand(match.params.bandName);\n        document.addEventListener('click', clickToDismiss, { capture: true });\n        return () => {\n            document.removeEventListener('click', clickToDismiss, { capture: true });\n        };\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [band, user]);\n\n    const clickToDismiss = (e) => {\n        if (menu.current && menu.current.contains(e.target)) {\n            return;\n        }\n        setExpand(false);\n        \n    };\n\n    const renderAdmin = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/user\">User Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <div className=\"menu-item\" onClick={signOut}>Sign Out</div>\n            </div>\n        );\n    };\n\n    const renderHomeLink = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/\">Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <Link className=\"menu-item\" to=\"/signin\">Sign In</Link>\n            </div>\n        );\n    };\n\n    const showMain = () => {\n        if (!band) {\n            return null\n        }\n        if (signedIn && !user) {\n            return null\n        }\n        return <Main band={band}/>\n    }\n\n    return <>\n        \n        <div className=\"header\">\n            <AudioDisplay />\n            <div className=\"band-header\">\n                <div className=\"band-name\">\n                    <h1>{band && band.name}</h1>\n                    <div className=\"menu-button\" ref={menu} onClick={() => setExpand(!expand)}>\n                        <img src=\"images/dots.png\" />\n                        {expand && (authorized ? renderAdmin() : renderHomeLink())}\n                    </div>\n                </div>\n                <div className=\"volume-container\">\n                    <input\n                        type=\"range\"\n                        min=\"0\" max=\"100\"\n                        className=\"volume\"\n                        value={volume}\n                        onInput={e => changeVolume(e.target.value)}\n                    />\n                    <img src=\"/images/volume.svg\" />\n                </div>\n            </div>\n        </div>\n\n        {showMain()}\n\n    </>;\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        band: state.bands.currentBand,\n        user: state.auth.currentUser,\n        signedIn: state.auth.isSignedIn,\n        volume: state.audio.volume\n    }\n}\n\nexport default connect(mapStateToProps, { fetchBand, signOut, changeVolume })(requireAuth(Header));","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { createBand, fetchBands, editBand, deleteBand, signOut } from '../actions';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\n\nconst User = ({ user, bands, createBand, fetchBands, editBand, deleteBand, signOut }) => {\n\n    useEffect(() => {\n        fetchBands();\n    }, []);\n\n    const renderBands = () => {\n        const bandList = user.bands.map(id => bands[id]);\n        if (!bandList.length || !bandList[0]) {\n            return <h3>No bands belong to this user</h3>\n        }\n        return bandList.map(band => {\n            if (band) {\n                return (\n                    <div className=\"band-item\" key={band.id}>\n                        <Link to={`/${band.url}`}>\n                            <h2>{band.name}</h2>\n                        </Link>\n                        <div className=\"band-buttons\">\n                            <AddButton\n                                onSubmit={formValues => editBand(formValues, band.id)}\n                                title={`Edit ${band.name}`}\n                                image=\"images/edit.png\"\n                                fields={[{\n                                    label: 'Band Name',\n                                    name: 'name',\n                                    type: 'input'\n                                }]}\n                                initialValues={{ name: band.name }}\n                                enableReinitialize={true}\n                                form={`edit-band-${band.id}`}\n                            />\n                            <DeleteButton\n                                onSubmit={() => deleteBand(band.id)}\n                                displayName={band.name}\n                            />\n                        </div>\n                    </div>                   \n                );\n            }\n        });\n    };\n\n    if (user) {\n        return <>\n            <div className=\"user-header\">\n                <div className=\"user-header-sub\">\n                    <h1 className=\"user-title\">\n                        {user.username}'s bands\n                    </h1>\n                    <AddButton\n                        onSubmit={formValues => createBand(formValues)}\n                        title='Create a Band'\n                        image=\"images/add.png\"\n                        fields={[{\n                            label: 'Band Name',\n                            name: 'bandName',\n                            type: 'input'\n                        }]}\n                    />\n                </div>\n                <div className=\"user-header-sub\">\n                    <Link className=\"user-link\" to=\"/\">\n                        Home\n                        </Link>\n                    <div className=\"user-link\" onClick={signOut}>\n                        Sign Out\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <div className=\"band-list\">\n                {renderBands()}\n            </div>\n            \n\n        </>;\n    } else {\n        return null;\n    }\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { createBand, fetchBands, editBand, deleteBand, signOut })(User);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass UserForm extends React.Component {\n    \n    renderInput = ({ input, label, meta, type, autoComplete, defaultValue }) => {\n\n        return (\n            <div>\n                <label>{label}</label>\n                <input\n                    type={type}\n                    autoComplete={autoComplete} \n                    {...input}\n                /> \n            </div>\n        );\n    };\n\n    submitForm = formValues => {\n        this.props.onSubmit(formValues);\n    };\n\n\n    render() {\n        return (\n            <form className='signin' onSubmit={this.props.handleSubmit(this.submitForm)}>\n                <Field\n                    name=\"username\"\n                    component={this.renderInput}\n                    label=\"Username: \"\n                    type=\"text\"\n                    autoComplete=\"username\"\n    \n                />\n                <Field\n                    name=\"password\"\n                    component={this.renderInput}\n                    label=\"Passwyrd: \"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <button className=\"signin-submit\">Submit</button>\n            </form>\n        );\n    }\n\n\n}\n\nexport default reduxForm({\n    form: 'userForm'\n})(UserForm);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signIn } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignIn = ({ signIn, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign In</h1>\n            <UserForm onSubmit={formValues => signIn(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signup\">\n                    Sign Up\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn })(SignIn);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signUp } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignUp = ({ signUp, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign Up</h1>\n            <UserForm onSubmit={formValues => signUp(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signin\">\n                    Sign In\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signUp })(SignUp);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { fetchBands } from '../actions';\n\nclass Home extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchBands();\n    }\n\n    renderBands() {\n\n        delete this.props.bands.currentBand;\n\n        const bands = Object.values(this.props.bands);\n\n        return bands.map(band => {\n            return (\n                <div className=\"band-item\" key={band.id}>\n                    <Link to={`/${band.url}`}>\n                        <h2>{band.name}</h2>\n                    </Link>\n                </div>\n            );\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 className=\"home-header\">Exploring the Space</h1>\n                <div className=\"home-buttons\">\n                    <Link to=\"/signin\">\n                        Sign In\n                    </Link>\n                    <Link to=\"/signup\">\n                        Sign Up\n                    </Link>\n                    <Link to=\"/help\">\n                        What Is It?\n                    </Link>\n                </div>\n                <h1>All Bands:</h1>\n                <div className=\"band-list\">\n                    {this.props.bands && this.renderBands()}\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { fetchBands })(Home);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Help = () => {\n    return <>\n        <div className=\"home-buttons\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"signin\">Sign In</Link>\n            <Link to=\"signin\">Sign Up</Link>\n        </div>\n        <div className=\"help\">\n            <div className=\"help-header\">\n                Exploring the Space allows you to keep track of your musical recordings in an easy to navigate catalogue.\n            </div>\n            <h1>\n                Here's How This Works\n            </h1>\n            <div className=\"tldr\">\n                TL;DR: Bands contain Tiers, which contain Titles, which contain different versions, each of which can have one or more recordings. Bands also have Playlists which are collections of particular recordings.\n            </div>\n            <p>\n                Each user can have 1 or more bands.  Each band has their own page.\n            </p>\n\n            <h2>\n                The Band Page\n            </h2>\n            <p>\n                The band page has a \"Tiers\" sections and a \"Playlists\" section. The tiers are used to catalogue your songs, and the playlists are used to combine different songs into a certain order.\n            </p>\n            <h3>\n                Tiers\n            </h3>\n            <p>\n                A tier is a collection of songs. Tiers can be separated by different genres, songs that you're currently rehearsing versus songs that are still being written, or any other criteria.  Within the band page, these songs are called \"Titles.\" Click on a tier to reveal its titles.\n            </p>\n            <h3>\n                Titles\n            </h3>\n            <p>\n                Titles contain all the various versions and recordings of a particular song. On the title display, you will see the recording that is most up-to-date for this title, and a button to play it or download it. Click on the title to reveal the different versions it contains.\n            </p>\n            <h3>\n                Versions\n            </h3>\n            <p>\n                A version categorizes groups of recordings, and again you can use whatever criteria you want.  Maybe one version is band practice, and the other is a recording you're working on.  Each version contains one or more recordings, or \"Bounces.\" One and only one version for each title is the \"current\" version.\n            </p>\n            <h3>\n                Bounces\n            </h3>\n            <p>\n                Bounces are the root component of a song, and they represent a particular recording.  They are represented by a date. Like versions, one bounce per version is designated \"current.\"\n            </p>\n            <h3>\n                Playlists\n            </h3>\n            <p>\n                Playlists are where you can make ordered lists of particular bounces.  Each title has a display of its currently selected version and bounce, along with a button to add that recording to a playlist (you have to create the playlist first).\n            </p>\n            <p>\n                If you change the version or bounce you're listening to, the song in the playlist will remain the same one you originally added. If you want to change which version and/or bounce a song in a playlist represents, you can change that by editing it within the playlist.\n            </p>\n            <h2>\n                Controls\n            </h2>\n            <p>\n                If you are on a band page of a band you own, you will see additional buttons where you can modify the catalogue and upload new recordings.\n            </p>\n            <p className=\"danger\">\n                If you delete an element, everything contained within that element will be deleted!\n            </p>\n            <a href=\"https://github.com/andytisdall/greenhouse\">\n                Github for this project\n            </a>\n        </div>\n    </>;\n};\n\nexport default Help;","import React, { useEffect } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nimport Error from './Error';\nimport Header from './Header';\nimport User from './User';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Home from './Home';\nimport Help from './Help';\nimport { fetchUser } from '../actions';\n\n\nimport history from '../history';\n\nconst App = ({ signedIn, fetchUser, error }) => {\n\n    useEffect(() => {\n        if (signedIn) {\n            fetchUser();\n        }\n    }, []);\n\n    const errClass = error ? 'error-margin' : '';\n\n    return <>\n        <Error />\n        <div className={`container ${errClass}`}>\n            <Router history={history}>\n                <Switch>    \n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/signin\" exact component={SignIn} />;\n                    <Route path=\"/signup\" exact component={SignUp} />;  \n                    <Route path=\"/user\" exact render={routeProps => {\n                        if (!signedIn) {\n                            history.push('/signin');\n                            return null;\n                        }\n                        return <User {...routeProps} />;\n                    }} />\n                    <Route path=\"/help\" exact component={Help} />\n                    <Route path=\"/:bandName\" component={Header} />\n                </Switch>\n            </Router>\n        </div>\n\n    </>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        signedIn: state.auth.isSignedIn,\n        error: state.error.error\n    };\n};\n\nexport default connect(mapStateToProps, { fetchUser })(App);","import { SIGN_IN, SIGN_OUT, CREATE_BAND } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: false,\n    user: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, user: action.payload };\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, user: null };\n        case CREATE_BAND:\n            const { user } = state;\n            user.bands.push(action.payload.id);\n            return { ...state, user };\n        default:\n            return state;  \n    } \n};\n","import { PLAY_AUDIO, PAUSE_AUDIO, QUEUE_SONGS, NEXT_SONG, DELETE_BOUNCE, CHANGE_VOLUME, INITIALIZE_AUDIO } from \"../actions/types\";\n\nconst initialState = {\n    play: false,\n    volume: 75,\n    currentSong: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case PLAY_AUDIO:\n            return { ...state, play: true, pause: false };\n        case PAUSE_AUDIO:\n            return { ...state, play: false, pause: true };\n        case QUEUE_SONGS:\n            const { song, parent } = action.payload;\n            return { ...state, currentSong: song, play: true, parent };\n        case NEXT_SONG:\n            return { ...state, currentSong: action.payload };\n        case DELETE_BOUNCE:\n            if (state.currentSong && action.payload.bounce.id === state.currentSong.audio) {\n                return { ...initialState };\n            } else {\n                return state;\n            }\n            // if (state.queue.length) {\n            //     state.queue = state.queue.filter(song => song.audio !== action.payload.bounce.id);\n            //     return { ...state };\n            // }\n        case CHANGE_VOLUME:\n            return { ...state, volume: action.payload };\n        case INITIALIZE_AUDIO:\n            return { ...initialState };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport tierReducer from './tierReducer';\nimport titleReducer from './titleReducer';\nimport versionReducer from './versionReducer';\nimport bounceReducer from './bounceReducer';\nimport playlistReducer from './playlistReducer';\nimport playlistSongReducer from './playlistSongReducer';\nimport bandReducer from './bandReducer';\nimport errorReducer from './errorReducer';\nimport audioReducer from './audioReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    tiers: tierReducer,\n    titles: titleReducer,\n    versions: versionReducer,\n    bounces: bounceReducer,\n    playlists: playlistReducer,\n    playlistSongs: playlistSongReducer,\n    bands: bandReducer,\n    error: errorReducer,\n    audio: audioReducer\n});","import { FETCH_TIERS, CREATE_TIER, EDIT_TIER, DELETE_TIER, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TIERS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TIER:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_TIER:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_TIER:\n            const changePosition = Object.values(_.omit(state, state.currentBand)).filter(t => t.position > action.payload.position);\n            changePosition.forEach((tier) => {\n                tier.position = tier.position - 1;\n            });\n            delete state[action.payload.id];\n            return { ...state, ..._.mapKeys(changePosition, 'id') };\n        case CREATE_TITLE:\n            const addToTier = state[action.payload.tier];\n            addToTier.trackList.push(action.payload.title.id);\n            return { ...state, [addToTier.id]: addToTier };\n        case EDIT_TITLE:\n            if (action.payload.tier.new) {\n                const newTier = state[action.payload.tier.new];\n                newTier.trackList.push(action.payload.title.id);\n                const oldTier = state[action.payload.tier.old];\n                oldTier.trackList = oldTier.trackList.filter(id => id !== action.payload.title.id);\n                return { ...state, [newTier.id]: newTier, [oldTier.id]: oldTier };\n            } else {\n                return state;\n            }\n        case DELETE_TITLE:\n            const deleteFromTier = state[action.payload.tier];\n            if (deleteFromTier) {\n                const newTrackList = deleteFromTier.trackList.filter(id => id !== action.payload.title.id);\n                deleteFromTier.trackList = newTrackList;\n                return { ...state, [deleteFromTier.id]: deleteFromTier };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_TITLES, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, SELECT_VERSION, SELECT_BOUNCE, CREATE_VERSION, DELETE_VERSION } from '../actions/types';\nimport _ from 'lodash';\n\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TITLES:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TITLE:\n            return { ...state, [action.payload.title.id]: action.payload.title };\n        case EDIT_TITLE:\n            return { ...state, [action.payload.title.id]: action.payload.title };\n        case DELETE_TITLE:\n            delete state[action.payload.title.id];\n            return { ...state };\n        case SELECT_VERSION:\n            const versionTitle = state[action.payload.titleId];\n            versionTitle.selectedVersion = action.payload.version;\n            return { ...state, [versionTitle.id]: versionTitle };\n        case SELECT_BOUNCE:\n            const bounceTitle = state[action.payload.titleId];\n            bounceTitle.selectedBounce = action.payload.bounce;\n            return { ...state, [bounceTitle.id]: bounceTitle }\n        case CREATE_VERSION:\n            const addToTitle = state[action.payload.title];\n            addToTitle.versions.push(action.payload.version.id);\n            return { ...state, [addToTitle.id]: addToTitle};\n        case DELETE_VERSION:\n            const deleteFromTitle = state[action.payload.title];\n            if (deleteFromTitle) {\n                const newVersionList = deleteFromTitle.versions.filter(id => id !== action.payload.version.id);\n                deleteFromTitle.versions = newVersionList;\n                return { ...state, [deleteFromTitle.id]: deleteFromTitle };\n            }   \n        default:\n            return state;\n\n    }\n\n};","import { FETCH_VERSIONS, CREATE_VERSION, EDIT_VERSION, DELETE_VERSION, CREATE_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport { selectVersion } from '../actions';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_VERSIONS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_VERSION:\n            return { ...state, [action.payload.version.id]: action.payload.version };\n        case EDIT_VERSION:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_VERSION:\n            delete state[action.payload.version.id];\n            return { ...state };\n        case CREATE_BOUNCE:\n            const addToVersion = state[action.payload.version];\n            addToVersion.bounces.push(action.payload.bounce.id);\n            return { ...state, [addToVersion.id]: addToVersion};\n        case DELETE_BOUNCE:\n            const deleteFromVersion = state[action.payload.version];\n            if (deleteFromVersion) {\n                const newBounceList = deleteFromVersion.bounces.filter(id => id !== action.payload.bounce.id);\n                deleteFromVersion.bounces = newBounceList;\n                return { ...state, [deleteFromVersion.id]: deleteFromVersion };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BOUNCES, CREATE_BOUNCE, EDIT_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_BOUNCES:\n            return { ...state, ..._.mapKeys(action.payload, 'id')};\n        case CREATE_BOUNCE:\n            return { ...state, [action.payload.bounce.id]: action.payload.bounce };\n        case EDIT_BOUNCE:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BOUNCE:\n            delete state[action.payload.bounce.id];\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTS, FETCH_PLAYLIST, CREATE_PLAYLIST, EDIT_PLAYLIST, DELETE_PLAYLIST, CREATE_PLAYLISTSONG, DELETE_PLAYLISTSONG } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case FETCH_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case CREATE_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_PLAYLIST:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_PLAYLIST:\n            delete state.currentBand;\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.position);\n            changePosition.forEach((playlist) => {\n                playlist.position = playlist.position - 1;\n            });\n            delete state[action.payload.id]\n            return { ...state, ..._.mapKeys(changePosition, 'id')};\n        case CREATE_PLAYLISTSONG:\n            const addToPlaylist = state[action.payload.playlist];\n            addToPlaylist.songs.push(action.payload.playlistsong.id);\n            return { ...state, [addToPlaylist.id]: addToPlaylist};\n        case DELETE_PLAYLISTSONG:\n            const deleteFromPlaylist = state[action.payload.playlist];\n            if (deleteFromPlaylist) {\n                const newSongList = deleteFromPlaylist.songs.filter(id => id !== action.payload.playlistsong.id);\n                deleteFromPlaylist.songs = newSongList;\n                return { ...state, [deleteFromPlaylist.id]: deleteFromPlaylist };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTSONGS, CREATE_PLAYLISTSONG, EDIT_PLAYLISTSONG, DELETE_PLAYLISTSONG, DELETE_VERSION, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTSONGS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_PLAYLISTSONG:\n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong };\n        case EDIT_PLAYLISTSONG:\n            const oldPosition = state[action.payload.playlistsong.id]['position'];\n            const newPosition = action.payload.playlistsong.position;\n            let changedPositions = {};\n            \n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            \n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong, ...changedPositions };\n        case DELETE_PLAYLISTSONG:\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.playlistsong.position);\n            changePosition.forEach((song) => {\n                song.position = song.position - 1;\n            });\n            delete state[action.payload.playlistsong.id];\n            return { ...state };\n        case DELETE_VERSION:\n            for (const id in state) {\n                if (state[id].version === action.payload.version.id) {\n                    state[id].version = null;\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        case DELETE_BOUNCE:\n            for (const id in state) {\n                if (state[id].bounce === action.payload.bounce.id) {\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BAND, FETCH_BANDS, EDIT_BAND, DELETE_BAND, CREATE_BAND, CREATE_TIER, DELETE_TIER, CREATE_PLAYLIST, DELETE_PLAYLIST, SIGN_OUT } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n        case FETCH_BAND:\n            return { ...state, [action.payload.id]: action.payload, currentBand: action.payload };\n        case FETCH_BANDS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BAND:\n            delete state[action.payload.id];\n            return { ...state };\n        case CREATE_TIER:\n            const { currentBand } = state;\n            currentBand.tiers.push(action.payload.id);\n            return { ...state, [currentBand.id]: currentBand, currentBand };\n        case DELETE_TIER:\n            const band = state.currentBand;\n            const newTiers = band.tiers.filter(id => id !== action.payload.id);\n            band.tiers = newTiers;\n            return { ...state, [band.id]: band, currentBand: band };\n        case CREATE_PLAYLIST:\n            const currentBandP = state.currentBand;\n            currentBandP.playlists.push(action.payload.id);\n            return { ...state, [currentBandP.id]: currentBandP, currentBand: currentBandP };\n        case DELETE_PLAYLIST:\n            const bandP = state.currentBand;\n            const newPlaylists = bandP.playlists.filter(id => id !== action.payload.id);\n            bandP.playlists = newPlaylists;\n            return { ...state, [bandP.id]: bandP, currentBand: bandP };\n        case SIGN_OUT:\n            return _.omit(state, state.currentBand);\n        default:\n            return state;\n\n    }\n\n};","import { ERROR } from '../actions/types';\n\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { error: action.payload }\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\n\n\nconst initialState = {};\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n    initialState.auth = { isSignedIn: true };\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}