{"version":3,"sources":["apis/greenhouse.js","actions/types.js","history.js","actions/index.js","components/Error.js","components/AddButton.js","components/Modal.js","components/DeleteButton.js","components/requireAuth.js","components/DetailBox.js","components/Bounce.js","components/Version.js","components/PlayContainer.js","components/Title.js","components/Tier.js","components/PlaylistSong.js","components/Playlist.js","components/Main.js","components/AudioDisplay.js","components/Header.js","components/User.js","components/UserForm.js","components/SignIn.js","components/SignUp.js","components/Home.js","components/Help.js","components/App.js","reducers/authReducer.js","reducers/audioReducer.js","reducers/index.js","reducers/tierReducer.js","reducers/titleReducer.js","reducers/versionReducer.js","reducers/bounceReducer.js","reducers/playlistReducer.js","reducers/playlistSongReducer.js","reducers/bandReducer.js","reducers/errorReducer.js","index.js"],"names":["url","instance","axios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","err","Promise","reject","SIGN_IN","SIGN_OUT","ERROR","FETCH_TIERS","FETCH_PLAYLISTSONGS","FETCH_PLAYLIST","FETCH_PLAYLISTS","FETCH_BAND","FETCH_BANDS","FETCH_TITLES","FETCH_VERSIONS","FETCH_BOUNCES","CREATE_TIER","CREATE_PLAYLISTSONG","CREATE_TITLE","CREATE_PLAYLIST","CREATE_VERSION","CREATE_BOUNCE","CREATE_BAND","EDIT_TIER","EDIT_PLAYLIST","EDIT_PLAYLISTSONG","EDIT_TITLE","EDIT_VERSION","EDIT_BOUNCE","EDIT_BAND","DELETE_TIER","DELETE_PLAYLIST","DELETE_PLAYLISTSONG","DELETE_TITLE","DELETE_VERSION","DELETE_BOUNCE","DELETE_BAND","PLAY_AUDIO","PAUSE_AUDIO","QUEUE_SONGS","NEXT_SONG","CHANGE_VOLUME","INITIALIZE_AUDIO","ORDER_TIER","SELECT_VERSION","SELECT_BOUNCE","createBrowserHistory","errorHandler","dispatch","message","response","data","error","console","log","setTimeout","throwError","type","payload","signOut","removeItem","history","push","fetchBands","a","greenhouse","get","fetchVersions","titleId","fetchBounces","versionId","createTier","formValues","getState","currentBand","bands","post","id","createPlaylistSong","playlistsong","playlist","playlistId","editVersion","thisVersion","versions","current","patch","parentTitle","titles","versionList","map","oldCurrent","find","v","_","pick","version","title","editBounce","bounceId","thisBounce","bounces","latest","file","length","reader","FileReader","onload","event","window","AudioContext","webkitAudioContext","decodeAudioData","target","result","buffer","key","duration","parseInt","formObject","formData","FormData","append","parentVersion","bounceList","oldLatest","b","onerror","readAsArrayBuffer","deleteTier","tierId","trackList","forEach","deleteTitle","deleteVersion","playlists","Object","values","playlistSongs","filter","pls","pl","songs","includes","deletePlaylistSong","tier","remainingVersions","newCurrent","selectVersion","deleteBounce","remainingBounces","newLatest","selectBounce","bounce","playlistSongId","playAudio","queueSongs","song","songObject","name","date","audio","parent","connect","state","useEffect","listen","location","className","onClick","AddButton","props","boxVisible","selectedOption","blockSpaceBarPress","e","stopPropagation","bodyClick","ref","contains","setState","showOptions","field","options","option","value","display","onDrop","input","files","onChange","inputClass","errors","meta","touched","autoFocus","required","undefined","showFields","fields","i","comp","label","Field","component","validate","submitForm","onSubmit","reset","showBox","addClass","handleSubmit","click","React","createRef","prevProps","prevState","this","document","addEventListener","capture","removeEventListener","src","image","Component","reduxForm","form","Modal","querySelector","classList","add","remove","ReactDOM","createPortal","onDismiss","content","actions","DeleteButton","displayName","useState","visible","setVisible","ChildComponent","ComposedComponent","authorized","handleUpdate","checkAuth","user","auth","DetailBox","selectedItem","itemList","itemType","displayItem","setSelected","renderAddButton","renderEditButton","renderDeleteButton","playButton","dropdownVisible","setDropdownVisible","dropdownRef","useRef","onBodyClick","count","currentTag","renderItemList","notes","comments","parentType","renderDetail","createBounce","requireAuth","selectedBounce","setSelectedBounce","uploadActive","setUploadActive","displayDate","moment","utc","format","onEditSubmit","sort","onAddSubmit","initialValues","enableReinitialize","createVersion","selectedVersion","setSelectedVersion","setBounceList","renderBounces","queuePlaylistSongs","position","baseUrl","loaded","setLoaded","time","minutes","Math","floor","seconds","displayTime","onLoad","href","encodeURIComponent","band","tiers","editTitle","changeTier","move","currentTier","new","old","getTime","findLatest","expand","setExpand","setVersionList","setSong","versionToSelect","versionIds","bounceToSelect","arrow","currentSong","currentClass","open","renderPlayContainer","playlistOptions","tierOptions","t","unshift","onAddToPlaylist","renderButtons","fetchTitles","editTier","createTitle","setOrder","orderBy","titlesToRender","setTitlesToRender","times","setTimes","orderedTitles","Date","track","total","reduce","prev","cur","renderTotalTime","tierList","titleList","renderTitles","editPlaylistSong","newSong","doUpdate","playSong","setPlaySong","updateToCurrent","currentVersion","currentBounce","otherSongs","s","otherVersions","otherBounces","editOptions","fetchPlaylistSongs","deletePlaylist","editPlaylist","playlistList","setPlaylistList","songsToRender","setSongsToRender","setDoUpdate","playlistsToShow","showUpdatePlaylistCheckbox","fetchTiers","bandId","fetchPlaylists","createPlaylist","setTierList","playbarActive","renderTierAddButton","renderPlaylistAddButton","AudioDisplay","volume","sliderPosition","updateSlider","currentTime","formatTime","isNaN","setSpaceBarToPlay","code","preventDefault","pause","play","audioError","playOnLoad","prevSong","nextSong","pauseAudio","onSliderChange","onPauseButton","Audio","scrolled","scroll","scrollX","scrollY","wrapUrl","initializeAudio","min","max","onInput","allTitles","indexOf","allSongs","index","currentUser","fetchBand","bandName","changeVolume","match","menu","params","clickToDismiss","to","Main","createBand","editBand","deleteBand","username","bandList","renderBands","UserForm","renderInput","autoComplete","defaultValue","isSignedIn","signIn","setItem","signUp","Home","Help","signedIn","fetchUser","errClass","path","exact","SignIn","SignUp","render","routeProps","Header","INITIAL_STATE","initialState","combineReducers","formReducer","action","mapKeys","oldPosition","newPosition","changedPositions","item","pos","changePosition","omit","addToTier","newTier","oldTier","deleteFromTier","newTrackList","oldTitle","newTitle","versionTitle","bounceTitle","addToTitle","deleteFromTitle","newVersionList","addToVersion","deleteFromVersion","newBounceList","p","addToPlaylist","deleteFromPlaylist","newSongList","newTiers","currentBandP","bandP","newPlaylists","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"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","file":"static/js/main.be891cf1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = {};\n\nif (process.env.NODE_ENV === 'production') {\n    url.baseURL = 'https://exploring-the-space.com/api';\n} else {\n    url.baseURL = 'http://localhost:3001/api'\n}\n\nconst instance = axios.create(url);\n\ninstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = token;\n        }\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\n\n\nexport default instance;","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const ERROR = 'ERROR';\n\nexport const FETCH_TIERS = 'FETCH_TIERS';\nexport const FETCH_PLAYLISTSONGS = 'FETCH_PLAYLISTSONGS';\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\nexport const FETCH_PLAYLISTS = 'FETCH_PLAYLISTS';\nexport const FETCH_BAND = 'FETCH_BAND';\nexport const FETCH_BANDS = 'FETCH_BANDS';\nexport const FETCH_TITLES = 'FETCH_TITLES';\nexport const FETCH_VERSIONS = 'FETCH_VERSIONS';\nexport const FETCH_BOUNCES = 'FETCH_BOUNCES';\n\nexport const FETCH_TITLE = 'FETCH_TITLE';\nexport const FETCH_VERSION = 'FETCH_VERSION';\nexport const FETCH_BOUNCE = 'FETCH_BOUNCE';\n\nexport const CREATE_TIER = 'CREATE_TIER';\nexport const CREATE_PLAYLISTSONG = 'CREATE_PLAYLISTSONG';\nexport const CREATE_TITLE = 'CREATE_TITLE';\nexport const CREATE_PLAYLIST = 'CREATE_PLAYLIST';\nexport const CREATE_VERSION = 'CREATE_VERSION';\nexport const CREATE_BOUNCE = 'CREATE_BOUNCE';\nexport const CREATE_BAND = 'CREATE_BAND';\n\nexport const EDIT_TIER = 'EDIT_TIER';\nexport const EDIT_PLAYLIST = 'EDIT_PLAYLIST';\nexport const EDIT_PLAYLISTSONG = 'EDIT_PLAYLISTSONG';\nexport const EDIT_TITLE = 'EDIT_TITLE';\nexport const EDIT_VERSION = 'EDIT_VERSION';\nexport const EDIT_BOUNCE = 'EDIT_BOUNCE';\nexport const EDIT_BAND = 'EDIT_BAND';\n\nexport const DELETE_TIER = 'DELETE_TIER';\nexport const DELETE_PLAYLIST = 'DELETE_PLAYLIST';\nexport const DELETE_PLAYLISTSONG = 'DELETE_PLAYLISTSONG';\nexport const DELETE_TITLE = 'DELETE_TITLE';\nexport const DELETE_VERSION = 'DELETE_VERSION';\nexport const DELETE_BOUNCE = 'DELETE_BOUNCE';\nexport const DELETE_BAND = 'DELETE_BAND';\n\nexport const PLAY_AUDIO = 'PLAY_AUDIO';\nexport const PAUSE_AUDIO = 'PAUSE_AUDIO';\nexport const QUEUE_SONGS = 'QUEUE_SONGS';\nexport const NEXT_SONG = 'NEXT_SONG';\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\nexport const INITIALIZE_AUDIO = 'INITIALIZE_AUDIO';\nexport const ORDER_TIER = 'ORDER_TIER';\n\nexport const SELECT_VERSION = 'SELECT_VERSION';\nexport const SELECT_BOUNCE = 'SELECT_BOUNCE';","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import greenhouse from '../apis/greenhouse';\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    ERROR,\n    FETCH_BAND,\n    FETCH_BANDS,\n    FETCH_TIERS,\n    FETCH_TITLES,\n    FETCH_VERSIONS,\n    FETCH_BOUNCES,\n    FETCH_PLAYLISTS,\n    FETCH_PLAYLISTSONGS,\n    CREATE_BAND,\n    CREATE_TIER,\n    CREATE_TITLE,\n    CREATE_VERSION,\n    CREATE_BOUNCE,\n    CREATE_PLAYLIST,\n    CREATE_PLAYLISTSONG,\n    EDIT_BAND,\n    EDIT_TIER,\n    EDIT_TITLE,\n    EDIT_VERSION,\n    EDIT_BOUNCE,\n    EDIT_PLAYLIST,\n    EDIT_PLAYLISTSONG,\n    DELETE_BAND,\n    DELETE_TIER,\n    DELETE_TITLE,\n    DELETE_VERSION,\n    DELETE_BOUNCE,\n    DELETE_PLAYLIST,\n    DELETE_PLAYLISTSONG,\n    PLAY_AUDIO,\n    PAUSE_AUDIO,\n    QUEUE_SONGS,\n    NEXT_SONG,\n    CHANGE_VOLUME,\n    INITIALIZE_AUDIO,\n    ORDER_TIER,\n    SELECT_VERSION,\n    SELECT_BOUNCE,\n} from './types';\nimport history from '../history';\nimport _ from 'lodash';\n\nconst errorHandler = err => (dispatch) => {\n    let message;\n    if (err.response) {\n        message = err.response.data.error\n    } else {\n        message = err.message;\n    }\n    console.log(err)\n    setTimeout(() => {\n        dispatch(throwError(null));\n    }, 10000);\n    dispatch({ type: ERROR, payload: message });\n};\n\n\nexport const signIn = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signin', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const signOut = () => {\n    localStorage.removeItem('token');\n    history.push('/');\n    return { type: SIGN_OUT };\n};\n\nexport const signUp = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signup', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const throwError = message => {\n    return { type: ERROR, payload: message };\n};\n\nexport const fetchUser = () => async dispatch => {\n    try {\n        const response = await greenhouse.get('/user');\n        if (response.data) {\n            dispatch({ type: SIGN_IN, payload: response.data });\n        } else {\n            dispatch(signOut());\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBand = bandName => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands/${bandName}`);    \n        dispatch({ type: FETCH_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBands = () => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands`);\n        dispatch({ type: FETCH_BANDS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTiers = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/tiers/${bandId}`);\n        dispatch({ type: FETCH_TIERS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTitles = tierId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/titles/${tierId}`);\n        dispatch({ type: FETCH_TITLES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchVersions = titleId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/versions/${titleId}`);\n        dispatch({ type: FETCH_VERSIONS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBounces = versionId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bounces/${versionId}`);\n        dispatch({ type: FETCH_BOUNCES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylists = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlists/${bandId}`);\n        dispatch({ type: FETCH_PLAYLISTS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylistSongs = playlistId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlistsongs/${playlistId}`);\n        dispatch({ type: FETCH_PLAYLISTSONGS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\nexport const createBand = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/bands', formValues);\n        dispatch({ type: CREATE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTier = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/tiers',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTitle = (formValues, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles',\n            { ...formValues, currentBand: currentBand.id, tier: tierId }\n        );\n        dispatch({ type: CREATE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createVersion = (formValues, titleId) => async (dispatch, getState) => {\n    try {\n\n        const { currentBand } = getState().bands;\n        const parentTitle = getState().titles[titleId];\n\n        if (!parentTitle.versions.length) {\n            formValues.current = true;\n        }\n        \n        const response = await greenhouse.post(\n            '/versions',\n            { ...formValues, currentBand: currentBand.id, title: titleId }\n        );    \n\n        if (response.data.current) {\n            if (parentTitle.versions.length) {\n                const versionList = parentTitle.versions.map(id => getState().versions[id]);\n                const oldCurrent = versionList.find(v => v.current);\n                oldCurrent.current = false;\n                dispatch(editVersion(\n                    _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n                ));\n            }\n        }\n\n        // dispatch({ type: SELECT_VERSION, payload: { titleId, version: response.data } });\n        dispatch({ type: CREATE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createBounce = (formValues, versionId, titleId) => async (dispatch, getState) => {\n\n    try {\n        const { currentBand } = getState().bands;\n        const parentVersion = getState().versions[versionId];\n\n        if (!parentVersion.bounces.length) {\n            formValues.latest = true;\n        }\n\n        formValues.file = formValues.file[0];\n        \n        // Create instance of FileReader\n        const reader = new FileReader();\n\n        // When the file has been succesfully read\n        reader.onload = event => {\n\n            // Create an instance of AudioContext\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n            // Asynchronously decode audio file data contained in an ArrayBuffer.\n            audioContext.decodeAudioData(event.target.result, async (buffer) => {\n\n                // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                const duration = parseInt(buffer.duration);\n\n                const formObject = {\n                    ...formValues,\n                    currentBand: currentBand.id,\n                    version: versionId,\n                    duration\n                }\n\n                const formData = new FormData();\n\n                for ( let key in formObject ) {\n                    formData.append(key, formObject[key]);\n                }\n\n                const response = await greenhouse.post(\n                    '/bounces', \n                    formData,\n                    {\n                        headers: { 'Content-Type': 'multipart/form-data'}\n                    }\n                );\n\n                if (response.data.latest) {\n                    \n                    if (parentVersion.bounces.length) {\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }                  \n                }\n\n                // dispatch({ type: SELECT_BOUNCE, payload: { titleId, bounce: response.data } });\n                dispatch({ type: CREATE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n            });\n        };\n\n        // In case the file couldn't be read\n        reader.onerror =  event => {\n            console.error(\"An error ocurred reading the file: \", event);\n        };\n\n        // Read file as an ArrayBuffer, important !\n        reader.readAsArrayBuffer(formValues.file);\n\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylist = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlists',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylistSong = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlistsongs',\n            { \n                ...formValues,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: CREATE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: formValues.playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBand = (formValues, bandId) => async dispatch => {\n    try {\n        const response = await greenhouse.patch('/bands', { ...formValues, currentBand: bandId});\n        dispatch({ type: EDIT_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTier = (formValues, tierId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/tiers/${tierId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTitle = (formValues, titleId, tierId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        let changeTier = formValues.move;\n        const response = await greenhouse.patch(\n            `/titles/${titleId}`,\n            { ...formValues, currentTier: tierId, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TITLE, payload: { title: response.data, tier: { new: changeTier, old: tierId } } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editVersion = (formValues, versionId, titleId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisVersion = getState().versions[versionId];\n        if (thisVersion.current) {\n            formValues.current = true;\n        }\n        const response = await greenhouse.patch(\n            `/versions/${versionId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        if (response.data.current && !thisVersion.current) {\n            const parentTitle = getState().titles[titleId];\n            const versionList = parentTitle.versions.map(id => getState().versions[id]);\n            const oldCurrent = versionList.find(v => v.current);\n            oldCurrent.current = false;\n            dispatch(editVersion(\n                _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n            ));   \n        }\n\n        // dispatch({ type: SELECT_VERSION, payload: { titleId, version: response.data } });\n        dispatch({ type: EDIT_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBounce = (formValues, bounceId, versionId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisBounce = getState().bounces[bounceId];\n        if (thisBounce.latest) {\n            formValues.latest = true;\n        }\n        if (formValues.file && formValues.file.length) {\n            formValues.file = formValues.file[0];\n \n            // Create instance of FileReader\n            const reader = new FileReader();\n    \n            // When the file has been succesfully read\n            reader.onload = event => {\n    \n                // Create an instance of AudioContext\n                const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    \n                // Asynchronously decode audio file data contained in an ArrayBuffer.\n                audioContext.decodeAudioData(event.target.result, async (buffer) => {\n    \n                    // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                    const duration = parseInt(buffer.duration);\n    \n                    const formObject = {\n                        ...formValues,\n                        currentBand: currentBand.id,\n                        duration\n                    }\n    \n                    const formData = new FormData();\n    \n                    for ( let key in formObject ) {\n                        formData.append(key, formObject[key]);\n                    }\n    \n                    const response = await greenhouse.patch(\n                        `/bounces/${bounceId}`, \n                        formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data'}\n                        }\n                    );\n\n\n                    if (response.data.latest && !thisBounce.latest) {\n                        const parentVersion = getState().versions[versionId];\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }\n    \n                    dispatch({ type: EDIT_BOUNCE, payload: response.data });\n    \n                });\n            };\n    \n            // In case the file couldn't be read\n            reader.onerror =  event => {\n                console.error(\"An error ocurred reading the file: \", event);\n            };\n    \n            // Read file as an ArrayBuffer, important !\n            reader.readAsArrayBuffer(formValues.file);\n        } else {\n            const response = await greenhouse.patch(\n                `/bounces/${bounceId}`,\n                { ...formValues, currentBand: currentBand.id }\n            );\n            if (response.data.latest && !thisBounce.latest) {\n                const parentVersion = getState().versions[versionId];\n                const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                const oldLatest = bounceList.find(b => b.latest);\n                oldLatest.latest = false;\n                dispatch(editBounce(\n                    _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                ));\n            }\n\n            \n            dispatch({ type: EDIT_BOUNCE, payload: response.data });\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylist = (formValues, playlistId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/playlists/${playlistId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylistSong = (formValues, playlistSongId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const song = getState().playlistSongs[playlistSongId];\n        if (formValues.move) {\n            const newSong = {\n                playlistId: formValues.move,\n                title: song.title,\n                version: song.version,\n                bounce: song.bounce\n            };\n            dispatch(createPlaylistSong(newSong));\n        }\n        const response = await greenhouse.patch(\n            `/playlistsongs/${playlistSongId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLISTSONG,\n            payload: { \n                playlistsong: response.data,\n                playlist: formValues.playlistId\n            }\n        });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\n\n\nexport const deleteBand = bandId => async dispatch => {\n    try {\n        const response = await greenhouse.post(\n            '/bands/delete',\n            { currentBand: bandId }\n        );\n        response.data.tiers.forEach(tierId => {\n            dispatch(deleteTier(tierId, response.data.id));\n        });\n        dispatch({ type: DELETE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTier = tierId => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/tiers/delete',\n            {\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.trackList.forEach(titleId => {\n            dispatch(deleteTitle(titleId, response.data.id));\n        });\n        dispatch({ type: DELETE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTitle = (titleId, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles/delete',\n            {\n                titleId,\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.versions.forEach(versionId => {\n            dispatch(deleteVersion(versionId, response.data.id));\n        });\n        const playlists = Object.values(getState().playlists);\n        const playlistSongs = Object.values(getState().playlistSongs).filter(pls => pls.title === titleId);\n        playlistSongs.forEach(pls => {\n            const playlist = playlists.find(pl => pl.songs.includes(pls.id));\n            dispatch(deletePlaylistSong(pls.id, playlist.id));\n        });\n        dispatch({ type: DELETE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteVersion = (versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/versions/delete',\n            {\n                versionId,\n                titleId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.current) {\n            const parentTitle = getState().titles[titleId];\n            if (parentTitle) {\n                const remainingVersions = parentTitle.versions.filter(id => id !== versionId);\n                if (remainingVersions.length) {\n                    const newCurrent = getState().versions[remainingVersions[remainingVersions.length-1]];\n                    newCurrent.current = true;\n                    dispatch(selectVersion(newCurrent, titleId));\n                    dispatch(editVersion(\n                        _.pick(newCurrent, 'name', 'notes', 'current'), newCurrent.id, titleId\n                    ));\n                } else {\n                    dispatch(selectVersion(null, titleId));\n                } \n            }\n        }\n        response.data.bounces.forEach(bounceId => {\n            dispatch(deleteBounce(bounceId, response.data.id, titleId));\n        });\n        dispatch({ type: DELETE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteBounce = (bounceId, versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/bounces/delete',\n            {\n                bounceId,\n                versionId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.latest) {\n            const parentVersion = getState().versions[versionId];\n            if (parentVersion) {\n                const remainingBounces = parentVersion.bounces.filter(id => id !== bounceId);\n                if (remainingBounces.length) {\n                    const newLatest = getState().bounces[remainingBounces[remainingBounces.length -1]];\n                    newLatest.latest = true;\n                    dispatch(selectBounce(newLatest.id, titleId));\n                    dispatch(editBounce(\n                        _.pick(newLatest, 'date', 'comments', 'latest'), newLatest.id, versionId\n                    ));\n                } else {\n                    dispatch(selectBounce(null, titleId));\n                }  \n            }\n        }\n        dispatch({ type: DELETE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylist = playlistId => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlists/delete',\n            {\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.songs.forEach(playlistSongId => {\n            dispatch(deletePlaylistSong(playlistSongId, response.data.id));\n        });\n        dispatch({ type: DELETE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylistSong = (playlistSongId, playlistId) => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlistsongs/delete',\n            {\n                playlistSongId,\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: DELETE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const playAudio = () => {\n    return { type: PLAY_AUDIO };\n};\n\nexport const pauseAudio = () => {\n    return { type: PAUSE_AUDIO };\n};\n\nexport const queueSongs = song => dispatch => {\n  \n\n    const songObject = {\n        title: song.title,\n        version: song.version.name,\n        date: song.bounce.date,\n        duration: song.bounce.duration,\n        audio: song.bounce.id\n    };\n\n    dispatch({ type: QUEUE_SONGS, payload: { song: songObject, parent: song.tier } });\n    \n\n};\n\nexport const queuePlaylistSongs = (song) => (dispatch, getState) => {\n\n    // const version = getState().versions[song.version];\n    // const bounce = getState().bounces[song.bounce];\n    // const title = getState().titles[song.title];\n\n    const songObject = {\n        title: song.title,\n        version: song.version.name,\n        date: song.bounce.date,\n        duration: song.bounce.duration,\n        audio: song.bounce.id,\n        position: song.position\n    };\n\n    dispatch({ type: QUEUE_SONGS, payload: { song: songObject, parent: song.playlist } });\n};\n\nexport const setOrder = (tier, orderBy) => {\n    return { type: ORDER_TIER, payload: { tier, orderBy } };\n};\n\n\nexport const nextSong = () => (dispatch, getState) => {\n    const { parent, currentSong } = getState().audio;\n    if (parent.trackList) {\n\n        let allTitles;\n\n        if (parent.orderBy === 'date') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    if (a.selectedBounce && b.selectedBounce) {\n                        if (new Date(a.selectedBounce.date) > new Date(b.selectedBounce.date)) {\n                            return -1;\n                        } else {\n                            return 1;\n                        }\n                    } else if (a.selectedBounce) {\n                        return -1\n                    } else if (b.selectedBounce) {\n                        return 1;\n                    }\n                });\n        }\n\n        if (parent.orderBy === 'name') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    return a.title < b.title ? -1 : 1;\n                });\n        }\n\n        const song = allTitles[allTitles.indexOf(currentSong.title) + 1];\n\n        if (song && song.selectedVersion && song.selectedBounce) {\n            const version = getState().versions[song.selectedVersion.id];\n            const bounce = getState().bounces[song.selectedBounce.id];\n\n            const songObject = {\n                title: song,\n                version: version.name,\n                date: bounce.date,\n                duration: bounce.duration,\n                audio: bounce.id\n            };\n\n            dispatch({ type: NEXT_SONG, payload: songObject });\n        } else {\n            dispatch({ type: INITIALIZE_AUDIO });\n        }\n    }\n    if (parent.songs) {\n\n        const allSongs = parent.songs\n            .map(id => getState().playlistSongs[id])\n            .sort((a,b) => a.position < b.position  ? -1 : 1);\n\n        let song;\n        let index = currentSong.position;\n\n        while (index < allSongs.length) {\n            if (allSongs[index].bounce !== null) {\n                song = allSongs[index];\n                break;\n            }\n            index++;\n        }\n\n        if (!song) {\n            return dispatch({ type: INITIALIZE_AUDIO });\n        }\n\n        const version = getState().versions[song.version];\n        const bounce = getState().bounces[song.bounce];\n        const title = getState().titles[song.title];\n\n        const songObject = {\n            title: title,\n            version: version.name,\n            date: bounce.date,\n            duration: bounce.duration,\n            audio: bounce.id,\n            position: song.position\n        };\n        dispatch({ type: NEXT_SONG, payload: songObject });\n    }\n    \n}\n\nexport const prevSong = () => (dispatch, getState) => {\n    const { parent, currentSong } = getState().audio;\n    if (parent.trackList) {\n        let allTitles;\n        if (parent.orderBy === 'date') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    if (a.selectedBounce && b.selectedBounce) {\n                        if (new Date(a.selectedBounce.date) > new Date(b.selectedBounce.date)) {\n                            return -1;\n                        } else {\n                            return 1;\n                        }\n                    } else if (a.selectedBounce) {\n                        return -1\n                    } else if (b.selectedBounce) {\n                        return 1;\n                    }\n                });\n        }\n\n        if (parent.orderBy === 'name') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    return a.title < b.title ? -1 : 1;\n                });\n        }\n\n        const song = allTitles[allTitles.indexOf(currentSong.title) -1];\n\n        if (song && song.selectedVersion && song.selectedBounce) {\n            const version = getState().versions[song.selectedVersion.id];\n            const bounce = getState().bounces[song.selectedBounce.id];\n\n            const songObject = {\n                title: song,\n                version: version.name,\n                date: bounce.date,\n                duration: bounce.duration,\n                audio: bounce.id\n            };\n\n            dispatch({ type: NEXT_SONG, payload: songObject });\n        }\n    }\n    \n    if (parent.songs) {\n        const allSongs = parent.songs.map(id => getState().playlistSongs[id])\n            .sort((a,b) => a.position < b.position  ? -1 : 1);\n\n        let song;\n        let index = currentSong.position -2;\n\n        while (index < allSongs.length) {\n            if (allSongs[index].bounce !== null) {\n                song = allSongs[index];\n                break;\n            }\n            index = index -1;\n        }\n\n        if (!song) {\n            return dispatch({ type: INITIALIZE_AUDIO });\n        }\n\n        const version = getState().versions[song.version];\n        const bounce = getState().bounces[song.bounce];\n        const title = getState().titles[song.title];\n\n        const songObject = {\n            title: title,\n            version: version.name,\n            date: bounce.date,\n            duration: bounce.duration,\n            audio: bounce.id,\n            position: song.position\n        };\n        dispatch({ type: NEXT_SONG, payload: songObject });\n    }\n    \n}\n\nexport const changeVolume = value => {\n    return { type: CHANGE_VOLUME, payload: value };\n}\n\nexport const initializeAudio = () => {\n    return { type: INITIALIZE_AUDIO };\n}\n\n\nexport const selectVersion = (version, titleId) => {\n    return { type: SELECT_VERSION, payload: { version, titleId } };\n}\n\nexport const selectBounce = (bounce, titleId) => {\n    return { type: SELECT_BOUNCE, payload: { bounce, titleId } };\n}","\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { throwError } from '../actions';\nimport history from '../history';\n\nconst Error = ({ error, throwError }) => {\n\n    useEffect(() => {\n        history.listen(location => {\n            throwError(null);\n        });\n    }, [history]);\n\n    if (!error) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\" onClick={() => throwError(null)}>\n            <div className=\"error-x\">X</div>\n            {error}\n            <div className=\"error-x\">X</div>\n        </div>\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.error.error\n    }\n}\n\nexport default connect(mapStateToProps, { throwError })(Error);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n\n\nclass AddButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    state = { boxVisible: false, selectedOption: null };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.boxVisible === false && this.state.boxVisible === true) {\n            document.addEventListener('click', this.bodyClick, {capture: true});\n            document.addEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        } else if (prevState.boxVisible === true && this.state.boxVisible === false) {\n            document.removeEventListener('click', this.bodyClick, {capture: true});\n            document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        }\n        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.bodyClick, {capture: true});\n        document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n    }\n\n    blockSpaceBarPress = (e) => {\n        e.stopPropagation();\n    }\n\n    bodyClick = (e) => {\n        if (this.ref.current && this.ref.current.contains(e.target)) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        }\n    }\n\n    showOptions = (field) => {\n        return field.options.map(option => {\n            return (\n                <option\n                    key={option.value}\n                    value={option.value}\n                >\n                    {option.display}\n                </option>\n            );\n        });\n    };\n\n    onDrop = (e, input) => {\n        const file = e.target.files[0];\n        const { onChange } = input;\n        onChange(file);\n    }\n\n    input = (field) => {\n        let inputClass = '';\n        if (field.type === 'date') {\n            inputClass = 'calendar';\n        }\n        if (field.type === 'checkbox') {\n            inputClass = 'checkbox';\n        }\n        if (field.type === 'input') {\n            inputClass = 'text-input';\n        }\n\n        const errors = \n            <div className=\"form-errors\">\n            {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n            </div>;\n\n        if (field.type === 'file') {\n            delete field.input.value;\n            return <>\n                {errors}\n                <input\n                    {...field.input}\n                    type='file'\n                    className='inputfile'\n                    onDrop={(e) => this.onDrop(e, field.input)}\n                        \n                />\n            </>;\n        } else if (field.type === 'select') {\n            return <>\n                {errors}\n                <select\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </select>\n            </>;\n        } else {\n            return <>\n                {errors}\n                <input\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                    className={inputClass}\n                />\n            </>;\n        }\n    }\n\n    required = value => {\n        return value ? undefined : 'Required';\n    }\n\n    showFields = () => {\n\n        return this.props.fields.map((field, i) => {\n            const autoFocus = i === 0 ? true : false;\n            let comp = this.input;\n            if (field.type === 'textarea') {\n                comp = 'textarea'\n            }\n            return <div key={field.label}>\n                <label>{field.label}: </label>\n                <Field\n                    name={field.name}\n                    component={comp}\n                    autoFocus={autoFocus}\n                    type={field.type}\n                    validate={field.required ? this.required : null}\n                    options={field.options}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </Field>\n            </div>\n        });\n \n    };\n\n    submitForm = (formValues) => {\n        this.props.onSubmit(formValues);\n        this.setState({ boxVisible: false });\n        this.props.reset();\n    }\n\n    showBox = () => {\n        if (this.state.boxVisible) {\n            const addClass = this.props.addClass ? this.props.addClass : '';\n            return <>    \n                <div className={`add-box ${addClass}`} onClick={e => e.stopPropagation()}>\n                    <h3 className=\"add-box-title\">{this.props.title}</h3>\n                    <form onSubmit = {this.props.handleSubmit(this.submitForm)}>\n                        {this.showFields()}\n                        <div className=\"submit-button-centered\">\n                            <button className=\"submit-button\" type='submit'>OK</button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        }\n    }\n\n    click = (e) => {\n        e.stopPropagation();\n        if (this.ref.current && this.ref.current === e.target) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        } else {\n            this.setState({ boxVisible: true });\n        }\n\n    }\n    \n    render() {\n\n        return <>\n            <div className=\"add\" onClick={this.click} ref={this.ref}>\n                <img src={this.props.image} />\n                {this.showBox()}\n            </div>\n        </>;\n    }\n\n}\n\nexport default reduxForm({ form: 'form' })(AddButton);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Modal extends React.Component {\n\n    componentDidMount() {\n        document.querySelector('.container').classList.add('modal-active');\n    }\n    componentWillUnmount() {\n        document.querySelector('.container').classList.remove('modal-active');\n    }\n\n    render() {\n        return ReactDOM.createPortal(\n            <div onClick={this.props.onDismiss} className=\"modal-background\">\n                <div \n                    onClick={e => e.stopPropagation()}\n                    className=\"modal-box\"\n                >\n                    <div className=\"modal-title\">\n                        {this.props.content}\n                    </div>\n                    <div>\n                        {this.props.actions}\n                    </div>\n                </div>\n            </div>,\n            document.querySelector('#modal')\n        );\n    }\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from './Modal';\n\nconst DeleteButton = ({ onSubmit, displayName }) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const renderContent = () => {\n        return `Seriously delete \"${displayName}\"?`;\n    };\n\n    const renderActions = () => {\n        return (\n            <>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => {\n                        onSubmit();\n                        setVisible(false);\n                    }}\n                >\n                    Delete\n                </button>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => setVisible(false)}\n                >\n                    No Wait\n                </button>\n            </>\n        );\n    };\n\n    const showModal = () => {\n\n        return (\n            <Modal \n                content={renderContent()}\n                actions={renderActions()}\n                onDismiss={e => {\n                    e.stopPropagation();\n                    setVisible(false)\n                }}\n            />\n        );\n    };\n\n\n\n    const onClick = (e) => {\n        e.stopPropagation();\n        setVisible(true);\n    };\n\n\n    return (\n        <div>\n            <img src=\"/images/delete.png\" className=\"delete\" onClick={onClick} />\n            {visible && showModal()}\n        </div>\n    );\n\n};\n\nexport default DeleteButton;","import React from 'react';\nimport { connect } from 'react-redux';\n\nexport default ChildComponent => {\n\n    class ComposedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n        }\n\n        state = { authorized: false };\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n\n        // componentDidUpdate() {\n        //     this.checkAuth();\n        // }\n\n        handleUpdate = () => {\n            this.checkAuth();\n        }\n\n        checkAuth() {\n            if (this.props.user && this.props.currentBand && this.props.user.bands.includes(this.props.currentBand.id)) {\n                this.setState({ authorized: true });\n            }\n        }\n\n        render() {\n            return <ChildComponent {...this.props} authorized={this.state.authorized} handleUpdate={this.handleUpdate} />;\n\n        }\n\n    }\n\n    const mapStateToProps = state => {\n        return {\n            user: state.auth.user,\n            currentBand: state.bands.currentBand\n        }\n    };\n\n    return connect(mapStateToProps)(ComposedComponent);\n\n};\n\n","import React, { useEffect, useState, useRef } from 'react';\n\nconst DetailBox = ({ selectedItem, itemList, itemType, displayItem, setSelected, renderAddButton, renderEditButton, renderDeleteButton, playButton }) => {\n\n    const [dropdownVisible, setDropdownVisible] = useState(false);\n\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n        if (dropdownVisible) {\n            document.addEventListener('click', onBodyClick, {capture: true});\n        } else {\n            document.removeEventListener('click', onBodyClick, {capture: true});\n        }\n    }, [dropdownVisible]);\n\n    const count = () => {\n        let count;\n        if (itemList().length === 0) {\n            count = `1 ${itemType}:`;\n        } else {\n            count = `${itemList().length + 1} ${itemType}s:`\n        }\n\n        return (\n            <h5>{count}</h5>\n        );\n    };\n\n    const currentTag = () => {\n        if (selectedItem.current || selectedItem.latest) {\n            return (\n                <div className=\"current\">\n                    Current\n                </div>\n            );\n        }\n    };\n\n    const onBodyClick = e => {\n\n        if (dropdownRef.current && dropdownRef.current.contains(e.target)) {\n            return;\n        }\n\n        if (dropdownVisible) {\n            setDropdownVisible(false);\n        }\n    };\n\n    const renderItemList = () => {\n        if (dropdownVisible) {\n            \n            return itemList().map(i => {\n                const current = i.current || i.latest ? <span className=\"list-current\"> * current</span> : null;\n                return <div\n                    className=\"dropdown-link\"\n                    onClick={() => {\n                        setSelected(i);\n                        setDropdownVisible(false);\n                    }}\n                    key={i.id}\n                >\n                        {displayItem(i)}\n                        {current}\n                </div>\n            });\n        }\n    };\n\n\n    const renderDetail = () => {\n        if (selectedItem) {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        {count()}\n                        {currentTag()}\n                    </div>\n                    <div className='dropdown-container'>\n                        <div className=\"dropdown\" ref={dropdownRef}>\n                            <button\n                                className=\"dropbtn\"\n                                onClick={() => setDropdownVisible(!dropdownVisible)}\n                            >\n                                {displayItem(selectedItem)}\n                            </button>\n                            <div className=\"dropdown-content\">\n                                {renderItemList()}\n                            </div>\n                        </div>\n                        {playButton && playButton()}\n                    </div>\n                    \n                    \n                    <div className=\"detail-notes\">\n                        <div className=\"detail-notes-title\">Notes:</div>\n                        <p>\n                            {selectedItem.notes || selectedItem.comments}\n                        </p>\n                    </div>\n                </div>\n            );\n        } else {\n            let parentType = '';\n            if (itemType === 'Version') {\n                parentType = 'Song';\n            }\n            if (itemType === 'Bounce') {\n                parentType = 'Version';\n            }\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>{`No ${itemType}s for this ${parentType} Yet`}</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <div\n            className={`detail-box ${itemType === 'Bounce' ? 'bounce' : ''}`}\n        >\n            {renderDetail()}      \n            <div className=\"detail-buttons\">\n                {renderAddButton()}\n                {selectedItem && renderEditButton()}\n                {selectedItem && renderDeleteButton()}\n            </div>\n        </div>\n    );\n};\n\nexport default DetailBox;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\nimport DetailBox from './DetailBox';\nimport { selectBounce, createBounce, editBounce, deleteBounce, queueSongs } from '../actions';\n\nconst Bounce = ({ bounces, selectBounce, title, authorized, version, createBounce, editBounce, deleteBounce, song, queueSongs }) => {\n\n    const [selectedBounce, setSelectedBounce] = useState(title.selectedBounce);\n\n    const [uploadActive, setUploadActive] = useState(false);\n\n    // const [playButtonVisible, setPlayButtonVisible] = useState(false);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(selectedBounce, title.id);\n            // setPlayButtonVisible(true);\n        }\n    }, [selectedBounce]);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(title.selectedBounce, title.id);\n        }\n    }, [title.selectedBounce]);\n\n    useEffect(() => {\n        setSelectedBounce(title.selectedBounce);\n        setUploadActive(false);\n    }, [title.selectedBounce]);\n\n\n\n    const displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n\n    const displayBounce = b => {\n        return `${displayDate(b.date)}`;\n    };\n\n    const itemList = () => {\n        if (selectedBounce) {\n            return bounces\n                .filter(b => b && b.id !== selectedBounce.id)\n                .sort((a, b) => a.date < b.date ? 1 : -1);\n        }\n    };\n\n    const onAddSubmit = (formValues) => {\n\n        createBounce(formValues, version.id, title.id);\n        setUploadActive(true);\n\n    };\n\n    const onEditSubmit = (formValues) => {\n\n        editBounce(formValues, selectedBounce.id, version.id);\n        setUploadActive(true);\n\n    };\n\n    const uploadContent = () => {\n        return (\n                <div className='upload-image'>\n                    <p>Uploading...</p>\n                    <img className='windmill' src='/images/windmill.gif' />\n                </div>\n        );\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Bounce of ${version.name}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'File',\n                            name: 'file',\n                            type: 'file',\n                            required: true\n                        },\n                        {\n                            label: 'Date',\n                            name: 'date',\n                            type: 'date',\n                            required: true         \n                        },\n                        {\n                            label: 'Comments',\n                            name: 'comments',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Latest Bounce?',\n                            name: 'latest',\n                            type: 'checkbox',        \n                        },\n                    ]}\n                    onSubmit={formValues => onAddSubmit(formValues)}\n                    form={`add-bounce-${title.id}`}\n                    initialValues={{ latest: true }}\n                    addClass='add-bounce'\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={'Edit this Bounce'}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'File',\n                        name: 'file',\n                        type: 'file', \n                    },\n                    {\n                        label: 'Date',\n                        name: 'date',\n                        type: 'date',          \n                    },\n                    {\n                        label: 'Comments',\n                        name: 'comments',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Bounce?',\n                        name: 'latest',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={onEditSubmit}\n                initialValues={\n                    { ..._.pick(selectedBounce, 'comments', 'latest'), date: moment.utc(selectedBounce.date).format('YYYY-MM-DD') }\n                }\n                form={`edit-bounce-${title.id}`}\n                enableReinitialize={true}\n                addClass='add-bounce'\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return <DeleteButton\n                onSubmit={() => deleteBounce(selectedBounce.id, version.id, title.id)}\n                displayName={displayDate(selectedBounce.date)}\n            />;\n        }\n    };\n\n    const showPlayButton = () => {\n\n        // if (playButtonVisible) {\n\n            return (\n                <img\n                    src='/images/play.svg'\n                    className='play-icon'\n                    onClick={() => queueSongs(song)}\n                /> \n            );\n        // }\n\n    };\n\n    \n\n    if (uploadActive) {\n        return (\n            <div className=\"detail-box bounce\">\n                {uploadContent()}\n            </div>\n        );\n    } else {\n        if (version) {\n            return (\n                <DetailBox\n                    selectedItem={selectedBounce}\n                    itemType=\"Bounce\"\n                    itemList={itemList}\n                    displayItem={displayBounce}\n                    setSelected={setSelectedBounce}\n                    renderAddButton={renderAddButton}\n                    renderEditButton={renderEditButton}\n                    renderDeleteButton={renderDeleteButton}\n                    playButton={showPlayButton}\n                />\n            );\n        } else {\n            return null;\n        }\n    }\n};\n\nexport default connect(null, { selectBounce, createBounce, editBounce, deleteBounce, queueSongs })(requireAuth(Bounce));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion } from '../actions';\nimport Bounce from './Bounce';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\nimport DetailBox from './DetailBox';\n\nconst Version = ({ versions, bounces, fetchBounces, selectVersion, title, createVersion, authorized, editVersion, deleteVersion, song }) => {\n\n    const [selectedVersion, setSelectedVersion] = useState(title.selectedVersion);\n    const [bounceList, setBounceList] = useState(null);\n\n    useEffect(() => {\n        // console.log(selectedVersion);\n        if (selectedVersion !== title.selectedVersion) {\n            selectVersion(selectedVersion, title.id);\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n            fetchBounces(selectedVersion.id)\n        } \n    }, [selectedVersion]);\n\n    useEffect(() => {\n        if (selectedVersion) {\n            // console.log(title.selectedVersion)\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n        }\n    }, [bounces, selectedVersion]);\n\n\n    useEffect(() => {\n        if (selectedVersion !== title.selectedVersion) {\n            setSelectedVersion(title.selectedVersion);\n        }\n    }, [title.selectedVersion]);\n\n    \n    const renderBounces = () => {\n\n        if (bounceList && selectedVersion) {\n\n            return (\n                <>\n                    <div className=\"version-arrow\">&rarr;</div>\n                    <Bounce bounces={bounceList} title={title} version={selectedVersion} song={song} />\n                </>\n            );   \n        }\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Version of ${title.title}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true         \n                        },\n                        {\n                            label: 'Notes',\n                            name: 'notes',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Current Version?',\n                            name: 'current',\n                            type: 'checkbox',      \n                        },\n                    ]}\n                    onSubmit={(formValues) => createVersion(formValues, title.id)}\n                    form={`add-version-${title.id}`}\n                    initialValues={{ current: true }}\n                    enableReinitialize={true}\n                    addClass='add-version'\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={`Edit ${selectedVersion.name}`}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'Name',\n                        name: 'name',\n                        type: 'input', \n                    },\n                    {\n                        label: 'Notes',\n                        name: 'notes',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Version?',\n                        name: 'current',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={formValues => editVersion(formValues, selectedVersion.id, title.id)}\n                initialValues={_.pick(selectedVersion, 'name', 'notes', 'current')}\n                form={`edit-version-${title.id}`}\n                enableReinitialize={true}\n                addClass='add-version'\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return <DeleteButton\n                onSubmit={() => deleteVersion(selectedVersion.id, title.id)}\n                displayName={selectedVersion.name}\n            />;\n        }\n    };\n\n    const itemList = () => {\n        return versions.filter(v => v.id !== selectedVersion.id);\n    };\n\n    const displayVersion = v => {\n        return `${v.name}`;\n    };\n    \n    return (\n        <>\n            <DetailBox\n                selectedItem={selectedVersion}\n                itemType=\"Version\"\n                itemList={itemList}\n                displayItem={displayVersion}\n                setSelected={setSelectedVersion}\n                renderAddButton={renderAddButton}\n                renderEditButton={renderEditButton}\n                renderDeleteButton={renderDeleteButton}\n            />\n            {renderBounces()}          \n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        bounces: state.bounces\n    };\n}\n\nexport default connect(mapStateToProps, { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion })(requireAuth(Version));","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { queueSongs, queuePlaylistSongs, playAudio } from '../actions';\n\n\nconst PlayContainer = ({ song, queueSongs, parentType, queuePlaylistSongs }) => {\n\n    const [loaded, setLoaded] = useState(false);\n\n    const displayDate = (date) => {\n        return moment.utc(date).format('MM/DD/YY');\n    }\n\n    const displayTime = (time) => {\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time % 60) < 10 ? '0' + Math.floor(time % 60) : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    const onPlay = (e) => {\n        e.stopPropagation();\n        if (parentType === \"tier\") {\n            queueSongs(song);\n        } else if (parentType === \"playlist\") {\n            queuePlaylistSongs(song);\n        }\n    };\n\n    const renderSpinner = () => {\n        return (\n            <div className=\"sk-circle-fade\">\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n            </div>\n        );\n    };\n\n\n    let baseUrl;\n    if (process.env.NODE_ENV === 'production') {\n        baseUrl = 'https://exploring-the-space.com'\n    } else {\n        baseUrl = 'http://localhost:3001';\n    }\n\n    return (\n        <div className='play-container'>\n            <div className='play-container-time'>{displayTime(song.bounce.duration)}</div> \n            <div className=\"play-icon-container\">\n                {!loaded && renderSpinner()}          \n                <img\n                    src='/images/play.svg'\n                    className='play-icon'\n                    onClick={onPlay}\n                    onLoad={() => setLoaded(true)}\n                /> \n            </div>\n            <div className='play-container-display'>\n                <p>{song.version.name}</p>\n                <p>{displayDate(song.bounce.date)}</p>\n            </div>\n            <a\n                className='download'\n                onClick={e => e.stopPropagation()}\n                href={`${baseUrl}/api/audio/download/${song.bounce.id}/${encodeURIComponent(song.title.title)}`}\n                \n            >\n                <img src=\"/images/download.svg\" />\n            </a>\n        </div>\n    );\n};\n\nexport default connect(null, { queueSongs, queuePlaylistSongs, playAudio })(PlayContainer);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport Version from './Version';\nimport AddButton from './AddButton';\nimport { fetchVersions, fetchBounces, selectBounce, selectVersion, createPlaylistSong, editTitle, deleteTitle } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\nimport DeleteButton from './DeleteButton';\n\nconst Title = ({ tier, title, titles, fetchVersions, versions, bounces, fetchBounces, authorized, band, playlists, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle, getTime, audio, findLatest, tiers }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [versionList, setVersionList] = useState(null);\n    const [bounceList, setBounceList] = useState(null);\n    const [song, setSong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(title.id);\n    }, []);\n\n    useEffect(() => {\n\n        setVersionList(title.versions.map(id => versions[id]));\n        // console.log('set version list')\n\n        \n    }, [versions]);\n\n    useEffect(() => {\n        // console.log(versionList);\n        if (versionList && versionList[0]) {\n            \n            let versionToSelect;\n\n            const parentTitle = titles[title.id];\n\n            const versionIds = versionList.map(v => v.id);\n\n            if (!parentTitle.selectedVersion || !versionIds.includes(parentTitle.selectedVersion.id)) {\n                versionToSelect = versionList.find(v => v.current);\n            } else if (parentTitle.selectedVersion) {\n                if (!versions[parentTitle.selectedVersion.id]) {\n                    versionToSelect = null;\n                } else {\n                    versionToSelect = versions[parentTitle.selectedVersion.id];\n                }\n            }\n\n            selectVersion(versionToSelect, title.id);\n        }\n    }, [versionList]);\n\n    useEffect(() => {\n        // console.log(title)\n        if (title.selectedVersion && title.selectedVersion.id) {\n            fetchBounces(title.selectedVersion.id);\n            // console.log('fetch bounces')\n        }\n    }, [title.selectedVersion]);\n\n    useEffect(() => {\n        if (title.selectedVersion) {\n            if (title.selectedVersion.bounces[0]) {\n                setBounceList(title.selectedVersion.bounces.map(id => bounces[id]));\n                // console.log('set bounce list')\n            } else if (title.selectedBounce !== null) {\n                // console.log('set bounce list null')\n                setBounceList(null);\n                selectBounce(null, title.id);\n            }\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (bounceList && bounceList[0]) {\n\n            let bounceToSelect;\n\n            if (title.selectedBounce && bounceList.includes(title.selectedBounce)) {\n                bounceToSelect = title.selectedBounce;\n            } else {\n                bounceToSelect = bounceList.find(b => b.latest);\n                findLatest(title, bounceToSelect);\n            }\n\n            if (bounceToSelect !== title.selectedBounce) {\n                \n                selectBounce(bounceToSelect, title.id);\n                // console.log('select bounce');\n                \n            }\n        } else if (song) {\n            setSong(null);\n        }\n\n    }, [bounceList]);\n\n\n    useEffect(() => {\n        if (title.selectedBounce && title.selectedVersion) {\n\n            setSong({\n                tier,\n                title: titles[title.id],\n                version: title.selectedVersion,\n                bounce: title.selectedBounce\n            });\n            // console.log('song update')\n            getTime({ id: title.id, duration: title.selectedBounce.duration });\n            \n        } else if (song && !title.selectedBounce) {\n            setSong(null);\n            getTime({ id: title.id, duration: 0 });\n        }\n        \n    }, [titles[title.id]]);\n\n\n    const renderPlayContainer = () => {\n\n        if (song) {\n            return <PlayContainer song={song} parentType=\"tier\" />;\n        }\n    }\n\n    const renderVersion = () => {\n\n   \n        return (\n            <Version versions={versionList} title={title} song={song} />\n        )\n    }\n\n    const onAddToPlaylist = formValues => {\n        createPlaylistSong({\n            ...formValues,\n            bounce: title.selectedBounce.id,\n            version: title.selectedVersion.id,\n            title: title.id\n        });\n    }\n\n    const renderButtons = () => {\n        if (authorized) {\n            const bandPlaylists = band.playlists.map(id => playlists[id]);\n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name};\n                }\n            });\n            const bandTiers = band.tiers\n                .filter(t => t !== tier.id)\n                .map(id => tiers[id]);\n            const tierOptions = bandTiers.map(t => {\n                if (t) {\n                    return { value: t.id, display: t.name };\n                }\n            });\n            tierOptions.unshift({ value: null, display: ''});\n            return (\n                <div className='tier-display'>\n                    {song && <AddButton\n                        title=\"Add to a Playlist\"\n                        onSubmit={formValues => onAddToPlaylist(formValues)}\n                        image=\"images/playlist.png\"\n                        fields={[\n                            {\n                                type: 'select',\n                                options: playlistOptions,\n                                name: 'playlistId',\n                                label: 'Playlist'\n                            }\n                        ]}\n                        form={`add-to-playlist-${title.id}`}\n                        enableReinitialize={true}\n                    />}\n                    <AddButton\n                        title={`Edit ${title.title}`}\n                        image=\"images/edit.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            },\n                            {\n                                label: 'Move to Tier',\n                                name: 'move',\n                                type: 'select',\n                                options: tierOptions\n                            }\n                        ]}\n                        onSubmit={formValues => editTitle(formValues, title.id, tier.id)}\n                        initialValues={{ title: title.title, move: null }}\n                        form={`edit-title-${title.id}`}\n                        enableReinitialize={true}\n                    />\n                    <DeleteButton\n                        onSubmit={() => deleteTitle(title.id, tier.id)}\n                        displayName={title.title}\n                    />\n                </div>\n            );\n        }\n    };\n\n    const arrow = expand ? 'down-arrow' : '';\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && title.selectedBounce) {\n        currentClass = parent === tier.id && current === title.selectedBounce.id ? 'current-song' : '';\n    }\n\n    let open = expand ? 'open' : 'closed';\n\n    return (\n        <div className=\"title-margin\">\n            <div className={`row title ${currentClass} ${expand ? 'row-open' : ''}`}>\n                <div className=\"marqee\" onClick={() => setExpand(!expand)}>\n                    <div className=\"title-name\"   >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`} />              \n                        <h3>{title.title}</h3>\n                    </div>\n                    {renderPlayContainer()}\n                    {renderButtons()}\n                </div>\n            </div>\n            <div className={`version-container ${open}`}>\n                {expand && renderVersion()}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        versions: state.versions,\n        bounces: state.bounces,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        titles: state.titles,\n        audio: state.audio,\n        tiers: state.tiers\n    }\n}\n\nexport default connect(mapStateToProps, { fetchVersions, fetchBounces, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle })(requireAuth(Title));","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { createTier, editTier, fetchTitles, createTitle, deleteTier, setOrder } from '../actions';\nimport Title from './Title';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\n\nconst Tier = ({ tier, titles, fetchTitles, authorized, band, tiers, editTier, createTitle, deleteTier, setOrder }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [titlesToRender, setTitlesToRender] = useState(null);\n    const [times, setTimes] = useState({});\n\n    const orderedTitles = useRef({});\n\n    useEffect(() => {\n        setOrder(tier.id, 'date');\n        fetchTitles(tier.id);\n    }, []);\n\n    useEffect(() => {\n        setTitlesToRender(tier.trackList\n            .map(id => titles[id]));\n    }, [titles, tier]);\n\n    const findLatest = (title, bounce) => {\n        if (!orderedTitles.current[title.id]) {\n            orderedTitles.current[title.id] = new Date(bounce.date);\n        }\n    };\n\n\n    const renderTitles = () => {\n\n        const titleList = [...titlesToRender];\n\n        if (!tier.orderBy || tier.orderBy === 'date') {\n\n            titleList.sort((a, b) => {\n                if (orderedTitles.current[a.id] && orderedTitles.current[b.id]) {\n                    if (orderedTitles.current[a.id] > orderedTitles.current[b.id]) {\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                } else if (orderedTitles.current[a.id]) {\n                    return -1;\n                } else if (orderedTitles.current[b.id]) {\n                    return 1;\n                }\n            });\n        }\n\n        if (tier.orderBy === 'name') {\n\n            titleList.sort((a, b) => {\n                return a.title < b.title ? -1 : 1;\n            });\n\n        }\n\n        return titleList.map(title => {\n            if (title) {\n                return (\n                    <Title title={title} tier={tier} key={title.id} getTime={getTime} findLatest={findLatest}/>\n                );\n            }\n        });\n    };\n\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <div className=\"order-by\">\n                    <div>\n                        Add a Title to this Tier\n                    </div>\n                    <AddButton\n                        title={`Add a Title to ${tier.name}`}\n                        image=\"images/add.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            }\n                        ]}\n                        onSubmit={(formValues) => {\n                            createTitle(formValues, tier.id);\n                            setExpand(true);\n                        }}\n                        form={`add-title-${tier.id}`}\n                        addClass='add-left'\n                    />\n                </div>\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n            const tierList = band.tiers\n                .map(id => tiers[id])\n                .sort((a, b) => a.position < b.position ? -1 : 1)\n                .map(t => {\n                    if (t) {\n                        return { value: t.position, display: t.position };\n                    }\n                });\n\n\n            return (\n                <AddButton\n                    title={`Edit ${tier.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Tier Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true        \n                        }, {\n                            label: 'Tier Position',\n                            name: 'position',\n                            type: 'select',\n                            options: tierList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editTier(formValues, tier.id)}\n                    initialValues={{ name: tier.name, position: tier.position }}\n                    form={`edit-tier-${tier.id}`}\n                    enableReinitialize={true}\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deleteTier(tier.id)}\n                    displayName={tier.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n    const renderOrderButton = () => {\n        if (!tier.orderBy || tier.orderBy === 'date') {\n            return (\n                <div className='order-by'>\n                    <div>Order titles by: </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrder(tier.id, 'name');\n                        }}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        }\n        \n        if (tier.orderBy === 'name') {\n            return (\n                <div className='order-by'>\n                    <div>Order titles by:</div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrder(tier.id, 'date');\n                        }}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    const renderOptions = () => {\n\n        return <>\n            {renderAddButton()}\n            {renderOrderButton()}     \n        </>;\n    };\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)}>\n                <div className=\"marqee\">\n                    <div className=\"tier-name\">\n                        <img className={`arrow ${arrow}`} src={`images/right-arrow.svg`} />\n                        <h2>{tier.name}</h2>\n                        \n                    </div>\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{tier.trackList.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <div className={`tier-options ${expand ? 'options-visible' : ''}`}>\n                {expand && renderOptions()}\n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && titlesToRender && renderTitles()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        titles: state.titles,\n        band: state.bands.currentBand,\n        tiers: state.tiers\n    }\n};\n\n\nexport default connect(mapStateToProps, { createTier, fetchTitles, editTier, createTitle, deleteTier, setOrder })(requireAuth(Tier));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport { editPlaylistSong, fetchVersions, fetchBounces, deletePlaylistSong } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\n\nconst PlaylistSong = ({ playlist, playlists, song, playlistSongs, authorized, versions, bounces, titles, fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong, audio, getTime, band, doUpdate }) => {\n\n    const [playSong, setPlaySong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(song.title);\n        titles[song.title].versions.forEach(id => {\n            fetchBounces(id);\n        });\n    }, []);\n    \n    useEffect(() => {\n        if (titles[song.title]) {\n            setPlaySong({\n                    playlist,\n                    title: titles[song.title],\n                    version: versions[song.version],\n                    bounce: bounces[song.bounce],\n                    position: song.position\n                });\n            }\n            if (bounces[song.bounce]) {\n                getTime({ id: song.id, duration: bounces[song.bounce].duration });\n            }   \n    }, [playlistSongs[song.id], bounces[song.bounce], titles[song.title], versions[song.version]]);\n\n    useEffect(() => {\n        // console.log(doUpdate);\n        if (doUpdate) {\n            updateToCurrent();\n        }\n    }, [doUpdate]);\n\n    const renderPlayContainer = () => {\n\n        if (playSong && playSong.bounce && playSong.version) {\n            return <PlayContainer song={playSong} parentType=\"playlist\" />;\n        } else {\n            return (\n                <div className=\"playlistsong-no-bounce\">\n                    <p>\n                        {versions[song.version] ? `${versions[song.version].name}` : 'No Version Selected'}\n                    </p>\n                    <p>\n                        No Bounce Selected\n                    </p>\n                </div>\n            );\n        }\n    };\n\n    const onEditSubmit = formValues => {\n        const thisVersion = Object.values(versions).find(v => v.bounces.includes(formValues.bounce));\n        editPlaylistSong({\n            ...formValues,\n            version: thisVersion.id,\n            playlistId: playlist.id\n        }, song.id);\n    };\n\n    const updateToCurrent = () => {\n\n        const thisTitle = titles[song.title];\n        const titleVersions = thisTitle.versions.map(id => versions[id]);\n        const currentVersion = titleVersions.find(v => v && v.current);\n        if (currentVersion) {\n            const versionBounces = currentVersion.bounces.map(id => bounces[id]);\n            const currentBounce = versionBounces.find(b => b && b.latest);\n            if (currentBounce) {\n                editPlaylistSong({\n                    bounce: currentBounce.id,\n                    version: currentVersion.id,\n                    position: song.position,\n                    playlistId: playlist.id\n                }, song.id);\n            }\n        }\n\n    };\n\n    const renderEditButton = () => {\n        if (authorized && titles[song.title]) {\n\n            const otherSongs = Object.values(playlistSongs)\n                .filter(s => playlist.songs.includes(s.id))\n                .sort((a,b) => a.position < b.position ? -1 : 1)\n                .map(s => {\n                    return { value: s.position, display: s.position };\n            });\n\n            const thisTitle = titles[song.title];\n\n            const otherVersions = thisTitle.versions.map(id => versions[id]);\n\n            const otherBounces = otherVersions.map(v => {\n                if (v) {\n                    return v.bounces.map(id => bounces[id]);\n                }\n            });\n\n\n            const editOptions = [];\n            \n            otherVersions.forEach((v, i) => {\n                if (otherBounces[i]) {\n                    otherBounces[i].forEach(b => {\n                        if (b) {\n                            let current = '';\n                            if (v.current && b.latest) {\n                                current =' * current';\n                            }\n                            editOptions.push({\n                                value: b.id,\n                                display: `${v.name} -- ${moment.utc(b.date).format('MM/DD/YY')}${current}`\n                            });\n                        }\n                    });\n                }\n            });\n\n\n            const bandPlaylists = band.playlists\n                .filter(id => id !== playlist.id)\n                .map(id => playlists[id]);\n                \n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name };\n                }\n            });\n\n            playlistOptions.unshift({ value: null, display: ''})\n\n            return (\n                <AddButton\n                    image='/images/edit.png'\n                    title={`Edit ${titles[song.title].title}`}\n                    onSubmit={formValues => onEditSubmit(formValues)}\n                    fields={[\n                        {\n                            name: 'position',\n                            label: 'Position',\n                            type: 'select',\n                            options: otherSongs\n                        },\n                        {\n                            name: 'bounce',\n                            label: 'Bounce',\n                            type: 'select',\n                            options: editOptions,\n                            required: true\n                        },\n                        {\n                            label: 'Add to Playlist',\n                            name: 'move',\n                            type: 'select',\n                            options: playlistOptions\n                        }\n                    ]}\n                    initialValues={song.bounce ? { ..._.pick(song, 'position', 'bounce'), move: null } : { position: song.position, move: null }}\n                    form={`edit-playlistsong-${song.id}`}\n                    enableReinitialize={true}\n                    addClass='add-right'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylistSong(song.id, playlist.id)}\n                    displayName={titles[song.title].title}\n                />\n            );\n        }\n    };\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && song.bounce) {\n        currentClass = parent === playlist.id && current === song.bounce ? 'current-song' : '';\n    }\n\n\n    return (\n        <div className='title-margin'>\n            <div className={`row title playlistsong ${currentClass}`}>                    \n                <div className=\"marqee\">\n                    <div className='title-name'>\n                        <div className=\"song-position\">\n                            <p>{song.position}</p>\n                        </div>\n                        <h3>{song && titles[song.title] && titles[song.title].title}</h3>\n                    </div>      \n\n                    {renderPlayContainer()}\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\n\n\nconst mapStateToProps = state => {\n\n    return {\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        versions: state.versions,\n        bounces: state.bounces,\n        titles: state.titles,\n        audio: state.audio\n    }\n\n}\n\nexport default connect(mapStateToProps, { fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong })(requireAuth(PlaylistSong));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchPlaylistSongs, deletePlaylist, editPlaylist } from '../actions';\nimport PlaylistSong from './PlaylistSong';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Playlist = ({ playlist, playlists, fetchPlaylistSongs, playlistSongs, authorized, editPlaylist, deletePlaylist, band }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [playlistList, setPlaylistList] = useState([]);\n    const [times, setTimes] = useState({});\n    const [songsToRender, setSongsToRender] = useState(null);\n    const [doUpdate, setDoUpdate] = useState(false);\n\n\n    useEffect(() => {\n        fetchPlaylistSongs(playlist.id);\n    }, []);\n\n    useEffect(() => {\n        setSongsToRender(playlist.songs.map(id => playlistSongs[id]));\n    }, [playlistSongs, playlist.songs]);\n\n    const renderPlaylistSongs = () => {\n\n        songsToRender.sort((a, b) => a.position < b.position ? -1 : 1);\n\n        return songsToRender.map(song => {\n            if (song) {\n                return (\n                <PlaylistSong song={song} playlist={playlist} key={song.id} getTime={getTime} doUpdate={doUpdate} />\n                );\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (band.playlists.length) {\n            const playlistsToShow = band.playlists.map(id => playlists[id]).sort((a, b) => {\n                if (a.position < b.position) {\n                    return -1;\n                }\n                if (b.position < a.position) {\n                    return 1;\n                }\n            });\n            setPlaylistList(playlistsToShow.map(t => {\n                if (t) {\n                    return { value: t.position, display: t.position };\n                }\n            }));\n        }\n    }, [playlists]);\n\n    useEffect(() => {\n        if (doUpdate) {\n            setDoUpdate(false);\n        }\n    }, [doUpdate]);\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n\n            return (\n                <AddButton\n                    title={`Edit ${playlist.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Playlist Name',\n                            name: 'name',\n                            type: 'input',          \n                        }, {\n                            label: 'Playlist Position',\n                            name: 'position',\n                            type: 'select',\n                            options: playlistList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editPlaylist(formValues, playlist.id)}\n                    initialValues={_.pick(playlist, 'name', 'position')}\n                    form={`edit-${playlist.id}`}\n                    enableReinitialize={true}\n                    addClass='add-tier'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylist(playlist.id)}\n                    displayName={playlist.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n    const showUpdatePlaylistCheckbox = () => {\n        if (authorized && expand) {\n            return (\n                <div className=\"playlist-update\">\n                    <div>\n                        Set all to current\n                    </div>\n                    <div\n                        className=\"playlist-update-btn\"\n                        onClick={e => {\n                            e.stopPropagation();\n                            setDoUpdate(true);\n                        }}\n                    />\n                </div>\n            );\n        }\n    };\n\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)} >\n                <div className=\"marqee tier-info\">\n                    <div className=\"tier-name\"  >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`}/>\n                        <h2>{playlist.name}</h2>\n\n                        {showUpdatePlaylistCheckbox()}\n\n                    </div>\n\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{playlist.songs.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                            {renderEditButton()}\n                            {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && renderPlaylistSongs()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        playlists: state.playlists,\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand\n    }\n}\n\nexport default connect(mapStateToProps, { fetchPlaylistSongs, deletePlaylist, editPlaylist })(requireAuth(Playlist));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchTiers, fetchPlaylists, createTier, createPlaylist } from '../actions';\nimport Tier from './Tier';\nimport Playlist from './Playlist';\nimport AddButton from './AddButton';\nimport requireAuth from './requireAuth';\n\nconst BodyContainer = ({ fetchPlaylists, createTier, fetchTiers, tiers, playlists, band, authorized, createPlaylist, currentSong, handleUpdate, user }) => {\n\n    const [tierList, setTierList] = useState([]);\n    const [playlistList, setPlaylistList] = useState([]);\n\n    useEffect(() => {\n        fetchTiers(band.id);\n        fetchPlaylists(band.id);\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [user]);\n\n    useEffect(() => {\n        setTierList(band.tiers.map(id => tiers[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [tiers]);\n\n    useEffect(() => {\n        setPlaylistList(band.playlists.map(id => playlists[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [playlists]);\n\n    const renderTiers = () => {\n\n        return tierList.map(tier => {\n            if (tier) {\n                return (\n                    <Tier tier={tier} key={tier.id} />\n                );\n            }\n        });\n    };\n\n\n    const renderTierAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createTier(formValues)}\n                    title='Add a Tier'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Tier Name',\n                        name: 'tierName',\n                        type: 'input',\n                        required: true          \n                    }]}\n                    addClass='add-left'\n                    \n                />\n            );\n        }\n    };\n\n    const renderPlaylistAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createPlaylist(formValues)}\n                    title='Add a Playlist'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Playlist Name',\n                        name: 'playlistName',\n                        type: 'input',\n                        required: true             \n                    }]}\n                    addClass='add-left'\n                />\n            );\n        }\n    };\n\n    const renderPlaylists = () => {\n\n        return playlistList.map(playlist => {\n            if (playlist) {\n                return (\n                    <Playlist playlist={playlist} key={playlist.id} />               \n                );\n            }\n        });\n    };\n\n    const playbarActive = currentSong ? 'playbar-active' : ''\n\n    return (\n        <div className={`main ${playbarActive}`}>\n            <div className=\"section-header\">\n                <h2 className=\"section-title\">Tiers</h2>\n                <div className=\"section-add\">\n                    {renderTierAddButton()}\n                </div>\n            </div>\n            <hr />\n            {tiers && renderTiers()}\n            <div className=\"playlists\">\n                <div className=\"section-header\">\n                    <h2 className=\"section-title\">Playlists</h2>\n                    <div className=\"section-add\">\n                        {renderPlaylistAddButton()}\n                    </div>\n                </div>\n                <hr />\n                {playlists && renderPlaylists()}\n            </div>\n        </div>\n\n\n    );\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        tiers: state.tiers,\n        playlists: state.playlists,\n        currentSong: state.audio.currentSong,\n        user: state.auth.user,\n        band: state.bands.currentBand\n    };\n};\n\nexport default connect(mapStateToProps, { fetchTiers, fetchPlaylists, createTier, createPlaylist })(requireAuth(BodyContainer));","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { playAudio, pauseAudio, nextSong, prevSong, throwError, initializeAudio } from '../actions';\n\n\nclass AudioDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'production') {\n            this.url = 'https://exploring-the-space.com'\n        } else {\n            this.url = 'http://localhost:3001';\n        }\n        this.audio = React.createRef();\n    }\n\n\n    state = { volume: 50, sliderPosition: 0 };\n\n    formatTime(time) {\n\n        let minutes = time < 600 ? `0${Math.floor(time/60)}` : Math.floor(time/60);\n        let seconds = time % 60 < 10 ? `0${Math.floor(time % 60)}` : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    wrapUrl(id) {\n        return `${this.url}/api/audio/${id}.mp3`\n    }\n\n    updateSlider = () => {\n        const position = (this.audio.current.currentTime / this.audio.current.duration) * 1000;\n        this.time = this.formatTime(this.audio.current.currentTime);\n        if (!isNaN(position)) {\n            this.setState({\n                sliderPosition: position\n            });\n        }\n    }\n\n    setSpaceBarToPlay = (e) => {\n        if (e.code === 'Space') {\n            e.preventDefault();\n            if (this.props.pause) {\n                this.play();\n            } else {\n                this.pause();\n            }\n        }\n    }\n\n    audioError = () => {\n        const message = \"The audio player had an error, probably can't connect to server.\"\n        this.props.throwError(message);\n    }\n\n    componentDidMount() {\n\n        // if there's no audio element created, create one with the current song\n        // add event listener to link the slider position to the time of the song\n\n        \n        this.audio.current = new Audio();\n\n        this.audio.current.addEventListener('timeupdate', this.updateSlider);\n\n        this.audio.current.addEventListener('error', this.audioError);\n\n        // load next song at song end\n\n        this.audio.current.addEventListener('ended', this.nextSong);\n\n        // space bar stop/start\n\n        document.addEventListener('keydown', this.setSpaceBarToPlay);\n\n\n        this.audio.current.addEventListener('loadedmetadata', this.playOnLoad);\n        \n    }\n\n    componentDidUpdate(prevProps) {\n\n        // scroll down to compensate for the playbar pushing content down\n\n        if (!this.scrolled) {\n            window.scroll(window.scrollX, window.scrollY + 96);\n            this.scrolled = true;\n        }\n        \n        if (this.props.song) {\n            // if the current song is changed to something other than what is already loaded, change the src url and play the audio\n            // if redux gets a signal to play, play if not already\n            // reverse for pause\n            if (this.props.song !== prevProps.song) {\n                this.audio.current.src=this.wrapUrl(this.props.song.audio);\n                this.audio.current.volume = this.props.volume / 100;\n                // this.audio.current.play();\n            } else if (this.props.play && prevProps.pause) {\n\n                this.audio.current.play();\n            } else if (this.props.pause && prevProps.play) {\n                this.audio.current.pause();\n            }\n            if (this.props.volume !== prevProps.volume) {\n                this.audio.current.volume = this.props.volume / 100;\n            }\n        } else {\n            this.audio.current.pause();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.setSpaceBarToPlay);\n\n        this.audio.current.src='';\n        this.audio.current.removeEventListener('timeupdate', this.updateSlider);\n        this.audio.current.removeEventListener('error', this.audioError);\n        this.audio.current.removeEventListener('ended', this.nextSong);\n        this.audio.current.removeEventListener('loadedmetadata', this.playOnLoad);\n\n        this.props.initializeAudio();\n    }\n\n    playOnLoad = () => {\n        if (this.props.play) {\n            this.audio.current.play();\n        }\n    }\n\n    prevSong = () => {\n        if (this.audio.current.currentTime < 1) {\n            this.props.prevSong();\n        } else {\n            this.audio.current.currentTime = 0;\n        }\n    }\n\n    nextSong = () => {\n        this.props.nextSong();\n    }\n\n    play = () => {\n        this.props.playAudio();\n    }\n\n    pause = () => {\n        this.props.pauseAudio();\n    }\n\n    onSliderChange = (e) => {\n        const position = (e.target.value / 1000) * this.audio.current.duration;\n        this.audio.current.currentTime = position;\n    }\n\n    onPauseButton = () => {\n\n        if (this.props.play) {\n            this.pause();\n        } else {\n            this.play();\n        }\n\n    }\n\n    render() {\n\n        if (this.props.song) {\n\n            return (\n                <div className=\"playbar\">\n                    <div className=\"playbar-header\">\n                            <div className=\"playbar-title\">\n                                <p>{this.props.song.title.title}</p>\n                            </div>\n                            <div className=\"big-play-container\">\n                                <img\n                                    src=\"/images/prev.svg\"\n                                    className=\"audio-controls\"\n                                    onClick={this.prevSong}\n                                />\n                                <img\n                                    className=\"big-play-btn\"\n                                    src={this.props.play ? \"/images/pause.svg\" : \"/images/play.svg\"}\n                                    onClick={this.onPauseButton}\n                                />\n                                <img\n                                    src=\"/images/next.svg\"\n                                    className=\"audio-controls\"\n                                    onClick={this.nextSong}\n                                />\n                            </div>\n                    \n                        <div className=\"playbar-info\">\n                            <div className=\"playbar-info-detail\">\n                                <p>Version:</p>\n                                <p>{this.props.song.version}</p>\n                            </div>\n                            <div className=\"playbar-info-detail\">\n                                <p>Date:</p>\n                                <p>{this.displayDate(this.props.song.date)}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"playslider-container\">\n                        <div className=\"playslider-time\">\n                            {this.time}\n                        </div>\n                        <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"1000\"\n                            value={this.state.sliderPosition}\n                            className='playslider'\n                            onInput={this.onSliderChange}\n                        />\n                        <div className=\"playslider-time\">\n                            {this.formatTime(this.props.song.duration)}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.audio.currentSong,\n        play: state.audio.play,\n        pause: state.audio.pause,\n        volume: state.audio.volume\n    };\n};\n\nexport default connect(mapStateToProps, { playAudio, pauseAudio, nextSong, prevSong, throwError, initializeAudio })(AudioDisplay);","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchBand, signOut, changeVolume } from '../actions';\nimport Main from './Main';\nimport AudioDisplay from './AudioDisplay';\nimport requireAuth from './requireAuth';\n\nconst Header = ({ fetchBand, band, match, authorized, handleUpdate, user, signOut, volume, changeVolume }) => {\n\n    const [expand, setExpand] = useState(false);\n    const menu = useRef(null);\n\n    useEffect(() => {\n        fetchBand(match.params.bandName);\n        document.addEventListener('click', clickToDismiss, { capture: true });\n        return () => {\n            document.removeEventListener('click', clickToDismiss, { capture: true });\n        };\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [band, user]);\n\n    const clickToDismiss = (e) => {\n        if (menu.current && menu.current.contains(e.target)) {\n            return;\n        }\n        setExpand(false);\n    };\n\n    const renderAdmin = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/user\">User Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <div className=\"menu-item\" onClick={signOut}>Sign Out</div>\n            </div>\n        );\n    };\n\n    const renderHomeLink = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/\">Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <Link className=\"menu-item\" to=\"/signin\">Sign In</Link>\n            </div>\n        );\n    };\n\n    const showContent = () => {\n\n        if (!band) {\n            return (\n                <div className=\"no-band\">\n                    <h1>This band does not exist on Exploring the Space, but you can create it.</h1>\n                    <div className=\"home-buttons\">\n                        <Link to=\"/\">\n                            Home\n                        </Link>\n                        <Link to=\"/help\">\n                            What Is It?\n                        </Link>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"band-header\">\n                <div className=\"band-name\">\n                    <h1>{band && band.name}</h1>\n                    <div className=\"menu-button\" ref={menu} onClick={() => setExpand(!expand)}>\n                        <img src=\"images/dots.png\" />\n                        {expand && (authorized ? renderAdmin() : renderHomeLink())}\n                    </div>\n                </div>\n                <div className=\"volume-container\">\n                    <input\n                        type=\"range\"\n                        min=\"0\" max=\"100\"\n                        className=\"volume\"\n                        value={volume}\n                        onInput={e => changeVolume(e.target.value)}\n                    />\n                    <img src=\"/images/volume.svg\" />\n                </div>\n            </div>\n        );\n    };\n\n\n\n    return <>\n        \n        <div className=\"header\">\n            <AudioDisplay />\n            {showContent()}\n        </div>\n\n        {band && <Main />}\n\n    </>;\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        band: state.bands.currentBand,\n        user: state.auth.currentUser,\n        volume: state.audio.volume\n    }\n}\n\nexport default connect(mapStateToProps, { fetchBand, signOut, changeVolume })(requireAuth(Header));","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { createBand, fetchBands, editBand, deleteBand, signOut } from '../actions';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\n\nconst User = ({ user, bands, createBand, fetchBands, editBand, deleteBand, signOut }) => {\n\n    useEffect(() => {\n        fetchBands();\n    }, []);\n\n    const renderBands = () => {\n        const bandList = user.bands.map(id => bands[id]);\n        if (!bandList.length || !bandList[0]) {\n            return <h3>No bands belong to this user</h3>\n        }\n        return bandList.map(band => {\n            if (band) {\n                return (\n                    <div className=\"band-item\" key={band.id}>\n                        <Link to={`/${band.url}`}>\n                            <h2>{band.name}</h2>\n                        </Link>\n                        <div className=\"band-buttons\">\n                            <AddButton\n                                onSubmit={formValues => editBand(formValues, band.id)}\n                                title={`Edit ${band.name}`}\n                                image=\"images/edit.png\"\n                                fields={[{\n                                    label: 'Band Name',\n                                    name: 'name',\n                                    type: 'input'\n                                }]}\n                                initialValues={{ name: band.name }}\n                                enableReinitialize={true}\n                                form={`edit-band-${band.id}`}\n                            />\n                            <DeleteButton\n                                onSubmit={() => deleteBand(band.id)}\n                                displayName={band.name}\n                            />\n                        </div>\n                    </div>                   \n                );\n            }\n        });\n    };\n\n    if (user) {\n        return <>\n            <div className=\"user-header\">\n                <div className=\"user-header-sub\">\n                    <h1 className=\"user-title\">\n                        {user.username}'s bands\n                    </h1>\n                    <AddButton\n                        onSubmit={formValues => createBand(formValues)}\n                        title='Create a Band'\n                        image=\"images/add.png\"\n                        fields={[{\n                            label: 'Band Name',\n                            name: 'bandName',\n                            type: 'input'\n                        }]}\n                    />\n                </div>\n                <div className=\"user-header-sub\">\n                    <Link className=\"user-link\" to=\"/\">\n                        Home\n                        </Link>\n                    <div className=\"user-link\" onClick={signOut}>\n                        Sign Out\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <div className=\"band-list\">\n                {renderBands()}\n            </div>\n            \n\n        </>;\n    } else {\n        return null;\n    }\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { createBand, fetchBands, editBand, deleteBand, signOut })(User);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass UserForm extends React.Component {\n    \n    renderInput = ({ input, label, meta, type, autoComplete, defaultValue }) => {\n\n        return (\n            <div>\n                <label>{label}</label>\n                <input\n                    type={type}\n                    autoComplete={autoComplete} \n                    {...input}\n                /> \n            </div>\n        );\n    };\n\n    submitForm = formValues => {\n        this.props.onSubmit(formValues);\n    };\n\n\n    render() {\n        return (\n            <form className='signin' onSubmit={this.props.handleSubmit(this.submitForm)}>\n                <Field\n                    name=\"username\"\n                    component={this.renderInput}\n                    label=\"Username: \"\n                    type=\"text\"\n                    autoComplete=\"username\"\n    \n                />\n                <Field\n                    name=\"password\"\n                    component={this.renderInput}\n                    label=\"Passwyrd: \"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <button className=\"signin-submit\">Submit</button>\n            </form>\n        );\n    }\n\n\n}\n\nexport default reduxForm({\n    form: 'userForm'\n})(UserForm);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signIn } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignIn = ({ signIn, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign In</h1>\n            <UserForm onSubmit={formValues => signIn(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signup\">\n                    Sign Up\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn })(SignIn);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signUp } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignUp = ({ signUp, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign Up</h1>\n            <UserForm onSubmit={formValues => signUp(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signin\">\n                    Sign In\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signUp })(SignUp);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { fetchBands } from '../actions';\n\nclass Home extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchBands();\n    }\n\n    renderBands() {\n\n        delete this.props.bands.currentBand;\n\n        const bands = Object.values(this.props.bands);\n\n        return bands.map(band => {\n            return (\n                <div className=\"band-item\" key={band.id}>\n                    <Link to={`/${band.url}`}>\n                        <h2>{band.name}</h2>\n                    </Link>\n                </div>\n            );\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 className=\"home-header\">Exploring the Space</h1>\n                <div className=\"home-buttons\">\n                    <Link to=\"/signin\">\n                        Sign In\n                    </Link>\n                    <Link to=\"/signup\">\n                        Sign Up\n                    </Link>\n                    <Link to=\"/help\">\n                        What Is It?\n                    </Link>\n                </div>\n                <h1>All Bands:</h1>\n                <div className=\"band-list\">\n                    {this.props.bands && this.renderBands()}\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { fetchBands })(Home);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Help = () => {\n    return <>\n        <div className=\"home-buttons\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"signin\">Sign In</Link>\n            <Link to=\"signin\">Sign Up</Link>\n        </div>\n        <div className=\"help\">\n            <div className=\"help-header\">\n                Exploring the Space allows you to keep track of your musical recordings in an easy to navigate catalogue.\n            </div>\n            <h1>\n                Here's How This Works\n            </h1>\n            <div className=\"tldr\">\n                TL;DR: Bands contain Tiers, which contain Titles (songs), which contain different versions, each of which can have one or more recordings. Bands also have Playlists which are collections of particular recordings.\n            </div>\n            <p>\n                Each user can have 1 or more bands.  Each band has their own page.\n            </p>\n\n            <h2>\n                The Band Page\n            </h2>\n            <p>\n                The band page has a \"Tiers\" sections and a \"Playlists\" section. The tiers are used to catalogue your songs, and the playlists are used to combine different songs into a certain order.\n            </p>\n            <h3>\n                Tiers\n            </h3>\n            <p>\n                A tier is a collection of songs. Tiers can be separated by different genres, songs that you're currently rehearsing versus songs that are still being written, or any other criteria.  Within the band page, these songs are called \"Titles.\" Click on a tier to reveal its titles.\n            </p>\n            <h3>\n                Titles\n            </h3>\n            <p>\n                Titles contain all the various versions and recordings of a particular song. On the title display, you will see the recording that is most up-to-date for this title, and a button to play it or download it. Click on the title to reveal the different versions it contains.\n            </p>\n            <h3>\n                Versions\n            </h3>\n            <p>\n                A version categorizes groups of recordings, and again you can use whatever criteria you want.  Maybe one version is band practice, and the other is a recording you're working on.  Each version contains one or more recordings, or \"Bounces.\" One and only one version for each title is the \"current\" version.\n            </p>\n            <h3>\n                Bounces\n            </h3>\n            <p>\n                Bounces are the root component of a song, and they represent a particular recording.  They are represented by a date. Like versions, one bounce per version is designated \"current.\"\n            </p>\n            <h3>\n                Playlists\n            </h3>\n            <p>\n                Playlists are where you can make ordered lists of particular bounces.  Each title has a display of its currently selected version and bounce, along with a button to add that recording to a playlist (you have to create the playlist first).\n            </p>\n            <p>\n                If you change the version or bounce you're listening to, the song in the playlist will remain the same one you originally added. If you want to change which version and/or bounce a song in a playlist represents, you can change that by editing it within the playlist.\n            </p>\n            <h2>\n                Controls\n            </h2>\n            <p>\n                If you are on a band page of a band you own, you will see additional buttons where you can modify the catalogue and upload new recordings.\n            </p>\n            <p className=\"danger\">\n                If you delete an element, everything contained within that element will be deleted!\n            </p>\n            <a href=\"https://github.com/andytisdall/greenhouse\">\n                Github for this project\n            </a>\n        </div>\n    </>;\n};\n\nexport default Help;","import React, { useEffect } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nimport Error from './Error';\nimport Header from './Header';\nimport User from './User';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Home from './Home';\nimport Help from './Help';\nimport { fetchUser } from '../actions';\n\n\nimport history from '../history';\n\nconst App = ({ signedIn, fetchUser, error }) => {\n\n    useEffect(() => {\n        if (signedIn) {\n            fetchUser();\n        }\n    }, []);\n\n    const errClass = error ? 'error-margin' : '';\n\n    return <>\n        <Error />\n        <div className={`container ${errClass}`}>\n            <Router history={history}>\n                <Switch>    \n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/signin\" exact component={SignIn} />;\n                    <Route path=\"/signup\" exact component={SignUp} />;  \n                    <Route path=\"/user\" exact render={routeProps => {\n                        if (!signedIn) {\n                            history.push('/signin');\n                            return null;\n                        }\n                        return <User {...routeProps} />;\n                    }} />\n                    <Route path=\"/help\" exact component={Help} />\n                    <Route path=\"/:bandName\" component={Header} />\n                </Switch>\n            </Router>\n        </div>\n\n    </>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        signedIn: state.auth.isSignedIn,\n        error: state.error.error\n    };\n};\n\nexport default connect(mapStateToProps, { fetchUser })(App);","import { SIGN_IN, SIGN_OUT, CREATE_BAND } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: false,\n    user: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, user: action.payload };\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, user: null };\n        case CREATE_BAND:\n            const { user } = state;\n            user.bands.push(action.payload.id);\n            return { ...state, user };\n        default:\n            return state;  \n    } \n};\n","import { PLAY_AUDIO, PAUSE_AUDIO, QUEUE_SONGS, NEXT_SONG, DELETE_BOUNCE, CHANGE_VOLUME, INITIALIZE_AUDIO } from \"../actions/types\";\n\nconst initialState = {\n    play: false,\n    volume: 75,\n    currentSong: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case PLAY_AUDIO:\n            return { ...state, play: true, pause: false };\n        case PAUSE_AUDIO:\n            return { ...state, play: false, pause: true };\n        case QUEUE_SONGS:\n            const { song, parent } = action.payload;\n            return { ...state, currentSong: song, play: true, parent };\n        case NEXT_SONG:\n            return { ...state, currentSong: action.payload };\n        case DELETE_BOUNCE:\n            if (state.currentSong && action.payload.bounce.id === state.currentSong.audio) {\n                return { ...initialState };\n            } else {\n                return state;\n            }\n            // if (state.queue.length) {\n            //     state.queue = state.queue.filter(song => song.audio !== action.payload.bounce.id);\n            //     return { ...state };\n            // }\n        case CHANGE_VOLUME:\n            return { ...state, volume: action.payload };\n        case INITIALIZE_AUDIO:\n            return { ...initialState };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport tierReducer from './tierReducer';\nimport titleReducer from './titleReducer';\nimport versionReducer from './versionReducer';\nimport bounceReducer from './bounceReducer';\nimport playlistReducer from './playlistReducer';\nimport playlistSongReducer from './playlistSongReducer';\nimport bandReducer from './bandReducer';\nimport errorReducer from './errorReducer';\nimport audioReducer from './audioReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    tiers: tierReducer,\n    titles: titleReducer,\n    versions: versionReducer,\n    bounces: bounceReducer,\n    playlists: playlistReducer,\n    playlistSongs: playlistSongReducer,\n    bands: bandReducer,\n    error: errorReducer,\n    audio: audioReducer\n});","import { FETCH_TIERS, CREATE_TIER, EDIT_TIER, DELETE_TIER, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, ORDER_TIER } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TIERS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TIER:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_TIER:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_TIER:\n            const changePosition = Object.values(_.omit(state, state.currentBand)).filter(t => t.position > action.payload.position);\n            changePosition.forEach((tier) => {\n                tier.position = tier.position - 1;\n            });\n            delete state[action.payload.id];\n            return { ...state, ..._.mapKeys(changePosition, 'id') };\n        case ORDER_TIER:\n            state[action.payload.tier].orderBy = action.payload.orderBy;\n            return { ...state };\n        case CREATE_TITLE:\n            const addToTier = state[action.payload.tier];\n            addToTier.trackList.push(action.payload.title.id);\n            return { ...state, [addToTier.id]: addToTier };\n        case EDIT_TITLE:\n            if (action.payload.tier.new) {\n                const newTier = state[action.payload.tier.new];\n                newTier.trackList.push(action.payload.title.id);\n                const oldTier = state[action.payload.tier.old];\n                oldTier.trackList = oldTier.trackList.filter(id => id !== action.payload.title.id);\n                return { ...state, [newTier.id]: newTier, [oldTier.id]: oldTier };\n            } else {\n                return state;\n            }\n        case DELETE_TITLE:\n            const deleteFromTier = state[action.payload.tier];\n            if (deleteFromTier) {\n                const newTrackList = deleteFromTier.trackList.filter(id => id !== action.payload.title.id);\n                deleteFromTier.trackList = newTrackList;\n                return { ...state, [deleteFromTier.id]: deleteFromTier };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_TITLES, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, SELECT_VERSION, SELECT_BOUNCE, CREATE_VERSION, DELETE_VERSION } from '../actions/types';\nimport _ from 'lodash';\n\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TITLES:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TITLE:\n            return { ...state, [action.payload.title.id]: action.payload.title };\n        case EDIT_TITLE:\n            const oldTitle = state[action.payload.title.id];\n            const newTitle = action.payload.title;\n            newTitle.selectedVersion = oldTitle.selectedVersion;\n            newTitle.selectedBounce = oldTitle.selectedBounce;\n            return { ...state, [newTitle.id]: newTitle };\n        case DELETE_TITLE:\n            delete state[action.payload.title.id];\n            return { ...state };\n        case SELECT_VERSION:\n            const versionTitle = state[action.payload.titleId];\n            versionTitle.selectedVersion = action.payload.version;\n            return { ...state, [versionTitle.id]: { ...versionTitle } };\n        case SELECT_BOUNCE:\n            const bounceTitle = state[action.payload.titleId];\n            bounceTitle.selectedBounce = action.payload.bounce;\n            return { ...state, [bounceTitle.id]: { ...bounceTitle } }\n        case CREATE_VERSION:\n            const addToTitle = state[action.payload.title];\n            addToTitle.versions.push(action.payload.version.id);\n            addToTitle.selectedVersion = action.payload.version;\n            return { ...state, [addToTitle.id]: addToTitle};\n        case DELETE_VERSION:\n            const deleteFromTitle = state[action.payload.title];\n            if (deleteFromTitle) {\n                const newVersionList = deleteFromTitle.versions.filter(id => id !== action.payload.version.id);\n                deleteFromTitle.versions = newVersionList;\n                return { ...state, [deleteFromTitle.id]: deleteFromTitle };\n            }   \n        default:\n            return state;\n\n    }\n\n};","import { FETCH_VERSIONS, CREATE_VERSION, EDIT_VERSION, DELETE_VERSION, CREATE_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_VERSIONS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_VERSION:\n            return { ...state, [action.payload.version.id]: action.payload.version };\n        case EDIT_VERSION:\n            return { ...state, [action.payload.version.id]: action.payload.version };\n        case DELETE_VERSION:\n            delete state[action.payload.version.id];\n            return { ...state };\n        case CREATE_BOUNCE:\n            const addToVersion = state[action.payload.version];\n            addToVersion.bounces.push(action.payload.bounce.id);\n            return { ...state, [addToVersion.id]: addToVersion};\n        case DELETE_BOUNCE:\n            const deleteFromVersion = state[action.payload.version];\n            if (deleteFromVersion) {\n                const newBounceList = deleteFromVersion.bounces.filter(id => id !== action.payload.bounce.id);\n                deleteFromVersion.bounces = newBounceList;\n                return { ...state, [deleteFromVersion.id]: deleteFromVersion };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BOUNCES, CREATE_BOUNCE, EDIT_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_BOUNCES:\n            return { ...state, ..._.mapKeys(action.payload, 'id')};\n        case CREATE_BOUNCE:\n            return { ...state, [action.payload.bounce.id]: action.payload.bounce };\n        case EDIT_BOUNCE:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BOUNCE:\n            delete state[action.payload.bounce.id];\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTS, FETCH_PLAYLIST, CREATE_PLAYLIST, EDIT_PLAYLIST, DELETE_PLAYLIST, CREATE_PLAYLISTSONG, DELETE_PLAYLISTSONG } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case FETCH_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case CREATE_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_PLAYLIST:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_PLAYLIST:\n            delete state.currentBand;\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.position);\n            changePosition.forEach((playlist) => {\n                playlist.position = playlist.position - 1;\n            });\n            delete state[action.payload.id]\n            return { ...state, ..._.mapKeys(changePosition, 'id')};\n        case CREATE_PLAYLISTSONG:\n            const addToPlaylist = state[action.payload.playlist];\n            addToPlaylist.songs.push(action.payload.playlistsong.id);\n            return { ...state, [addToPlaylist.id]: addToPlaylist};\n        case DELETE_PLAYLISTSONG:\n            const deleteFromPlaylist = state[action.payload.playlist];\n            if (deleteFromPlaylist) {\n                const newSongList = deleteFromPlaylist.songs.filter(id => id !== action.payload.playlistsong.id);\n                deleteFromPlaylist.songs = newSongList;\n                return { ...state, [deleteFromPlaylist.id]: deleteFromPlaylist };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTSONGS, CREATE_PLAYLISTSONG, EDIT_PLAYLISTSONG, DELETE_PLAYLISTSONG, DELETE_VERSION, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTSONGS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_PLAYLISTSONG:\n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong };\n        case EDIT_PLAYLISTSONG:\n            const oldPosition = state[action.payload.playlistsong.id]['position'];\n            const newPosition = action.payload.playlistsong.position;\n            let changedPositions = {};\n            \n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            \n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong, ...changedPositions };\n        case DELETE_PLAYLISTSONG:\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.playlistsong.position);\n            changePosition.forEach((song) => {\n                song.position = song.position - 1;\n            });\n            delete state[action.payload.playlistsong.id];\n            return { ...state };\n        case DELETE_VERSION:\n            for (const id in state) {\n                if (state[id].version === action.payload.version.id) {\n                    state[id].version = null;\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        case DELETE_BOUNCE:\n            for (const id in state) {\n                if (state[id].bounce === action.payload.bounce.id) {\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BAND, FETCH_BANDS, EDIT_BAND, DELETE_BAND, CREATE_BAND, CREATE_TIER, DELETE_TIER, CREATE_PLAYLIST, DELETE_PLAYLIST, SIGN_OUT } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n        case FETCH_BAND:\n            return { ...state, [action.payload.id]: action.payload, currentBand: action.payload };\n        case FETCH_BANDS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BAND:\n            delete state[action.payload.id];\n            return { ...state };\n        case CREATE_TIER:\n            const { currentBand } = state;\n            currentBand.tiers.push(action.payload.id);\n            return { ...state, [currentBand.id]: currentBand, currentBand };\n        case DELETE_TIER:\n            const band = state.currentBand;\n            const newTiers = band.tiers.filter(id => id !== action.payload.id);\n            band.tiers = newTiers;\n            return { ...state, [band.id]: band, currentBand: band };\n        case CREATE_PLAYLIST:\n            const currentBandP = state.currentBand;\n            currentBandP.playlists.push(action.payload.id);\n            return { ...state, [currentBandP.id]: currentBandP, currentBand: currentBandP };\n        case DELETE_PLAYLIST:\n            const bandP = state.currentBand;\n            const newPlaylists = bandP.playlists.filter(id => id !== action.payload.id);\n            bandP.playlists = newPlaylists;\n            return { ...state, [bandP.id]: bandP, currentBand: bandP };\n        case SIGN_OUT:\n            return _.omit(state, state.currentBand);\n        default:\n            return state;\n\n    }\n\n};","import { ERROR } from '../actions/types';\n\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { error: action.payload }\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\n\n\nconst initialState = {};\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n    initialState.auth = { isSignedIn: true };\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}