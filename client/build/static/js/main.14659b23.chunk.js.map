{"version":3,"sources":["apis/greenhouse.js","actions/types.js","history.js","actions/index.js","components/Error.js","components/AddButton.js","components/Modal.js","components/DeleteButton.js","components/requireAuth.js","components/Bounce.js","components/Version.js","components/PlayContainer.js","components/Title.js","components/Tier.js","components/PlaylistSong.js","components/Playlist.js","components/Main.js","components/AudioDisplay.js","components/Header.js","components/User.js","components/UserForm.js","components/SignIn.js","components/SignUp.js","components/Home.js","components/Help.js","components/App.js","reducers/authReducer.js","reducers/audioReducer.js","reducers/index.js","reducers/tierReducer.js","reducers/titleReducer.js","reducers/versionReducer.js","reducers/bounceReducer.js","reducers/playlistReducer.js","reducers/playlistSongReducer.js","reducers/bandReducer.js","reducers/errorReducer.js","index.js"],"names":["url","instance","axios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","err","Promise","reject","SIGN_IN","SIGN_OUT","ERROR","FETCH_TIERS","FETCH_PLAYLISTSONGS","FETCH_PLAYLIST","FETCH_PLAYLISTS","FETCH_BAND","FETCH_BANDS","FETCH_TITLES","FETCH_VERSIONS","FETCH_BOUNCES","CREATE_TIER","CREATE_PLAYLISTSONG","CREATE_TITLE","CREATE_PLAYLIST","CREATE_VERSION","CREATE_BOUNCE","CREATE_BAND","EDIT_TIER","EDIT_PLAYLIST","EDIT_PLAYLISTSONG","EDIT_TITLE","EDIT_VERSION","EDIT_BOUNCE","EDIT_BAND","DELETE_TIER","DELETE_PLAYLIST","DELETE_PLAYLISTSONG","DELETE_TITLE","DELETE_VERSION","DELETE_BOUNCE","DELETE_BAND","PLAY_AUDIO","PAUSE_AUDIO","QUEUE_SONGS","NEXT_SONG","CHANGE_VOLUME","INITIALIZE_AUDIO","ORDER_TIER","SELECT_VERSION","SELECT_BOUNCE","createBrowserHistory","errorHandler","dispatch","message","response","data","error","console","log","setTimeout","throwError","type","payload","signOut","removeItem","history","push","fetchBands","a","greenhouse","get","fetchVersions","titleId","fetchBounces","versionId","createTier","formValues","getState","currentBand","bands","post","id","createPlaylistSong","playlistsong","playlist","playlistId","editVersion","thisVersion","versions","current","patch","parentTitle","titles","versionList","map","oldCurrent","find","v","_","pick","editBounce","bounceId","thisBounce","bounces","latest","file","length","reader","FileReader","onload","event","window","AudioContext","webkitAudioContext","decodeAudioData","target","result","buffer","key","duration","parseInt","formObject","formData","FormData","append","parentVersion","bounceList","oldLatest","b","onerror","readAsArrayBuffer","deleteTier","tierId","trackList","forEach","deleteTitle","deleteVersion","playlists","Object","values","playlistSongs","filter","pls","title","pl","songs","includes","deletePlaylistSong","tier","remainingVersions","newCurrent","selectVersion","deleteBounce","version","remainingBounces","newLatest","selectBounce","bounce","playlistSongId","playAudio","connect","state","useEffect","listen","location","className","onClick","AddButton","props","boxVisible","selectedOption","blockSpaceBarPress","e","stopPropagation","bodyClick","ref","contains","setState","showOptions","field","options","option","value","display","onDrop","input","files","onChange","addClass","meta","touched","autoFocus","required","undefined","showFields","fields","i","comp","label","Field","name","component","validate","submitForm","onSubmit","reset","showBox","handleSubmit","click","React","createRef","prevProps","prevState","this","document","addEventListener","capture","removeEventListener","src","image","Component","reduxForm","form","Modal","querySelector","classList","add","remove","ReactDOM","createPortal","onDismiss","content","actions","DeleteButton","displayName","useState","visible","setVisible","ChildComponent","ComposedComponent","authorized","handleUpdate","checkAuth","user","auth","createBounce","requireAuth","selectedBounce","setSelectedBounce","uploadActive","setUploadActive","displayDate","date","moment","utc","format","renderBounceList","sort","onEditSubmit","latestTag","bounceCount","count","comments","onAddSubmit","initialValues","renderAddButton","enableReinitialize","renderEditButton","renderDeleteButton","createVersion","selectedVersion","setSelectedVersion","setBounceList","versionCount","notes","renderBounces","queueSongs","song","songObject","audio","parent","queuePlaylistSongs","position","baseUrl","parentType","loaded","setLoaded","time","minutes","Math","floor","seconds","displayTime","onLoad","href","encodeURIComponent","download","band","tiers","editTitle","changeTier","move","currentTier","new","old","getTime","findLatest","expand","setExpand","setVersionList","setSong","versionToSelect","versionIds","bounceToSelect","arrow","currentSong","currentClass","open","renderPlayContainer","playlistOptions","tierOptions","t","unshift","onAddToPlaylist","renderButtons","fetchTitles","editTier","createTitle","setOrder","orderBy","titlesToRender","setTitlesToRender","times","setTimes","orderedTitles","useRef","Date","track","total","reduce","prev","cur","renderTotalTime","tierList","titleList","renderTitles","editPlaylistSong","newSong","playSong","setPlaySong","otherSongs","s","otherVersions","otherBounces","editOptions","fetchPlaylistSongs","deletePlaylist","playlistList","setPlaylistList","songsToRender","setSongsToRender","playlistsToShow","editPlaylist","fetchTiers","bandId","fetchPlaylists","createPlaylist","setTierList","playbarActive","renderTierAddButton","renderPlaylistAddButton","AudioDisplay","volume","sliderPosition","updateSlider","currentTime","formatTime","isNaN","setSpaceBarToPlay","code","preventDefault","pause","play","audioError","playOnLoad","prevSong","nextSong","pauseAudio","onSliderChange","onPauseButton","Audio","scrolled","scroll","scrollX","scrollY","wrapUrl","initializeAudio","min","max","onInput","allTitles","indexOf","allSongs","index","currentUser","fetchBand","bandName","changeVolume","match","menu","params","clickToDismiss","to","Main","createBand","editBand","deleteBand","username","bandList","renderBands","UserForm","renderInput","autoComplete","defaultValue","isSignedIn","signIn","setItem","signUp","Home","Help","signedIn","fetchUser","errClass","path","exact","SignIn","SignUp","render","routeProps","Header","INITIAL_STATE","initialState","combineReducers","formReducer","action","mapKeys","oldPosition","newPosition","changedPositions","item","pos","changePosition","omit","addToTier","newTier","oldTier","deleteFromTier","newTrackList","versionTitle","bounceTitle","addToTitle","deleteFromTitle","newVersionList","addToVersion","deleteFromVersion","newBounceList","p","addToPlaylist","deleteFromPlaylist","newSongList","newTiers","currentBandP","bandP","newPlaylists","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"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","file":"static/js/main.14659b23.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = {};\n\nif (process.env.NODE_ENV === 'production') {\n    url.baseURL = 'https://exploring-the-space.com/api';\n} else {\n    url.baseURL = 'http://localhost:3001/api'\n}\n\nconst instance = axios.create(url);\n\ninstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = token;\n        }\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\n\n\nexport default instance;","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const ERROR = 'ERROR';\n\nexport const FETCH_TIERS = 'FETCH_TIERS';\nexport const FETCH_PLAYLISTSONGS = 'FETCH_PLAYLISTSONGS';\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\nexport const FETCH_PLAYLISTS = 'FETCH_PLAYLISTS';\nexport const FETCH_BAND = 'FETCH_BAND';\nexport const FETCH_BANDS = 'FETCH_BANDS';\nexport const FETCH_TITLES = 'FETCH_TITLES';\nexport const FETCH_VERSIONS = 'FETCH_VERSIONS';\nexport const FETCH_BOUNCES = 'FETCH_BOUNCES';\n\nexport const FETCH_TITLE = 'FETCH_TITLE';\nexport const FETCH_VERSION = 'FETCH_VERSION';\nexport const FETCH_BOUNCE = 'FETCH_BOUNCE';\n\nexport const CREATE_TIER = 'CREATE_TIER';\nexport const CREATE_PLAYLISTSONG = 'CREATE_PLAYLISTSONG';\nexport const CREATE_TITLE = 'CREATE_TITLE';\nexport const CREATE_PLAYLIST = 'CREATE_PLAYLIST';\nexport const CREATE_VERSION = 'CREATE_VERSION';\nexport const CREATE_BOUNCE = 'CREATE_BOUNCE';\nexport const CREATE_BAND = 'CREATE_BAND';\n\nexport const EDIT_TIER = 'EDIT_TIER';\nexport const EDIT_PLAYLIST = 'EDIT_PLAYLIST';\nexport const EDIT_PLAYLISTSONG = 'EDIT_PLAYLISTSONG';\nexport const EDIT_TITLE = 'EDIT_TITLE';\nexport const EDIT_VERSION = 'EDIT_VERSION';\nexport const EDIT_BOUNCE = 'EDIT_BOUNCE';\nexport const EDIT_BAND = 'EDIT_BAND';\n\nexport const DELETE_TIER = 'DELETE_TIER';\nexport const DELETE_PLAYLIST = 'DELETE_PLAYLIST';\nexport const DELETE_PLAYLISTSONG = 'DELETE_PLAYLISTSONG';\nexport const DELETE_TITLE = 'DELETE_TITLE';\nexport const DELETE_VERSION = 'DELETE_VERSION';\nexport const DELETE_BOUNCE = 'DELETE_BOUNCE';\nexport const DELETE_BAND = 'DELETE_BAND';\n\nexport const PLAY_AUDIO = 'PLAY_AUDIO';\nexport const PAUSE_AUDIO = 'PAUSE_AUDIO';\nexport const QUEUE_SONGS = 'QUEUE_SONGS';\nexport const NEXT_SONG = 'NEXT_SONG';\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\nexport const INITIALIZE_AUDIO = 'INITIALIZE_AUDIO';\nexport const ORDER_TIER = 'ORDER_TIER';\n\nexport const SELECT_VERSION = 'SELECT_VERSION';\nexport const SELECT_BOUNCE = 'SELECT_BOUNCE';","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import greenhouse from '../apis/greenhouse';\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    ERROR,\n    FETCH_BAND,\n    FETCH_BANDS,\n    FETCH_TIERS,\n    FETCH_TITLES,\n    FETCH_VERSIONS,\n    FETCH_BOUNCES,\n    FETCH_PLAYLISTS,\n    FETCH_PLAYLISTSONGS,\n    CREATE_BAND,\n    CREATE_TIER,\n    CREATE_TITLE,\n    CREATE_VERSION,\n    CREATE_BOUNCE,\n    CREATE_PLAYLIST,\n    CREATE_PLAYLISTSONG,\n    EDIT_BAND,\n    EDIT_TIER,\n    EDIT_TITLE,\n    EDIT_VERSION,\n    EDIT_BOUNCE,\n    EDIT_PLAYLIST,\n    EDIT_PLAYLISTSONG,\n    DELETE_BAND,\n    DELETE_TIER,\n    DELETE_TITLE,\n    DELETE_VERSION,\n    DELETE_BOUNCE,\n    DELETE_PLAYLIST,\n    DELETE_PLAYLISTSONG,\n    PLAY_AUDIO,\n    PAUSE_AUDIO,\n    QUEUE_SONGS,\n    NEXT_SONG,\n    CHANGE_VOLUME,\n    INITIALIZE_AUDIO,\n    ORDER_TIER,\n    SELECT_VERSION,\n    SELECT_BOUNCE,\n} from './types';\nimport history from '../history';\nimport _ from 'lodash';\n\nconst errorHandler = err => (dispatch) => {\n    let message;\n    if (err.response) {\n        message = err.response.data.error\n    } else {\n        message = err.message;\n    }\n    console.log(err)\n    setTimeout(() => {\n        dispatch(throwError(null));\n    }, 10000);\n    dispatch({ type: ERROR, payload: message });\n};\n\n\nexport const signIn = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signin', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const signOut = () => {\n    localStorage.removeItem('token');\n    history.push('/');\n    return { type: SIGN_OUT };\n};\n\nexport const signUp = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signup', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const throwError = message => {\n    return { type: ERROR, payload: message };\n};\n\nexport const fetchUser = () => async dispatch => {\n    try {\n        const response = await greenhouse.get('/user');\n        if (response.data) {\n            dispatch({ type: SIGN_IN, payload: response.data });\n        } else {\n            dispatch(signOut());\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBand = bandName => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands/${bandName}`);    \n        dispatch({ type: FETCH_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBands = () => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands`);\n        dispatch({ type: FETCH_BANDS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTiers = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/tiers/${bandId}`);\n        dispatch({ type: FETCH_TIERS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTitles = tierId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/titles/${tierId}`);\n        dispatch({ type: FETCH_TITLES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchVersions = titleId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/versions/${titleId}`);\n        dispatch({ type: FETCH_VERSIONS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBounces = versionId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bounces/${versionId}`);\n        dispatch({ type: FETCH_BOUNCES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylists = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlists/${bandId}`);\n        dispatch({ type: FETCH_PLAYLISTS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylistSongs = playlistId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlistsongs/${playlistId}`);\n        dispatch({ type: FETCH_PLAYLISTSONGS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\nexport const createBand = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/bands', formValues);\n        dispatch({ type: CREATE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTier = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/tiers',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTitle = (formValues, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles',\n            { ...formValues, currentBand: currentBand.id, tier: tierId }\n        );\n        dispatch({ type: CREATE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createVersion = (formValues, titleId) => async (dispatch, getState) => {\n    try {\n\n        const { currentBand } = getState().bands;\n        const parentTitle = getState().titles[titleId];\n\n        if (!parentTitle.versions.length) {\n            formValues.current = true;\n        }\n        \n        const response = await greenhouse.post(\n            '/versions',\n            { ...formValues, currentBand: currentBand.id, title: titleId }\n        );    \n\n        if (response.data.current) {\n            if (parentTitle.versions.length) {\n                const versionList = parentTitle.versions.map(id => getState().versions[id]);\n                const oldCurrent = versionList.find(v => v.current);\n                oldCurrent.current = false;\n                dispatch(editVersion(\n                    _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n                ));\n            }\n            dispatch({ type: SELECT_VERSION, payload: { titleId, version: response.data } });\n        }\n\n        dispatch({ type: CREATE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createBounce = (formValues, versionId, titleId) => async (dispatch, getState) => {\n\n    try {\n        const { currentBand } = getState().bands;\n        const parentVersion = getState().versions[versionId];\n\n        if (!parentVersion.bounces.length) {\n            formValues.latest = true;\n        }\n\n        formValues.file = formValues.file[0];\n        \n        // Create instance of FileReader\n        const reader = new FileReader();\n\n        // When the file has been succesfully read\n        reader.onload = event => {\n\n            // Create an instance of AudioContext\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n            // Asynchronously decode audio file data contained in an ArrayBuffer.\n            audioContext.decodeAudioData(event.target.result, async (buffer) => {\n\n                // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                const duration = parseInt(buffer.duration);\n\n                const formObject = {\n                    ...formValues,\n                    currentBand: currentBand.id,\n                    version: versionId,\n                    duration\n                }\n\n                const formData = new FormData();\n\n                for ( let key in formObject ) {\n                    formData.append(key, formObject[key]);\n                }\n\n                const response = await greenhouse.post(\n                    '/bounces', \n                    formData,\n                    {\n                        headers: { 'Content-Type': 'multipart/form-data'}\n                    }\n                );\n\n                if (response.data.latest) {\n                    \n                    if (parentVersion.bounces.length) {\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }\n                    dispatch({ type: SELECT_BOUNCE, payload: { titleId, bounce: response.data } });\n                }\n\n                dispatch({ type: CREATE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n            });\n        };\n\n        // In case the file couldn't be read\n        reader.onerror =  event => {\n            console.error(\"An error ocurred reading the file: \", event);\n        };\n\n        // Read file as an ArrayBuffer, important !\n        reader.readAsArrayBuffer(formValues.file);\n\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylist = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlists',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylistSong = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlistsongs',\n            { \n                ...formValues,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: CREATE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: formValues.playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBand = (formValues, bandId) => async dispatch => {\n    try {\n        const response = await greenhouse.patch('/bands', { ...formValues, currentBand: bandId});\n        dispatch({ type: EDIT_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTier = (formValues, tierId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/tiers/${tierId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTitle = (formValues, titleId, tierId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        let changeTier = formValues.move;\n        const response = await greenhouse.patch(\n            `/titles/${titleId}`,\n            { ...formValues, currentTier: tierId, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TITLE, payload: { title: response.data, tier: { new: changeTier, old: tierId } } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editVersion = (formValues, versionId, titleId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisVersion = getState().versions[versionId];\n        if (thisVersion.current) {\n            formValues.current = true;\n        }\n        const response = await greenhouse.patch(\n            `/versions/${versionId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        if (response.data.current && !thisVersion.current) {\n            const parentTitle = getState().titles[titleId];\n            const versionList = parentTitle.versions.map(id => getState().versions[id]);\n            const oldCurrent = versionList.find(v => v.current);\n            oldCurrent.current = false;\n            dispatch(editVersion(\n                _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n            ));   \n        }\n        dispatch({ type: EDIT_VERSION, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBounce = (formValues, bounceId, versionId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisBounce = getState().bounces[bounceId];\n        if (thisBounce.latest) {\n            formValues.latest = true;\n        }\n        if (formValues.file && formValues.file.length) {\n            formValues.file = formValues.file[0];\n \n            // Create instance of FileReader\n            const reader = new FileReader();\n    \n            // When the file has been succesfully read\n            reader.onload = event => {\n    \n                // Create an instance of AudioContext\n                const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    \n                // Asynchronously decode audio file data contained in an ArrayBuffer.\n                audioContext.decodeAudioData(event.target.result, async (buffer) => {\n    \n                    // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                    const duration = parseInt(buffer.duration);\n    \n                    const formObject = {\n                        ...formValues,\n                        currentBand: currentBand.id,\n                        duration\n                    }\n    \n                    const formData = new FormData();\n    \n                    for ( let key in formObject ) {\n                        formData.append(key, formObject[key]);\n                    }\n    \n                    const response = await greenhouse.patch(\n                        `/bounces/${bounceId}`, \n                        formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data'}\n                        }\n                    );\n\n\n                    if (response.data.latest && !thisBounce.latest) {\n                        console.log('hahahaha')\n                        const parentVersion = getState().versions[versionId];\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }\n    \n                    dispatch({ type: EDIT_BOUNCE, payload: response.data });\n    \n                });\n            };\n    \n            // In case the file couldn't be read\n            reader.onerror =  event => {\n                console.error(\"An error ocurred reading the file: \", event);\n            };\n    \n            // Read file as an ArrayBuffer, important !\n            reader.readAsArrayBuffer(formValues.file);\n        } else {\n            const response = await greenhouse.patch(\n                `/bounces/${bounceId}`,\n                { ...formValues, currentBand: currentBand.id }\n            );\n            if (response.data.latest && !thisBounce.latest) {\n                const parentVersion = getState().versions[versionId];\n                const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                const oldLatest = bounceList.find(b => b.latest);\n                oldLatest.latest = false;\n                dispatch(editBounce(\n                    _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                ));\n            }\n            dispatch({ type: EDIT_BOUNCE, payload: response.data });\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylist = (formValues, playlistId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/playlists/${playlistId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylistSong = (formValues, playlistSongId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const song = getState().playlistSongs[playlistSongId];\n        if (formValues.move) {\n            const newSong = {\n                playlistId: formValues.move,\n                title: song.title,\n                version: song.version,\n                bounce: song.bounce\n            };\n            dispatch(createPlaylistSong(newSong));\n        }\n        const response = await greenhouse.patch(\n            `/playlistsongs/${playlistSongId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLISTSONG,\n            payload: { \n                playlistsong: response.data,\n                playlist: formValues.playlistId\n            }\n        });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\n\n\nexport const deleteBand = bandId => async dispatch => {\n    try {\n        const response = await greenhouse.post(\n            '/bands/delete',\n            { currentBand: bandId }\n        );\n        response.data.tiers.forEach(tierId => {\n            dispatch(deleteTier(tierId, response.data.id));\n        });\n        dispatch({ type: DELETE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTier = tierId => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/tiers/delete',\n            {\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.trackList.forEach(titleId => {\n            dispatch(deleteTitle(titleId, response.data.id));\n        });\n        dispatch({ type: DELETE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTitle = (titleId, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles/delete',\n            {\n                titleId,\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.versions.forEach(versionId => {\n            dispatch(deleteVersion(versionId, response.data.id));\n        });\n        const playlists = Object.values(getState().playlists);\n        const playlistSongs = Object.values(getState().playlistSongs).filter(pls => pls.title === titleId);\n        playlistSongs.forEach(pls => {\n            const playlist = playlists.find(pl => pl.songs.includes(pls.id));\n            dispatch(deletePlaylistSong(pls.id, playlist.id));\n        });\n        dispatch({ type: DELETE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteVersion = (versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/versions/delete',\n            {\n                versionId,\n                titleId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.current) {\n            const parentTitle = getState().titles[titleId];\n            if (parentTitle) {\n                const remainingVersions = parentTitle.versions.filter(id => id !== versionId);\n                if (remainingVersions.length) {\n                    const newCurrent = getState().versions[remainingVersions[remainingVersions.length-1]];\n                    newCurrent.current = true;\n                    dispatch(selectVersion(newCurrent.id, titleId));\n                    dispatch(editVersion(\n                        _.pick(newCurrent, 'name', 'notes', 'current'), newCurrent.id, titleId\n                    ));\n                } else {\n                    dispatch(selectVersion(null, titleId));     \n                }   \n            }\n        }\n        response.data.bounces.forEach(bounceId => {\n            dispatch(deleteBounce(bounceId, response.data.id, titleId));\n        });\n        dispatch({ type: DELETE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteBounce = (bounceId, versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/bounces/delete',\n            {\n                bounceId,\n                versionId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.latest) {\n            const parentVersion = getState().versions[versionId];\n            if (parentVersion) {\n                const remainingBounces = parentVersion.bounces.filter(id => id !== bounceId);\n                if (remainingBounces.length) {\n                    const newLatest = getState().bounces[remainingBounces[remainingBounces.length -1]];\n                    newLatest.latest = true;\n                    dispatch(selectBounce(newLatest.id, titleId));\n                    dispatch(editBounce(\n                        _.pick(newLatest, 'date', 'comments', 'latest'), newLatest.id, versionId\n                    ));\n                } else {\n                    dispatch(selectBounce(null, titleId));\n                }  \n            }\n        }\n        dispatch({ type: DELETE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylist = playlistId => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlists/delete',\n            {\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.songs.forEach(playlistSongId => {\n            dispatch(deletePlaylistSong(playlistSongId, response.data.id));\n        });\n        dispatch({ type: DELETE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylistSong = (playlistSongId, playlistId) => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlistsongs/delete',\n            {\n                playlistSongId,\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: DELETE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const playAudio = () => {\n    return { type: PLAY_AUDIO };\n};\n\nexport const pauseAudio = () => {\n    return { type: PAUSE_AUDIO };\n};\n\nexport const queueSongs = (song) => (dispatch, getState) => {\n  \n\n    const songObject = {\n        title: song.title,\n        version: song.version.name,\n        date: song.bounce.date,\n        duration: song.bounce.duration,\n        audio: song.bounce.id\n    };\n\n    dispatch({ type: QUEUE_SONGS, payload: { song: songObject, parent: song.tier } });\n    \n\n};\n\nexport const queuePlaylistSongs = (song) => (dispatch, getState) => {\n\n    // const version = getState().versions[song.version];\n    // const bounce = getState().bounces[song.bounce];\n    // const title = getState().titles[song.title];\n\n    const songObject = {\n        title: song.title,\n        version: song.version.name,\n        date: song.bounce.date,\n        duration: song.bounce.duration,\n        audio: song.bounce.id,\n        position: song.position\n    };\n\n    dispatch({ type: QUEUE_SONGS, payload: { song: songObject, parent: song.playlist } });\n};\n\nexport const setOrder = (tier, orderBy) => {\n    return { type: ORDER_TIER, payload: { tier, orderBy } };\n};\n\n\nexport const nextSong = () => (dispatch, getState) => {\n    const { parent, currentSong } = getState().audio;\n    if (parent.trackList) {\n        let allTitles;\n        if (parent.orderBy === 'date') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    if (a.selectedBounce && b.selectedBounce) {\n                        if (new Date(a.selectedBounce.date) > new Date(b.selectedBounce.date)) {\n                            return -1;\n                        } else {\n                            return 1;\n                        }\n                    } else if (a.selectedBounce) {\n                        return -1\n                    } else if (b.selectedBounce) {\n                        return 1;\n                    }\n                });\n        }\n\n        if (parent.orderBy === 'name') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    return a.title < b.title ? -1 : 1;\n                });\n        }\n\n        const song = allTitles[allTitles.indexOf(currentSong.title) + 1];\n\n        if (song && song.selectedVersion && song.selectedBounce) {\n            const version = getState().versions[song.selectedVersion.id];\n            const bounce = getState().bounces[song.selectedBounce.id];\n\n            const songObject = {\n                title: song,\n                version: version.name,\n                date: bounce.date,\n                duration: bounce.duration,\n                audio: bounce.id\n            };\n\n            dispatch({ type: NEXT_SONG, payload: songObject });\n        } else {\n            dispatch({ type: INITIALIZE_AUDIO });\n        }\n    }\n    if (parent.songs) {\n        const allSongs = parent.songs.map(id => getState().playlistSongs[id])\n            .sort((a,b) => a.position < b.position  ? -1 : 1);\n\n        let song;\n        let index = currentSong.position;\n\n        while (index < allSongs.length) {\n            if (allSongs[index].bounce !== null) {\n                song = allSongs[index];\n                break;\n            }\n            index++;\n        }\n\n        if (!song) {\n            return dispatch({ type: INITIALIZE_AUDIO });\n        }\n\n        const version = getState().versions[song.version];\n        const bounce = getState().bounces[song.bounce];\n        const title = getState().titles[song.title];\n\n        const songObject = {\n            title: title,\n            version: version.name,\n            date: bounce.date,\n            duration: bounce.duration,\n            audio: bounce.id,\n            position: song.position\n        };\n        dispatch({ type: NEXT_SONG, payload: songObject });\n    }\n    \n}\n\nexport const prevSong = () => (dispatch, getState) => {\n    const { parent, currentSong } = getState().audio;\n    if (parent.trackList) {\n        let allTitles;\n        if (parent.orderBy === 'date') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    if (a.selectedBounce && b.selectedBounce) {\n                        if (new Date(a.selectedBounce.date) > new Date(b.selectedBounce.date)) {\n                            return -1;\n                        } else {\n                            return 1;\n                        }\n                    } else if (a.selectedBounce) {\n                        return -1\n                    } else if (b.selectedBounce) {\n                        return 1;\n                    }\n                });\n        }\n\n        if (parent.orderBy === 'name') {\n            allTitles = parent.trackList\n                .map(id => getState().titles[id])\n                .sort((a, b) => {\n                    return a.title < b.title ? -1 : 1;\n                });\n        }\n\n        const song = allTitles[allTitles.indexOf(currentSong.title) -1];\n\n        if (song && song.selectedVersion && song.selectedBounce) {\n            const version = getState().versions[song.selectedVersion.id];\n            const bounce = getState().bounces[song.selectedBounce.id];\n\n            const songObject = {\n                title: song,\n                version: version.name,\n                date: bounce.date,\n                duration: bounce.duration,\n                audio: bounce.id\n            };\n\n            dispatch({ type: NEXT_SONG, payload: songObject });\n        }\n    }\n    \n    if (parent.songs) {\n        const allSongs = parent.songs.map(id => getState().playlistSongs[id])\n            .sort((a,b) => a.position < b.position  ? -1 : 1);\n\n        let song;\n        let index = currentSong.position -2;\n\n        while (index < allSongs.length) {\n            if (allSongs[index].bounce !== null) {\n                song = allSongs[index];\n                break;\n            }\n            index = index -1;\n        }\n\n        if (!song) {\n            return dispatch({ type: INITIALIZE_AUDIO });\n        }\n\n        const version = getState().versions[song.version];\n        const bounce = getState().bounces[song.bounce];\n        const title = getState().titles[song.title];\n\n        const songObject = {\n            title: title,\n            version: version.name,\n            date: bounce.date,\n            duration: bounce.duration,\n            audio: bounce.id,\n            position: song.position\n        };\n        dispatch({ type: NEXT_SONG, payload: songObject });\n    }\n    \n}\n\nexport const changeVolume = value => {\n    return { type: CHANGE_VOLUME, payload: value };\n}\n\nexport const initializeAudio = () => {\n    return { type: INITIALIZE_AUDIO };\n}\n\n\nexport const selectVersion = (version, titleId) => {\n    return { type: SELECT_VERSION, payload: { version, titleId } };\n}\n\nexport const selectBounce = (bounce, titleId) => {\n    return { type: SELECT_BOUNCE, payload: { bounce, titleId } };\n}","\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { throwError } from '../actions';\nimport history from '../history';\n\nconst Error = ({ error, throwError }) => {\n\n    useEffect(() => {\n        history.listen(location => {\n            throwError(null);\n        });\n    }, [history]);\n\n    if (!error) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\" onClick={() => throwError(null)}>\n            <div className=\"error-x\">X</div>\n            {error}\n            <div className=\"error-x\">X</div>\n        </div>\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.error.error\n    }\n}\n\nexport default connect(mapStateToProps, { throwError })(Error);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n\n\nclass AddButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    state = { boxVisible: false, selectedOption: null };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.boxVisible === false && this.state.boxVisible === true) {\n            document.addEventListener('click', this.bodyClick, {capture: true});\n            document.addEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        } else if (prevState.boxVisible === true && this.state.boxVisible === false) {\n            document.removeEventListener('click', this.bodyClick, {capture: true});\n            document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        }\n        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.bodyClick, {capture: true});\n        document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n    }\n\n    blockSpaceBarPress = (e) => {\n        e.stopPropagation();\n    }\n\n    bodyClick = (e) => {\n        if (this.ref.current && this.ref.current.contains(e.target)) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        }\n    }\n\n    showOptions = (field) => {\n        return field.options.map(option => {\n            return (\n                <option\n                    key={option.value}\n                    value={option.value}\n                >\n                    {option.display}\n                </option>\n            );\n        });\n    };\n\n    onDrop = (e, input) => {\n        const file = e.target.files[0];\n        const { onChange } = input;\n        onChange(file);\n    }\n\n    input = (field) => {\n        let addClass = '';\n        if (field.type === 'date') {\n            addClass = 'calendar';\n        }\n\n        if (field.type === 'file') {\n            delete field.input.value;\n\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <input\n                    {...field.input}\n                    type='file'\n                    className='inputfile'\n\n                    onDrop={(e) => this.onDrop(e, field.input)}\n                        \n                />\n            </>;\n        } else if (field.type === 'select') {\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <select\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </select>\n            </>;\n        } else {\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <input\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                    className={`text-input ${addClass}`}\n                />\n            </>;\n        }\n    }\n\n    required = value => {\n        return value ? undefined : 'Required';\n    }\n\n    showFields = () => {\n\n        return this.props.fields.map((field, i) => {\n            const autoFocus = i === 0 ? true : false;\n            let comp = this.input;\n            // if (field.type === 'select') {\n            //     comp = 'select'\n            // }\n            return <div key={field.label}>\n                <label>{field.label}: </label>\n                <Field\n                    name={field.name}\n                    component={comp}\n                    autoFocus={autoFocus}\n                    type={field.type}\n                    validate={field.required ? this.required : null}\n                    options={field.options}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </Field>\n            </div>\n        });\n \n    };\n\n    submitForm = (formValues) => {\n        this.props.onSubmit(formValues);\n        this.setState({ boxVisible: false });\n        this.props.reset();\n    }\n\n    showBox = () => {\n        if (this.state.boxVisible) {\n            const addClass = this.props.addClass ? this.props.addClass : '';\n            return <>    \n                <div className={`add-box ${addClass}`} onClick={e => e.stopPropagation()}>\n                    <h3 className=\"add-box-title\">{this.props.title}</h3>\n                    <form onSubmit = {this.props.handleSubmit(this.submitForm)}>\n                        {this.showFields()}\n                        <div className=\"submit-button-centered\">\n                            <button className=\"submit-button\" type='submit'>OK</button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        }\n    }\n\n    click = (e) => {\n        e.stopPropagation();\n        if (this.ref.current && this.ref.current === e.target) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        } else {\n            this.setState({ boxVisible: true });\n        }\n\n    }\n    \n    render() {\n\n        return <>\n            <div className=\"add\" onClick={this.click} ref={this.ref}>\n                <img src={this.props.image} />\n                {this.showBox()}\n            </div>\n        </>;\n    }\n\n}\n\nexport default reduxForm({ form: 'form' })(AddButton);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Modal extends React.Component {\n\n    componentDidMount() {\n        document.querySelector('.container').classList.add('modal-active');\n    }\n    componentWillUnmount() {\n        document.querySelector('.container').classList.remove('modal-active');\n    }\n\n    render() {\n        return ReactDOM.createPortal(\n            <div onClick={this.props.onDismiss} className=\"modal-background\">\n                <div \n                    onClick={e => e.stopPropagation()}\n                    className=\"modal-box\"\n                >\n                    <div className=\"modal-title\">\n                        {this.props.content}\n                    </div>\n                    <div>\n                        {this.props.actions}\n                    </div>\n                </div>\n            </div>,\n            document.querySelector('#modal')\n        );\n    }\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from './Modal';\n\nconst DeleteButton = ({ onSubmit, displayName }) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const renderContent = () => {\n        return `Seriously delete \"${displayName}\"?`;\n    };\n\n    const renderActions = () => {\n        return (\n            <>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => {\n                        onSubmit();\n                        setVisible(false);\n                    }}\n                >\n                    Delete\n                </button>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => setVisible(false)}\n                >\n                    No Wait\n                </button>\n            </>\n        );\n    };\n\n    const showModal = () => {\n\n        return (\n            <Modal \n                content={renderContent()}\n                actions={renderActions()}\n                onDismiss={e => {\n                    e.stopPropagation();\n                    setVisible(false)\n                }}\n            />\n        );\n    };\n\n\n\n    const onClick = (e) => {\n        e.stopPropagation();\n        setVisible(true);\n    };\n\n\n    return (\n        <div>\n            <img src=\"/images/delete.png\" className=\"delete\" onClick={onClick} />\n            {visible && showModal()}\n        </div>\n    );\n\n};\n\nexport default DeleteButton;","import React from 'react';\nimport { connect } from 'react-redux';\n\nexport default ChildComponent => {\n\n    class ComposedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n        }\n\n        state = { authorized: false };\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n\n        // componentDidUpdate() {\n        //     this.checkAuth();\n        // }\n\n        handleUpdate = () => {\n            this.checkAuth();\n        }\n\n        checkAuth() {\n            if (this.props.user && this.props.currentBand && this.props.user.bands.includes(this.props.currentBand.id)) {\n                this.setState({ authorized: true });\n            }\n        }\n\n        render() {\n            return <ChildComponent {...this.props} authorized={this.state.authorized} handleUpdate={this.handleUpdate} />;\n\n        }\n\n    }\n\n    const mapStateToProps = state => {\n        return {\n            user: state.auth.user,\n            currentBand: state.bands.currentBand\n        }\n    };\n\n    return connect(mapStateToProps)(ComposedComponent);\n\n};\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\nimport { selectBounce, createBounce, editBounce, deleteBounce } from '../actions';\n\nconst Bounce = ({ bounces, selectBounce, title, authorized, version, createBounce, editBounce, deleteBounce }) => {\n\n    const [selectedBounce, setSelectedBounce] = useState(title.selectedBounce);\n\n    const [uploadActive, setUploadActive] = useState(false);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(selectedBounce, title.id);\n        }\n    }, [selectedBounce]);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(title.selectedBounce, title.id);\n        }\n    }, [title.selectedBounce]);\n\n    useEffect(() => {\n        setSelectedBounce(title.selectedBounce);\n        setUploadActive(false);\n    }, [title.selectedBounce]);\n\n    const displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    const renderBounceList = () => {\n\n        if (bounces[0]) {\n\n            const bounceList = bounces.filter(b => b.id !== selectedBounce.id);\n            bounceList.sort((a, b) => a.date < b.date ? 1 : -1);\n\n            return bounceList.map(b => {\n                const current = b.latest ? <span className=\"list-current\"> * current</span> : null;\n                return <div\n                    className=\"dropdown-link change-song\"\n                    onClick={() => setSelectedBounce(b)}\n                    key={b.id}\n                >\n                    {displayDate(b.date)}\n                    {current}\n                </div>\n            });\n        }\n    };\n\n    const onAddSubmit = (formValues) => {\n\n        createBounce(formValues, version.id, title.id);\n        setUploadActive(true);\n\n    };\n\n    const onEditSubmit = (formValues) => {\n\n        editBounce(formValues, selectedBounce.id, version.id);\n        setUploadActive(true);\n\n    };\n\n    const uploadContent = () => {\n        return (\n\n                <div className='upload-image'>\n                    <p>Uploading...</p>\n                    <img className='windmill' src='/images/windmill.gif' />\n                </div>\n\n        );\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Bounce of ${version.name}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'File',\n                            name: 'file',\n                            type: 'file',\n                            required: true\n                        },\n                        {\n                            label: 'Date',\n                            name: 'date',\n                            type: 'date',\n                            required: true         \n                        },\n                        {\n                            label: 'Comments',\n                            name: 'comments',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Latest Bounce?',\n                            name: 'latest',\n                            type: 'checkbox',        \n                        },\n                    ]}\n                    onSubmit={formValues => onAddSubmit(formValues)}\n                    form={`add-bounce-${title.id}`}\n                    initialValues={{ latest: true }}\n                    addClass='add-bounce'\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={'Edit this Bounce'}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'File',\n                        name: 'file',\n                        type: 'file', \n                    },\n                    {\n                        label: 'Date',\n                        name: 'date',\n                        type: 'date',          \n                    },\n                    {\n                        label: 'Comments',\n                        name: 'comments',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Bounce?',\n                        name: 'latest',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={onEditSubmit}\n                initialValues={\n                    { ..._.pick(selectedBounce, 'comments', 'latest'), date: moment.utc(selectedBounce.date).format('YYYY-MM-DD') }\n                }\n                form={`edit-bounce-${title.id}`}\n                enableReinitialize={true}\n                addClass='add-bounce'\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return <DeleteButton\n                onSubmit={() => deleteBounce(selectedBounce.id, version.id, title.id)}\n                displayName={displayDate(selectedBounce.date)}\n            />;\n        }\n    };\n\n    const latestTag = () => {\n        if (selectedBounce.latest) {\n            return (\n                <div className=\"latest\">\n                    Current\n                </div>\n            );\n        }\n    };\n\n    const bounceCount = () => {\n        let count;\n        if (bounces.length === 1) {\n            count = '1 Bounce:';\n        } else {\n            count = `${bounces.length} Bounces:`\n        }\n\n        return (\n            <h5>\n                {count}\n            </h5>\n        );\n    };\n    \n\n    const renderBounceDetail = () => {\n        if (selectedBounce) {\n            return (\n                <div className='detail-content'>\n                    <div className='detail-header'>\n                        {bounceCount()}\n                        <div className='dropdown'>\n                            <button className='dropbtn'>\n                                {displayDate(selectedBounce.date)}\n                            </button>\n                            <div className='dropdown-content'>\n                                {renderBounceList()}\n                            </div>\n                        </div>\n                        <div>\n                            {latestTag()}\n                        </div>\n                    </div>\n                    <div className='detail-notes'>\n                        <div className=\"detail-notes-title\">Notes:</div>\n                        <p>{selectedBounce.comments}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>No Bounces for this Version</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n    \n\n    if (uploadActive) {\n        return <div className=\"detail-box bounce\">\n            {uploadContent()}\n        </div>\n    } else {\n        if (version) {\n            return (\n                <div className=\"detail-box bounce\">   \n                    {renderBounceDetail()}                                            \n                    <div className=\"detail-buttons\">\n                        {renderAddButton()}\n                        {selectedBounce && renderEditButton()}\n                        {selectedBounce && renderDeleteButton()}\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n};\n\nexport default connect(null, { selectBounce, createBounce, editBounce, deleteBounce })(requireAuth(Bounce));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion } from '../actions';\nimport Bounce from './Bounce';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Version = ({ versions, bounces, fetchBounces, selectVersion, title, createVersion, authorized, editVersion, deleteVersion }) => {\n\n    const [selectedVersion, setSelectedVersion] = useState(title.selectedVersion);\n    const [bounceList, setBounceList] = useState(null);\n\n    useEffect(() => {\n        // console.log(selectedVersion);\n        if (selectedVersion && selectedVersion !== title.selectedVersion) {\n            selectVersion(selectedVersion, title.id);\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n            fetchBounces(selectedVersion.id)\n        } \n    }, [selectedVersion]);\n\n    useEffect(() => {\n        if (selectedVersion) {\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (selectedVersion !== title.selectedVersion) {\n            setSelectedVersion(title.selectedVersion);\n            fetchBounces(title.selectedVersion.id);\n        }\n    }, [versions, title.selectedVersion]);\n\n    const renderVersionList = () => {\n        const versionList = versions.filter(v => v.id !== selectedVersion.id);\n\n        return versionList.map(v => {\n            const current = v.current ? <span className=\"list-current\"> * current</span> : null;\n            return <div\n                className=\"dropdown-link change-version\"\n                onClick={() => setSelectedVersion(v)}\n                key={v.id}\n            >\n                    {v.name}\n                    {current}\n            </div>\n        });\n    };\n    \n    const versionCount = () => {\n        let count;\n        if (versions.length === 1) {\n            count = '1 Version:';\n        } else {\n            count = `${versions.length} Versions:`\n        }\n\n        return (\n            <h5>{count}</h5>\n        );\n    };\n    \n    const renderBounces = () => {\n\n        if (bounceList) {\n\n            return (\n                <Bounce bounces={bounceList} title={title} version={selectedVersion} />\n            );\n        \n            \n        }\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Version of ${title.title}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true         \n                        },\n                        {\n                            label: 'Notes',\n                            name: 'notes',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Current Version?',\n                            name: 'current',\n                            type: 'checkbox',      \n                        },\n                    ]}\n                    onSubmit={(formValues) => createVersion(formValues, title.id)}\n                    form={`add-version-${title.id}`}\n                    initialValues={{ current: true }}\n                    enableReinitialize={true}\n                    addClass='add-version'\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={`Edit ${selectedVersion.name}`}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'Name',\n                        name: 'name',\n                        type: 'input', \n                    },\n                    {\n                        label: 'Notes',\n                        name: 'notes',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Version?',\n                        name: 'current',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={formValues => editVersion(formValues, selectedVersion.id, title.id)}\n                initialValues={_.pick(selectedVersion, 'name', 'notes', 'current')}\n                form={`edit-version-${title.id}`}\n                enableReinitialize={true}\n                addClass='add-version'\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return <DeleteButton\n                onSubmit={() => deleteVersion(selectedVersion.id, title.id)}\n                displayName={selectedVersion.name}\n            />;\n        }\n    };\n\n    const latestTag = () => {\n        if (selectedVersion.current) {\n            return (\n                <div className=\"current\">\n                    Current\n                </div>\n            );\n        }\n    };\n\n    const renderVersionDetail = () => {\n        if (selectedVersion) {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        {versionCount()}\n                        <div className=\"dropdown\">\n                            <button className=\"dropbtn\">\n                                {selectedVersion.name}\n                            </button>\n                            <div className=\"dropdown-content\">\n                                {renderVersionList()}\n                            </div>\n                        </div>\n                        {latestTag()}\n                    </div>\n                    <div className=\"detail-notes\">\n                        <div className=\"detail-notes-title\">Notes:</div>\n                        <p>{selectedVersion.notes}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>No Versions for this Song Yet</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n\n\n    \n    return <>\n            <div className=\"detail-box\">\n                {renderVersionDetail()}      \n                <div className=\"detail-buttons\">\n                    {renderAddButton()}\n                    {selectedVersion && renderEditButton()}\n                    {selectedVersion && renderDeleteButton()}\n                </div>\n            </div>\n            {renderBounces()}          \n    </>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        bounces: state.bounces\n    };\n}\n\nexport default connect(mapStateToProps, { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion })(requireAuth(Version));","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { queueSongs, queuePlaylistSongs, playAudio, throwError } from '../actions';\n\n\nconst PlayContainer = ({ song, queueSongs, parentType, queuePlaylistSongs, throwError }) => {\n\n    const [loaded, setLoaded] = useState(false);\n\n    const displayDate = (date) => {\n        return moment.utc(date).format('MM/DD/YY');\n    }\n\n    const displayTime = (time) => {\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time % 60) < 10 ? '0' + Math.floor(time % 60) : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    const onPlay = (e) => {\n        e.stopPropagation();\n        if (parentType === \"tier\") {\n            queueSongs(song);\n        } else if (parentType === \"playlist\") {\n            queuePlaylistSongs(song);\n        }\n    };\n\n    const renderSpinner = () => {\n        return (\n            <div className=\"sk-circle-fade\">\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n            </div>\n        );\n    };\n\n\n    let baseUrl;\n    if (process.env.NODE_ENV === 'production') {\n        baseUrl = 'https://exploring-the-space.com'\n    } else {\n        baseUrl = 'http://localhost:3001';\n    }\n\n    return (\n        <div className='play-container'>\n            <div className='play-container-time'>{displayTime(song.bounce.duration)}</div> \n            {!loaded && renderSpinner()}          \n            <img\n                src='/images/play.svg'\n                className='play-icon'\n                onClick={onPlay}\n                onLoad={() => setLoaded(true)}\n            /> \n            <div className='play-container-display'>\n                <p>{song.version.name}</p>\n                <p>{displayDate(song.bounce.date)}</p>\n            </div>\n            <a\n                className='download'\n                onClick={e => e.stopPropagation()}\n                href={`${baseUrl}/api/audio/download/${song.bounce.id}/${encodeURIComponent(song.title.title)}`}\n                download\n            >\n                <img src=\"/images/download.svg\" />\n            </a>\n        </div>\n    );\n};\n\nexport default connect(null, { queueSongs, queuePlaylistSongs, playAudio, throwError })(PlayContainer);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport Version from './Version';\nimport AddButton from './AddButton';\nimport { fetchVersions, fetchBounces, selectBounce, selectVersion, createPlaylistSong, editTitle, deleteTitle } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\nimport DeleteButton from './DeleteButton';\n\nconst Title = ({ tier, title, titles, fetchVersions, versions, bounces, fetchBounces, authorized, band, playlists, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle, getTime, audio, findLatest, tiers }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [versionList, setVersionList] = useState(null);\n    const [bounceList, setBounceList] = useState(null);\n    const [song, setSong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(title.id);\n    }, []);\n\n    useEffect(() => {\n\n        setVersionList(title.versions.map(id => versions[id]));\n        // console.log('set version list')\n        \n    }, [versions]);\n\n    useEffect(() => {\n        if (versionList && versionList[0]) {\n            \n            let versionToSelect;\n\n            const versionIds = versionList.map(v => v.id);\n\n            if (!title.selectedVersion || !versionIds.includes(title.selectedVersion.id)) {\n                versionToSelect = versionList.find(v => v.current);\n            } else if (title.selectedVersion) {\n                if (!versionList.includes(title.selectedVersion)) {\n                    versionToSelect = versionList.find(v => v.id === title.selectedVersion.id);\n                } else {\n                    versionToSelect = title.selectedVersion;\n                }\n            }\n            selectVersion(versionToSelect, title.id);\n            // console.log('select version')\n        }\n        if (title.selectedVersion && title.selectedVersion.bounces.length) {\n            fetchBounces(title.selectedVersion.id);\n            // console.log('fetch bounces')\n        }\n    }, [versionList]);\n\n    useEffect(() => {\n        if (title.selectedVersion) {\n            if (title.selectedVersion.bounces[0]) {\n                setBounceList(title.selectedVersion.bounces.map(id => bounces[id]));\n                // console.log('set bounce list')\n            } else if (title.selectedBounce !== null) {\n                // console.log('set bounce list null')\n                setBounceList(null);\n                selectBounce(null, title.id);\n            }\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (bounceList && bounceList[0]) {\n\n            let bounceToSelect;\n\n            if (title.selectedBounce && bounceList.includes(title.selectedBounce)) {\n                bounceToSelect = title.selectedBounce;\n            } else {\n                bounceToSelect = bounceList.find(b => b.latest);\n                findLatest(title, bounceToSelect);\n            }\n\n            if (bounceToSelect !== title.selectedBounce) {\n                \n                selectBounce(bounceToSelect, title.id);\n                // console.log('select bounce');\n                \n            }\n        } else if (song) {\n            setSong(null);\n        }\n\n    }, [bounceList]);\n\n\n    useEffect(() => {\n        if (title.selectedBounce && title.selectedVersion) {\n\n            if (!song || song.selectedVersion !== song.version || song.selectedBounce !== song.bounce) {\n\n                setSong({\n                    tier,\n                    title,\n                    version: title.selectedVersion,\n                    bounce: title.selectedBounce\n                });\n                // console.log('song update')\n                getTime({ id: title.id, duration: title.selectedBounce.duration });\n            }\n        } else if (song && !title.selectedBounce) {\n            setSong(null);\n            getTime({ id: title.id, duration: 0 });\n        }\n        \n    }, [titles[title.id]]);\n\n\n    const renderPlayContainer = () => {\n\n        if (song) {\n            return <PlayContainer song={song} parentType=\"tier\" />;\n        }\n    }\n\n    const renderVersion = () => {\n\n   \n        return (\n            <Version versions={versionList} title={title} />\n        )\n    }\n\n    const onAddToPlaylist = formValues => {\n        createPlaylistSong({\n            ...formValues,\n            bounce: title.selectedBounce.id,\n            version: title.selectedVersion.id,\n            title: title.id\n        });\n    }\n\n    const renderButtons = () => {\n        if (authorized) {\n            const bandPlaylists = band.playlists.map(id => playlists[id]);\n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name};\n                }\n            });\n            const bandTiers = band.tiers\n                .filter(t => t !== tier.id)\n                .map(id => tiers[id]);\n            const tierOptions = bandTiers.map(t => {\n                if (t) {\n                    return { value: t.id, display: t.name };\n                }\n            });\n            tierOptions.unshift({ value: null, display: ''});\n            return (\n                <div className='tier-display'>\n                    {song && <AddButton\n                        title=\"Add to a Playlist\"\n                        onSubmit={formValues => onAddToPlaylist(formValues)}\n                        image=\"images/playlist.png\"\n                        fields={[\n                            {\n                                type: 'select',\n                                options: playlistOptions,\n                                name: 'playlistId',\n                                label: 'Playlist'\n                            }\n                        ]}\n                        form={`add-to-playlist-${title.id}`}\n                        enableReinitialize={true}\n                    />}\n                    <AddButton\n                        title={`Edit ${title.title}`}\n                        image=\"images/edit.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            },\n                            {\n                                label: 'Move to Tier',\n                                name: 'move',\n                                type: 'select',\n                                options: tierOptions\n                            }\n                        ]}\n                        onSubmit={formValues => editTitle(formValues, title.id, tier.id)}\n                        initialValues={{ title: title.title, move: null }}\n                        form={`edit-title-${title.id}`}\n                        enableReinitialize={true}\n                    />\n                    <DeleteButton\n                        onSubmit={() => deleteTitle(title.id, tier.id)}\n                        displayName={title.title}\n                    />\n                </div>\n            );\n        }\n    };\n\n    const arrow = expand ? 'down-arrow' : '';\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && title.selectedBounce) {\n        currentClass = parent === tier.id && current === title.selectedBounce.id ? 'current-song' : '';\n    }\n\n    let open = expand ? 'open' : 'closed';\n\n    return (\n        <div className=\"title-margin\">\n            <div className={`row title ${currentClass} ${expand ? 'row-open' : ''}`}>\n                <div className=\"marqee\" onClick={() => setExpand(!expand)}>\n                    <div className=\"title-name\"   >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`} />              \n                        <h3>{title.title}</h3>\n                    </div>\n                    {renderPlayContainer()}\n                    {renderButtons()}\n                </div>\n            </div>\n            <div className={`version-container ${open}`}>\n                {expand && renderVersion()}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        versions: state.versions,\n        bounces: state.bounces,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        titles: state.titles,\n        audio: state.audio,\n        tiers: state.tiers\n    }\n}\n\nexport default connect(mapStateToProps, { fetchVersions, fetchBounces, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle })(requireAuth(Title));","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { createTier, editTier, fetchTitles, createTitle, deleteTier, setOrder } from '../actions';\nimport Title from './Title';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\n\nconst Tier = ({ tier, titles, fetchTitles, authorized, band, tiers, editTier, createTitle, deleteTier, setOrder }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [titlesToRender, setTitlesToRender] = useState(null);\n    const [times, setTimes] = useState({});\n\n    const orderedTitles = useRef({});\n\n    useEffect(() => {\n        setOrder(tier.id, 'date');\n        fetchTitles(tier.id);\n    }, []);\n\n    useEffect(() => {\n        setTitlesToRender(tier.trackList\n            .map(id => titles[id]));\n    }, [titles, tier]);\n\n    const findLatest = (title, bounce) => {\n        if (!orderedTitles.current[title.id]) {\n            orderedTitles.current[title.id] = new Date(bounce.date);\n        }\n    };\n\n    const renderTitles = () => {\n\n        const titleList = [...titlesToRender];\n\n        if (!tier.orderBy || tier.orderBy === 'date') {\n\n            titleList.sort((a, b) => {\n                if (orderedTitles.current[a.id] && orderedTitles.current[b.id]) {\n                    if (orderedTitles.current[a.id] > orderedTitles.current[b.id]) {\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                } else if (orderedTitles.current[a.id]) {\n                    return -1;\n                } else if (orderedTitles.current[b.id]) {\n                    return 1;\n                }\n            });\n        }\n\n        if (tier.orderBy === 'name') {\n\n            titleList.sort((a, b) => {\n                return a.title < b.title ? -1 : 1;\n            });\n\n        }\n\n        return titleList.map(title => {\n            if (title) {\n                return (\n                    <Title title={title} tier={tier} key={title.id} getTime={getTime} findLatest={findLatest}/>\n                );\n            }\n        });\n    };\n\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <div className=\"order-by\">\n                    <div>\n                        Add a Title to this Tier\n                    </div>\n                    <AddButton\n                        title={`Add a Title to ${tier.name}`}\n                        image=\"images/add.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            }\n                        ]}\n                        onSubmit={(formValues) => {\n                            createTitle(formValues, tier.id);\n                            setExpand(true);\n                        }}\n                        form={`add-title-${tier.id}`}\n                        addClass='add-left'\n                    />\n                </div>\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n            const tierList = band.tiers\n                .map(id => tiers[id])\n                .sort((a, b) => a.position < b.position ? -1 : 1)\n                .map(t => {\n                    if (t) {\n                        return { value: t.position, display: t.position };\n                    }\n                });\n\n\n            return (\n                <AddButton\n                    title={`Edit ${tier.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Tier Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true        \n                        }, {\n                            label: 'Tier Position',\n                            name: 'position',\n                            type: 'select',\n                            options: tierList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editTier(formValues, tier.id)}\n                    initialValues={{ name: tier.name, position: tier.position }}\n                    form={`edit-tier-${tier.id}`}\n                    enableReinitialize={true}\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deleteTier(tier.id)}\n                    displayName={tier.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n    const renderOrderButton = () => {\n        if (!tier.orderBy || tier.orderBy === 'date') {\n            return (\n                <div className='order-by'>\n                    <div>Order titles by: </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrder(tier.id, 'name');\n                        }}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        }\n        \n        if (tier.orderBy === 'name') {\n            return (\n                <div className='order-by'>\n                    <div>Order titles by:</div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrder(tier.id, 'date');\n                        }}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    const renderOptions = () => {\n\n        return <>  \n            {renderAddButton()}\n            {renderOrderButton()}     \n        </>;\n    };\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)}>\n                <div className=\"marqee\">\n                    <div className=\"tier-name\">\n                        <img className={`arrow ${arrow}`} src={`images/right-arrow.svg`} />\n                        <h2>{tier.name}</h2>\n                        \n                    </div>\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{tier.trackList.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <div className={`tier-options ${expand ? 'options-visible' : ''}`}>\n                {expand && renderOptions()}\n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && titlesToRender && renderTitles()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        titles: state.titles,\n        band: state.bands.currentBand,\n        tiers: state.tiers\n    }\n};\n\n\nexport default connect(mapStateToProps, { createTier, fetchTitles, editTier, createTitle, deleteTier, setOrder })(requireAuth(Tier));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport { editPlaylistSong, fetchVersions, fetchBounces, deletePlaylistSong } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\n\nconst PlaylistSong = ({ playlist, playlists, song, playlistSongs, authorized, versions, bounces, titles, fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong, audio, getTime, band }) => {\n\n    const [playSong, setPlaySong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(song.title);\n        titles[song.title].versions.forEach(id => {\n            fetchBounces(id);\n        });\n    }, []);\n    \n    useEffect(() => {\n        if (titles[song.title]) {\n            setPlaySong({\n                    playlist,\n                    title: titles[song.title],\n                    version: versions[song.version],\n                    bounce: bounces[song.bounce],\n                    position: song.position\n                });\n            }\n            if (bounces[song.bounce]) {\n                getTime({ id: song.id, duration: bounces[song.bounce].duration });\n            }   \n    }, [playlistSongs[song.id], bounces[song.bounce], titles[song.title], versions[song.version]]);\n\n    const renderPlayContainer = () => {\n\n        if (playSong && playSong.bounce && playSong.version) {\n            return <PlayContainer song={playSong} parentType=\"playlist\" />;\n        } else {\n            return (\n                <div className=\"playlistsong-no-bounce\">\n                    <p>\n                        {versions[song.version] ? `${versions[song.version].name}` : 'No Version Selected'}\n                    </p>\n                    <p>\n                        No Bounce Selected\n                    </p>\n                </div>\n            );\n        }\n    };\n\n    const onEditSubmit = formValues => {\n        const thisVersion = Object.values(versions).find(v => v.bounces.includes(formValues.bounce));\n        editPlaylistSong({\n            ...formValues,\n            version: thisVersion.id,\n            playlistId: playlist.id\n        }, song.id);\n    };\n\n    const renderEditButton = () => {\n        if (authorized && titles[song.title]) {\n\n            const otherSongs = Object.values(playlistSongs)\n                .filter(s => playlist.songs.includes(s.id))\n                .sort((a,b) => a.position < b.position ? -1 : 1)\n                .map(s => {\n                    return { value: s.position, display: s.position };\n            });\n\n            const thisTitle = titles[song.title];\n\n            const otherVersions = thisTitle.versions.map(id => versions[id]);\n\n            const otherBounces = otherVersions.map(v => {\n                if (v) {\n                    return v.bounces.map(id => bounces[id]);\n                }\n            });\n\n\n            const editOptions = [];\n            \n            otherVersions.forEach((v, i) => {\n                if (otherBounces[i]) {\n                    otherBounces[i].forEach(b => {\n                        if (b) {\n                            let current = '';\n                            if (v.current && b.latest) {\n                                current =' * current';\n                            }\n                            editOptions.push({\n                                value: b.id,\n                                display: `${v.name} -- ${moment.utc(b.date).format('MM/DD/YY')}${current}`\n                            });\n                        }\n                    });\n                }\n            });\n\n\n            const bandPlaylists = band.playlists\n                .filter(id => id !== playlist.id)\n                .map(id => playlists[id]);\n                \n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name };\n                }\n            });\n\n            playlistOptions.unshift({ value: null, display: ''})\n\n            return (\n                <AddButton\n                    image='/images/edit.png'\n                    title={`Edit ${titles[song.title].title}`}\n                    onSubmit={formValues => onEditSubmit(formValues)}\n                    fields={[\n                        {\n                            name: 'position',\n                            label: 'Position',\n                            type: 'select',\n                            options: otherSongs\n                        },\n                        {\n                            name: 'bounce',\n                            label: 'Bounce',\n                            type: 'select',\n                            options: editOptions,\n                            required: true\n                        },\n                        {\n                            label: 'Add to Playlist',\n                            name: 'move',\n                            type: 'select',\n                            options: playlistOptions\n                        }\n                    ]}\n                    initialValues={song.bounce ? { ..._.pick(song, 'position', 'bounce'), move: null } : { position: song.position, move: null }}\n                    form={`edit-playlistsong-${song.id}`}\n                    enableReinitialize={true}\n                    addClass='add-right'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylistSong(song.id, playlist.id)}\n                    displayName={titles[song.title].title}\n                />\n            );\n        }\n    };\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && song.bounce) {\n        currentClass = parent === playlist.id && current === song.bounce ? 'current-song' : '';\n    }\n\n\n    return (\n        <div className='title-margin'>\n            <div className={`row title playlistsong ${currentClass}`}>                    \n                <div className=\"marqee\">\n                    <div className='title-name'>\n                        <div className=\"song-position\">\n                            <p>{song.position}</p>\n                        </div>\n                        <h3>{song && titles[song.title] && titles[song.title].title}</h3>\n                    </div>      \n\n                    {renderPlayContainer()}\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\n\n\nconst mapStateToProps = state => {\n\n    return {\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        versions: state.versions,\n        bounces: state.bounces,\n        titles: state.titles,\n        audio: state.audio\n    }\n\n}\n\nexport default connect(mapStateToProps, { fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong })(requireAuth(PlaylistSong));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchPlaylistSongs, deletePlaylist, editPlaylist } from '../actions';\nimport PlaylistSong from './PlaylistSong';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Playlist = ({ playlist, playlists, fetchPlaylistSongs, playlistSongs, authorized, deletePlaylist, band }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [playlistList, setPlaylistList] = useState([]);\n    const [times, setTimes] = useState({});\n    const [songsToRender, setSongsToRender] = useState(null);\n\n\n    useEffect(() => {\n        fetchPlaylistSongs(playlist.id);\n    }, []);\n\n    useEffect(() => {\n        setSongsToRender(playlist.songs.map(id => playlistSongs[id]));\n    }, [playlistSongs, playlist.songs]);\n\n    const renderPlaylistSongs = () => {\n\n        songsToRender.sort((a, b) => a.position < b.position ? -1 : 1);\n\n        return songsToRender.map(song => {\n            if (song) {\n                return (\n                <PlaylistSong song={song} playlist={playlist} key={song.id} getTime={getTime} />\n                );\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (band.playlists.length) {\n            const playlistsToShow = band.playlists.map(id => playlists[id]).sort((a, b) => {\n                if (a.position < b.position) {\n                    return -1;\n                }\n                if (b.position < a.position) {\n                    return 1;\n                }\n            });\n            setPlaylistList(playlistsToShow.map(t => {\n                if (t) {\n                    return { value: t.position, display: t.position };\n                }\n            }));\n        }\n    }, [playlists]);\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n\n            return (\n                <AddButton\n                    title={`Edit ${playlist.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Playlist Name',\n                            name: 'name',\n                            type: 'input',          \n                        }, {\n                            label: 'Playlist Position',\n                            name: 'position',\n                            type: 'select',\n                            options: playlistList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editPlaylist(formValues, playlist.id)}\n                    initialValues={_.pick(playlist, 'name', 'position')}\n                    form={`edit-${playlist.id}`}\n                    enableReinitialize={true}\n                    addClass='add-tier'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylist(playlist.id)}\n                    displayName={playlist.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)} >\n                <div className=\"marqee tier-info\">\n                    <div className=\"tier-name\"  >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`}/>\n                        <h2>{playlist.name}</h2>\n                    </div>\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{playlist.songs.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                            {renderEditButton()}\n                            {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && renderPlaylistSongs()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        playlists: state.playlists,\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand\n    }\n}\n\nexport default connect(mapStateToProps, { fetchPlaylistSongs, deletePlaylist })(requireAuth(Playlist));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchTiers, fetchPlaylists, createTier, createPlaylist } from '../actions';\nimport Tier from './Tier';\nimport Playlist from './Playlist';\nimport AddButton from './AddButton';\nimport requireAuth from './requireAuth';\n\nconst BodyContainer = ({ fetchPlaylists, createTier, fetchTiers, tiers, playlists, band, authorized, createPlaylist, currentSong, handleUpdate, user }) => {\n\n    const [tierList, setTierList] = useState([]);\n    const [playlistList, setPlaylistList] = useState([]);\n\n    useEffect(() => {\n        fetchTiers(band.id);\n        fetchPlaylists(band.id);\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [user]);\n\n    useEffect(() => {\n        setTierList(band.tiers.map(id => tiers[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [tiers]);\n\n    useEffect(() => {\n        setPlaylistList(band.playlists.map(id => playlists[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [playlists]);\n\n    const renderTiers = () => {\n\n        return tierList.map(tier => {\n            if (tier) {\n                return (\n                    <Tier tier={tier} key={tier.id} />\n                );\n            }\n        });\n    };\n\n\n    const renderTierAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createTier(formValues)}\n                    title='Add a Tier'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Tier Name',\n                        name: 'tierName',\n                        type: 'input',\n                        required: true          \n                    }]}\n                    addClass='add-left'\n                    \n                />\n            );\n        }\n    };\n\n    const renderPlaylistAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createPlaylist(formValues)}\n                    title='Add a Playlist'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Playlist Name',\n                        name: 'playlistName',\n                        type: 'input',\n                        required: true             \n                    }]}\n                    addClass='add-left'\n                />\n            );\n        }\n    };\n\n    const renderPlaylists = () => {\n\n        return playlistList.map(playlist => {\n            if (playlist) {\n                return (\n                    <Playlist playlist={playlist} key={playlist.id} />               \n                );\n            }\n        });\n    };\n\n    const playbarActive = currentSong ? 'playbar-active' : ''\n\n    return (\n        <div className={`main ${playbarActive}`}>\n            <div className=\"section-header\">\n                <h2 className=\"section-title\">Tiers</h2>\n                <div className=\"section-add\">\n                    {renderTierAddButton()}\n                </div>\n            </div>\n            <hr />\n            {tiers && renderTiers()}\n            <div className=\"playlists\">\n                <div className=\"section-header\">\n                    <h2 className=\"section-title\">Playlists</h2>\n                    <div className=\"section-add\">\n                        {renderPlaylistAddButton()}\n                    </div>\n                </div>\n                <hr />\n                {playlists && renderPlaylists()}\n            </div>\n        </div>\n\n\n    );\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        tiers: state.tiers,\n        playlists: state.playlists,\n        currentSong: state.audio.currentSong,\n        user: state.auth.user\n    };\n};\n\nexport default connect(mapStateToProps, { fetchTiers, fetchPlaylists, createTier, createPlaylist })(requireAuth(BodyContainer));","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { playAudio, pauseAudio, nextSong, prevSong, throwError, initializeAudio } from '../actions';\n\n\nclass AudioDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'production') {\n            this.url = 'https://exploring-the-space.com'\n        } else {\n            this.url = 'http://localhost:3001';\n        }\n        this.audio = React.createRef();\n    }\n\n\n    state = { volume: 50, sliderPosition: 0 };\n\n    formatTime(time) {\n\n        let minutes = time < 600 ? `0${Math.floor(time/60)}` : Math.floor(time/60);\n        let seconds = time % 60 < 10 ? `0${Math.floor(time % 60)}` : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    wrapUrl(id) {\n        return `${this.url}/api/audio/${id}.mp3`\n    }\n\n    updateSlider = () => {\n        const position = (this.audio.current.currentTime / this.audio.current.duration) * 1000;\n        this.time = this.formatTime(this.audio.current.currentTime);\n        if (!isNaN(position)) {\n            this.setState({\n                sliderPosition: position\n            });\n        }\n    }\n\n    setSpaceBarToPlay = (e) => {\n        if (e.code === 'Space') {\n            e.preventDefault();\n            if (this.props.pause) {\n                this.play();\n            } else {\n                this.pause();\n            }\n        }\n    }\n\n    audioError = () => {\n        const message = \"The audio player had an error, probably can't connect to server.\"\n        this.props.throwError(message);\n    }\n\n    componentDidMount() {\n\n        // if there's no audio element created, create one with the current song\n        // add event listener to link the slider position to the time of the song\n\n        \n        this.audio.current = new Audio();\n\n        this.audio.current.addEventListener('timeupdate', this.updateSlider);\n\n        this.audio.current.addEventListener('error', this.audioError);\n\n        // load next song at song end\n\n        this.audio.current.addEventListener('ended', this.nextSong);\n\n        // space bar stop/start\n\n        document.addEventListener('keydown', this.setSpaceBarToPlay);\n\n\n        this.audio.current.addEventListener('loadedmetadata', this.playOnLoad);\n        \n    }\n\n    componentDidUpdate(prevProps) {\n\n        // scroll down to compensate for the playbar pushing content down\n\n        if (!this.scrolled) {\n            window.scroll(window.scrollX, window.scrollY + 96);\n            this.scrolled = true;\n        }\n        \n        if (this.props.song) {\n            // if the current song is changed to something other than what is already loaded, change the src url and play the audio\n                        // if redux gets a signal to play, play if not already\n            // reverse for pause\n            if (this.props.song !== prevProps.song) {\n                this.audio.current.src=this.wrapUrl(this.props.song.audio);\n                this.audio.current.volume = this.props.volume / 100;\n                // this.audio.current.play();\n            } else if (this.props.play && prevProps.pause) {\n\n                this.audio.current.play();\n            } else if (this.props.pause && prevProps.play) {\n                this.audio.current.pause();\n            }\n            if (this.props.volume !== prevProps.volume) {\n                this.audio.current.volume = this.props.volume / 100;\n\n            }\n        } else {\n            this.audio.current.pause();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.setSpaceBarToPlay);\n\n        this.audio.current.src='';\n        this.audio.current.removeEventListener('timeupdate', this.updateSlider);\n        this.audio.current.removeEventListener('error', this.audioError);\n        this.audio.current.removeEventListener('ended', this.nextSong);\n        this.audio.current.removeEventListener('loadedmetadata', this.playOnLoad);\n\n        this.props.initializeAudio();\n    }\n\n    playOnLoad = () => {\n        if (this.props.play) {\n            this.audio.current.play();\n        }\n    }\n\n    prevSong = () => {\n        if (this.audio.current.currentTime < 1) {\n            this.props.prevSong();\n        } else {\n            this.audio.current.currentTime = 0;\n        }\n    }\n\n    nextSong = () => {\n        this.props.nextSong();\n    }\n\n    play = () => {\n        this.props.playAudio();\n    }\n\n    pause = () => {\n        this.props.pauseAudio();\n    }\n\n    onSliderChange = (e) => {\n        const position = (e.target.value / 1000) * this.audio.current.duration;\n        this.audio.current.currentTime = position;\n    }\n\n    onPauseButton = () => {\n\n        if (this.props.play) {\n            this.pause();\n        } else {\n            this.play();\n        }\n\n    }\n\n    render() {\n\n        if (this.props.song) {\n\n            return (\n                <div className=\"playbar\">\n                    <div className=\"playbar-header\">\n                            <div className=\"playbar-title\">\n                                <p>{this.props.song.title.title}</p>\n                            </div>\n                            <div className=\"big-play-container\">\n                                <img\n                                    src=\"/images/prev.svg\"\n                                    className=\"audio-controls\"\n                                    onClick={this.prevSong}\n                                />\n                                <img\n                                    className=\"big-play-btn\"\n                                    src={this.props.play ? \"/images/pause.svg\" : \"/images/play.svg\"}\n                                    onClick={this.onPauseButton}\n                                />\n                                <img\n                                    src=\"/images/next.svg\"\n                                    className=\"audio-controls\"\n                                    onClick={this.nextSong}\n                                />\n                            </div>\n                    \n                        <div className=\"playbar-info\">\n                            <div className=\"playbar-info-detail\">\n                                <p>Version:</p>\n                                <p>{this.props.song.version}</p>\n                            </div>\n                            <div className=\"playbar-info-detail\">\n                                <p>Date:</p>\n                                <p>{this.displayDate(this.props.song.date)}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"playslider-container\">\n                        <div className=\"playslider-time\">\n                            {this.time}\n                        </div>\n                        <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"1000\"\n                            value={this.state.sliderPosition}\n                            className='playslider'\n                            onInput={this.onSliderChange}\n                        />\n                        <div className=\"playslider-time\">\n                            {this.formatTime(this.props.song.duration)}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.audio.currentSong,\n        play: state.audio.play,\n        pause: state.audio.pause,\n        volume: state.audio.volume\n    };\n};\n\nexport default connect(mapStateToProps, { playAudio, pauseAudio, nextSong, prevSong, throwError, initializeAudio })(AudioDisplay);","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchBand, signOut, changeVolume } from '../actions';\nimport Main from './Main';\nimport AudioDisplay from './AudioDisplay';\nimport requireAuth from './requireAuth';\n\nconst Header = ({ fetchBand, band, match, authorized, handleUpdate, user, signOut, volume, changeVolume }) => {\n\n    const [expand, setExpand] = useState(false);\n    const menu = useRef(null);\n\n    useEffect(() => {\n        fetchBand(match.params.bandName);\n        document.addEventListener('click', clickToDismiss, { capture: true });\n        return () => {\n            document.removeEventListener('click', clickToDismiss, { capture: true });\n        };\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [band, user]);\n\n    const clickToDismiss = (e) => {\n        if (menu.current && menu.current.contains(e.target)) {\n            return;\n        }\n        setExpand(false);\n    };\n\n    const renderAdmin = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/user\">User Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <div className=\"menu-item\" onClick={signOut}>Sign Out</div>\n            </div>\n        );\n    };\n\n    const renderHomeLink = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/\">Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <Link className=\"menu-item\" to=\"/signin\">Sign In</Link>\n            </div>\n        );\n    };\n\n    const showContent = () => {\n\n        if (!band) {\n            return (\n                <div className=\"no-band\">\n                    <h1>This band does not exist on Exploring the Space, but you can create it.</h1>\n                    <div className=\"home-buttons\">\n                        <Link to=\"/\">\n                            Home\n                        </Link>\n                        <Link to=\"/help\">\n                            What Is It?\n                        </Link>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"band-header\">\n                <div className=\"band-name\">\n                    <h1>{band && band.name}</h1>\n                    <div className=\"menu-button\" ref={menu} onClick={() => setExpand(!expand)}>\n                        <img src=\"images/dots.png\" />\n                        {expand && (authorized ? renderAdmin() : renderHomeLink())}\n                    </div>\n                </div>\n                <div className=\"volume-container\">\n                    <input\n                        type=\"range\"\n                        min=\"0\" max=\"100\"\n                        className=\"volume\"\n                        value={volume}\n                        onInput={e => changeVolume(e.target.value)}\n                    />\n                    <img src=\"/images/volume.svg\" />\n                </div>\n            </div>\n        );\n    };\n\n\n\n    return <>\n        \n        <div className=\"header\">\n            <AudioDisplay />\n            {showContent()}\n        </div>\n\n        {band && <Main band={band} />}\n\n    </>;\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        band: state.bands.currentBand,\n        user: state.auth.currentUser,\n        volume: state.audio.volume\n    }\n}\n\nexport default connect(mapStateToProps, { fetchBand, signOut, changeVolume })(requireAuth(Header));","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { createBand, fetchBands, editBand, deleteBand, signOut } from '../actions';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\n\nconst User = ({ user, bands, createBand, fetchBands, editBand, deleteBand, signOut }) => {\n\n    useEffect(() => {\n        fetchBands();\n    }, []);\n\n    const renderBands = () => {\n        const bandList = user.bands.map(id => bands[id]);\n        if (!bandList.length || !bandList[0]) {\n            return <h3>No bands belong to this user</h3>\n        }\n        return bandList.map(band => {\n            if (band) {\n                return (\n                    <div className=\"band-item\" key={band.id}>\n                        <Link to={`/${band.url}`}>\n                            <h2>{band.name}</h2>\n                        </Link>\n                        <div className=\"band-buttons\">\n                            <AddButton\n                                onSubmit={formValues => editBand(formValues, band.id)}\n                                title={`Edit ${band.name}`}\n                                image=\"images/edit.png\"\n                                fields={[{\n                                    label: 'Band Name',\n                                    name: 'name',\n                                    type: 'input'\n                                }]}\n                                initialValues={{ name: band.name }}\n                                enableReinitialize={true}\n                                form={`edit-band-${band.id}`}\n                            />\n                            <DeleteButton\n                                onSubmit={() => deleteBand(band.id)}\n                                displayName={band.name}\n                            />\n                        </div>\n                    </div>                   \n                );\n            }\n        });\n    };\n\n    if (user) {\n        return <>\n            <div className=\"user-header\">\n                <div className=\"user-header-sub\">\n                    <h1 className=\"user-title\">\n                        {user.username}'s bands\n                    </h1>\n                    <AddButton\n                        onSubmit={formValues => createBand(formValues)}\n                        title='Create a Band'\n                        image=\"images/add.png\"\n                        fields={[{\n                            label: 'Band Name',\n                            name: 'bandName',\n                            type: 'input'\n                        }]}\n                    />\n                </div>\n                <div className=\"user-header-sub\">\n                    <Link className=\"user-link\" to=\"/\">\n                        Home\n                        </Link>\n                    <div className=\"user-link\" onClick={signOut}>\n                        Sign Out\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <div className=\"band-list\">\n                {renderBands()}\n            </div>\n            \n\n        </>;\n    } else {\n        return null;\n    }\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { createBand, fetchBands, editBand, deleteBand, signOut })(User);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass UserForm extends React.Component {\n    \n    renderInput = ({ input, label, meta, type, autoComplete, defaultValue }) => {\n\n        return (\n            <div>\n                <label>{label}</label>\n                <input\n                    type={type}\n                    autoComplete={autoComplete} \n                    {...input}\n                /> \n            </div>\n        );\n    };\n\n    submitForm = formValues => {\n        this.props.onSubmit(formValues);\n    };\n\n\n    render() {\n        return (\n            <form className='signin' onSubmit={this.props.handleSubmit(this.submitForm)}>\n                <Field\n                    name=\"username\"\n                    component={this.renderInput}\n                    label=\"Username: \"\n                    type=\"text\"\n                    autoComplete=\"username\"\n    \n                />\n                <Field\n                    name=\"password\"\n                    component={this.renderInput}\n                    label=\"Passwyrd: \"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <button className=\"signin-submit\">Submit</button>\n            </form>\n        );\n    }\n\n\n}\n\nexport default reduxForm({\n    form: 'userForm'\n})(UserForm);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signIn } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignIn = ({ signIn, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign In</h1>\n            <UserForm onSubmit={formValues => signIn(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signup\">\n                    Sign Up\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn })(SignIn);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signUp } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignUp = ({ signUp, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign Up</h1>\n            <UserForm onSubmit={formValues => signUp(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signin\">\n                    Sign In\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signUp })(SignUp);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { fetchBands } from '../actions';\n\nclass Home extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchBands();\n    }\n\n    renderBands() {\n\n        delete this.props.bands.currentBand;\n\n        const bands = Object.values(this.props.bands);\n\n        return bands.map(band => {\n            return (\n                <div className=\"band-item\" key={band.id}>\n                    <Link to={`/${band.url}`}>\n                        <h2>{band.name}</h2>\n                    </Link>\n                </div>\n            );\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 className=\"home-header\">Exploring the Space</h1>\n                <div className=\"home-buttons\">\n                    <Link to=\"/signin\">\n                        Sign In\n                    </Link>\n                    <Link to=\"/signup\">\n                        Sign Up\n                    </Link>\n                    <Link to=\"/help\">\n                        What Is It?\n                    </Link>\n                </div>\n                <h1>All Bands:</h1>\n                <div className=\"band-list\">\n                    {this.props.bands && this.renderBands()}\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { fetchBands })(Home);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Help = () => {\n    return <>\n        <div className=\"home-buttons\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"signin\">Sign In</Link>\n            <Link to=\"signin\">Sign Up</Link>\n        </div>\n        <div className=\"help\">\n            <div className=\"help-header\">\n                Exploring the Space allows you to keep track of your musical recordings in an easy to navigate catalogue.\n            </div>\n            <h1>\n                Here's How This Works\n            </h1>\n            <div className=\"tldr\">\n                TL;DR: Bands contain Tiers, which contain Titles (songs), which contain different versions, each of which can have one or more recordings. Bands also have Playlists which are collections of particular recordings.\n            </div>\n            <p>\n                Each user can have 1 or more bands.  Each band has their own page.\n            </p>\n\n            <h2>\n                The Band Page\n            </h2>\n            <p>\n                The band page has a \"Tiers\" sections and a \"Playlists\" section. The tiers are used to catalogue your songs, and the playlists are used to combine different songs into a certain order.\n            </p>\n            <h3>\n                Tiers\n            </h3>\n            <p>\n                A tier is a collection of songs. Tiers can be separated by different genres, songs that you're currently rehearsing versus songs that are still being written, or any other criteria.  Within the band page, these songs are called \"Titles.\" Click on a tier to reveal its titles.\n            </p>\n            <h3>\n                Titles\n            </h3>\n            <p>\n                Titles contain all the various versions and recordings of a particular song. On the title display, you will see the recording that is most up-to-date for this title, and a button to play it or download it. Click on the title to reveal the different versions it contains.\n            </p>\n            <h3>\n                Versions\n            </h3>\n            <p>\n                A version categorizes groups of recordings, and again you can use whatever criteria you want.  Maybe one version is band practice, and the other is a recording you're working on.  Each version contains one or more recordings, or \"Bounces.\" One and only one version for each title is the \"current\" version.\n            </p>\n            <h3>\n                Bounces\n            </h3>\n            <p>\n                Bounces are the root component of a song, and they represent a particular recording.  They are represented by a date. Like versions, one bounce per version is designated \"current.\"\n            </p>\n            <h3>\n                Playlists\n            </h3>\n            <p>\n                Playlists are where you can make ordered lists of particular bounces.  Each title has a display of its currently selected version and bounce, along with a button to add that recording to a playlist (you have to create the playlist first).\n            </p>\n            <p>\n                If you change the version or bounce you're listening to, the song in the playlist will remain the same one you originally added. If you want to change which version and/or bounce a song in a playlist represents, you can change that by editing it within the playlist.\n            </p>\n            <h2>\n                Controls\n            </h2>\n            <p>\n                If you are on a band page of a band you own, you will see additional buttons where you can modify the catalogue and upload new recordings.\n            </p>\n            <p className=\"danger\">\n                If you delete an element, everything contained within that element will be deleted!\n            </p>\n            <a href=\"https://github.com/andytisdall/greenhouse\">\n                Github for this project\n            </a>\n        </div>\n    </>;\n};\n\nexport default Help;","import React, { useEffect } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nimport Error from './Error';\nimport Header from './Header';\nimport User from './User';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Home from './Home';\nimport Help from './Help';\nimport { fetchUser } from '../actions';\n\n\nimport history from '../history';\n\nconst App = ({ signedIn, fetchUser, error }) => {\n\n    useEffect(() => {\n        if (signedIn) {\n            fetchUser();\n        }\n    }, []);\n\n    const errClass = error ? 'error-margin' : '';\n\n    return <>\n        <Error />\n        <div className={`container ${errClass}`}>\n            <Router history={history}>\n                <Switch>    \n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/signin\" exact component={SignIn} />;\n                    <Route path=\"/signup\" exact component={SignUp} />;  \n                    <Route path=\"/user\" exact render={routeProps => {\n                        if (!signedIn) {\n                            history.push('/signin');\n                            return null;\n                        }\n                        return <User {...routeProps} />;\n                    }} />\n                    <Route path=\"/help\" exact component={Help} />\n                    <Route path=\"/:bandName\" component={Header} />\n                </Switch>\n            </Router>\n        </div>\n\n    </>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        signedIn: state.auth.isSignedIn,\n        error: state.error.error\n    };\n};\n\nexport default connect(mapStateToProps, { fetchUser })(App);","import { SIGN_IN, SIGN_OUT, CREATE_BAND } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: false,\n    user: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, user: action.payload };\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, user: null };\n        case CREATE_BAND:\n            const { user } = state;\n            user.bands.push(action.payload.id);\n            return { ...state, user };\n        default:\n            return state;  \n    } \n};\n","import { PLAY_AUDIO, PAUSE_AUDIO, QUEUE_SONGS, NEXT_SONG, DELETE_BOUNCE, CHANGE_VOLUME, INITIALIZE_AUDIO } from \"../actions/types\";\n\nconst initialState = {\n    play: false,\n    volume: 75,\n    currentSong: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case PLAY_AUDIO:\n            return { ...state, play: true, pause: false };\n        case PAUSE_AUDIO:\n            return { ...state, play: false, pause: true };\n        case QUEUE_SONGS:\n            const { song, parent } = action.payload;\n            return { ...state, currentSong: song, play: true, parent };\n        case NEXT_SONG:\n            return { ...state, currentSong: action.payload };\n        case DELETE_BOUNCE:\n            if (state.currentSong && action.payload.bounce.id === state.currentSong.audio) {\n                return { ...initialState };\n            } else {\n                return state;\n            }\n            // if (state.queue.length) {\n            //     state.queue = state.queue.filter(song => song.audio !== action.payload.bounce.id);\n            //     return { ...state };\n            // }\n        case CHANGE_VOLUME:\n            return { ...state, volume: action.payload };\n        case INITIALIZE_AUDIO:\n            return { ...initialState };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport tierReducer from './tierReducer';\nimport titleReducer from './titleReducer';\nimport versionReducer from './versionReducer';\nimport bounceReducer from './bounceReducer';\nimport playlistReducer from './playlistReducer';\nimport playlistSongReducer from './playlistSongReducer';\nimport bandReducer from './bandReducer';\nimport errorReducer from './errorReducer';\nimport audioReducer from './audioReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    tiers: tierReducer,\n    titles: titleReducer,\n    versions: versionReducer,\n    bounces: bounceReducer,\n    playlists: playlistReducer,\n    playlistSongs: playlistSongReducer,\n    bands: bandReducer,\n    error: errorReducer,\n    audio: audioReducer\n});","import { FETCH_TIERS, CREATE_TIER, EDIT_TIER, DELETE_TIER, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, ORDER_TIER } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TIERS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TIER:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_TIER:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_TIER:\n            const changePosition = Object.values(_.omit(state, state.currentBand)).filter(t => t.position > action.payload.position);\n            changePosition.forEach((tier) => {\n                tier.position = tier.position - 1;\n            });\n            delete state[action.payload.id];\n            return { ...state, ..._.mapKeys(changePosition, 'id') };\n        case ORDER_TIER:\n            state[action.payload.tier].orderBy = action.payload.orderBy;\n            return { ...state };\n        case CREATE_TITLE:\n            const addToTier = state[action.payload.tier];\n            addToTier.trackList.push(action.payload.title.id);\n            return { ...state, [addToTier.id]: addToTier };\n        case EDIT_TITLE:\n            if (action.payload.tier.new) {\n                const newTier = state[action.payload.tier.new];\n                newTier.trackList.push(action.payload.title.id);\n                const oldTier = state[action.payload.tier.old];\n                oldTier.trackList = oldTier.trackList.filter(id => id !== action.payload.title.id);\n                return { ...state, [newTier.id]: newTier, [oldTier.id]: oldTier };\n            } else {\n                return state;\n            }\n        case DELETE_TITLE:\n            const deleteFromTier = state[action.payload.tier];\n            if (deleteFromTier) {\n                const newTrackList = deleteFromTier.trackList.filter(id => id !== action.payload.title.id);\n                deleteFromTier.trackList = newTrackList;\n                return { ...state, [deleteFromTier.id]: deleteFromTier };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_TITLES, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, SELECT_VERSION, SELECT_BOUNCE, CREATE_VERSION, DELETE_VERSION } from '../actions/types';\nimport _ from 'lodash';\n\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TITLES:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TITLE:\n            return { ...state, [action.payload.title.id]: action.payload.title };\n        case EDIT_TITLE:\n            return { ...state, [action.payload.title.id]: action.payload.title };\n        case DELETE_TITLE:\n            delete state[action.payload.title.id];\n            return { ...state };\n        case SELECT_VERSION:\n            const versionTitle = state[action.payload.titleId];\n            versionTitle.selectedVersion = action.payload.version;\n            return { ...state, [versionTitle.id]: { ...versionTitle } };\n        case SELECT_BOUNCE:\n            const bounceTitle = state[action.payload.titleId];\n            bounceTitle.selectedBounce = action.payload.bounce;\n            return { ...state, [bounceTitle.id]: { ...bounceTitle } }\n        case CREATE_VERSION:\n            const addToTitle = state[action.payload.title];\n            addToTitle.versions.push(action.payload.version.id);\n            return { ...state, [addToTitle.id]: addToTitle};\n        case DELETE_VERSION:\n            const deleteFromTitle = state[action.payload.title];\n            if (deleteFromTitle) {\n                const newVersionList = deleteFromTitle.versions.filter(id => id !== action.payload.version.id);\n                deleteFromTitle.versions = newVersionList;\n                return { ...state, [deleteFromTitle.id]: deleteFromTitle };\n            }   \n        default:\n            return state;\n\n    }\n\n};","import { FETCH_VERSIONS, CREATE_VERSION, EDIT_VERSION, DELETE_VERSION, CREATE_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport { selectVersion } from '../actions';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_VERSIONS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_VERSION:\n            return { ...state, [action.payload.version.id]: action.payload.version };\n        case EDIT_VERSION:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_VERSION:\n            delete state[action.payload.version.id];\n            return { ...state };\n        case CREATE_BOUNCE:\n            const addToVersion = state[action.payload.version];\n            addToVersion.bounces.push(action.payload.bounce.id);\n            return { ...state, [addToVersion.id]: addToVersion};\n        case DELETE_BOUNCE:\n            const deleteFromVersion = state[action.payload.version];\n            if (deleteFromVersion) {\n                const newBounceList = deleteFromVersion.bounces.filter(id => id !== action.payload.bounce.id);\n                deleteFromVersion.bounces = newBounceList;\n                return { ...state, [deleteFromVersion.id]: deleteFromVersion };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BOUNCES, CREATE_BOUNCE, EDIT_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_BOUNCES:\n            return { ...state, ..._.mapKeys(action.payload, 'id')};\n        case CREATE_BOUNCE:\n            return { ...state, [action.payload.bounce.id]: action.payload.bounce };\n        case EDIT_BOUNCE:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BOUNCE:\n            delete state[action.payload.bounce.id];\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTS, FETCH_PLAYLIST, CREATE_PLAYLIST, EDIT_PLAYLIST, DELETE_PLAYLIST, CREATE_PLAYLISTSONG, DELETE_PLAYLISTSONG } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case FETCH_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case CREATE_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_PLAYLIST:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_PLAYLIST:\n            delete state.currentBand;\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.position);\n            changePosition.forEach((playlist) => {\n                playlist.position = playlist.position - 1;\n            });\n            delete state[action.payload.id]\n            return { ...state, ..._.mapKeys(changePosition, 'id')};\n        case CREATE_PLAYLISTSONG:\n            const addToPlaylist = state[action.payload.playlist];\n            addToPlaylist.songs.push(action.payload.playlistsong.id);\n            return { ...state, [addToPlaylist.id]: addToPlaylist};\n        case DELETE_PLAYLISTSONG:\n            const deleteFromPlaylist = state[action.payload.playlist];\n            if (deleteFromPlaylist) {\n                const newSongList = deleteFromPlaylist.songs.filter(id => id !== action.payload.playlistsong.id);\n                deleteFromPlaylist.songs = newSongList;\n                return { ...state, [deleteFromPlaylist.id]: deleteFromPlaylist };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTSONGS, CREATE_PLAYLISTSONG, EDIT_PLAYLISTSONG, DELETE_PLAYLISTSONG, DELETE_VERSION, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTSONGS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_PLAYLISTSONG:\n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong };\n        case EDIT_PLAYLISTSONG:\n            const oldPosition = state[action.payload.playlistsong.id]['position'];\n            const newPosition = action.payload.playlistsong.position;\n            let changedPositions = {};\n            \n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            \n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong, ...changedPositions };\n        case DELETE_PLAYLISTSONG:\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.playlistsong.position);\n            changePosition.forEach((song) => {\n                song.position = song.position - 1;\n            });\n            delete state[action.payload.playlistsong.id];\n            return { ...state };\n        case DELETE_VERSION:\n            for (const id in state) {\n                if (state[id].version === action.payload.version.id) {\n                    state[id].version = null;\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        case DELETE_BOUNCE:\n            for (const id in state) {\n                if (state[id].bounce === action.payload.bounce.id) {\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BAND, FETCH_BANDS, EDIT_BAND, DELETE_BAND, CREATE_BAND, CREATE_TIER, DELETE_TIER, CREATE_PLAYLIST, DELETE_PLAYLIST, SIGN_OUT } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n        case FETCH_BAND:\n            return { ...state, [action.payload.id]: action.payload, currentBand: action.payload };\n        case FETCH_BANDS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BAND:\n            delete state[action.payload.id];\n            return { ...state };\n        case CREATE_TIER:\n            const { currentBand } = state;\n            currentBand.tiers.push(action.payload.id);\n            return { ...state, [currentBand.id]: currentBand, currentBand };\n        case DELETE_TIER:\n            const band = state.currentBand;\n            const newTiers = band.tiers.filter(id => id !== action.payload.id);\n            band.tiers = newTiers;\n            return { ...state, [band.id]: band, currentBand: band };\n        case CREATE_PLAYLIST:\n            const currentBandP = state.currentBand;\n            currentBandP.playlists.push(action.payload.id);\n            return { ...state, [currentBandP.id]: currentBandP, currentBand: currentBandP };\n        case DELETE_PLAYLIST:\n            const bandP = state.currentBand;\n            const newPlaylists = bandP.playlists.filter(id => id !== action.payload.id);\n            bandP.playlists = newPlaylists;\n            return { ...state, [bandP.id]: bandP, currentBand: bandP };\n        case SIGN_OUT:\n            return _.omit(state, state.currentBand);\n        default:\n            return state;\n\n    }\n\n};","import { ERROR } from '../actions/types';\n\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { error: action.payload }\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\n\n\nconst initialState = {};\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n    initialState.auth = { isSignedIn: true };\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}