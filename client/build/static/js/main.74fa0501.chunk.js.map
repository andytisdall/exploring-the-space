{"version":3,"sources":["apis/greenhouse.js","actions/types.js","history.js","actions/index.js","components/Error.js","components/AddButton.js","components/Modal.js","components/DeleteButton.js","components/requireAuth.js","components/DetailBox.js","components/Bounce.js","components/Version.js","components/PlayContainer.js","components/Title.js","components/Tier.js","components/PlaylistSong.js","components/Playlist.js","components/Main.js","components/AudioDisplay.js","components/Header.js","components/User.js","components/UserForm.js","components/SignIn.js","components/SignUp.js","components/Home.js","components/Help.js","components/Waveform.js","components/Playhead.js","components/Timer.js","components/DeviceControl.js","components/AddRecording.js","components/Recorder.js","components/App.js","reducers/authReducer.js","reducers/audioReducer.js","reducers/index.js","reducers/tierReducer.js","reducers/titleReducer.js","reducers/versionReducer.js","reducers/bounceReducer.js","reducers/playlistReducer.js","reducers/playlistSongReducer.js","reducers/bandReducer.js","reducers/errorReducer.js","index.js"],"names":["url","instance","axios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","err","Promise","reject","SIGN_IN","SIGN_OUT","ERROR","FETCH_TIERS","FETCH_PLAYLISTSONGS","FETCH_PLAYLIST","FETCH_PLAYLISTS","FETCH_BAND","FETCH_BANDS","FETCH_TITLES","FETCH_VERSIONS","FETCH_BOUNCES","CREATE_TIER","CREATE_PLAYLISTSONG","CREATE_TITLE","CREATE_PLAYLIST","CREATE_VERSION","CREATE_BOUNCE","CREATE_BAND","UPLOAD_STARTED","EDIT_TIER","EDIT_PLAYLIST","EDIT_PLAYLISTSONG","EDIT_TITLE","EDIT_VERSION","EDIT_BOUNCE","EDIT_BAND","DELETE_TIER","DELETE_PLAYLIST","DELETE_PLAYLISTSONG","DELETE_TITLE","DELETE_VERSION","DELETE_BOUNCE","DELETE_BAND","PLAY_AUDIO","PAUSE_AUDIO","QUEUE_SONGS","NEXT_SONG","CHANGE_VOLUME","INITIALIZE_AUDIO","ORDER_TIER","SELECT_VERSION","SELECT_BOUNCE","createBrowserHistory","errorHandler","dispatch","message","response","data","error","console","log","setTimeout","throwError","type","payload","signOut","removeItem","history","push","fetchBand","bandName","a","greenhouse","get","fetchBands","fetchTiers","bandId","fetchTitles","tierId","fetchVersions","titleId","fetchBounces","versionId","createTier","formValues","getState","currentBand","bands","post","id","createBounce","parentVersion","versions","bounces","length","latest","file","reader","FileReader","onload","event","window","AudioContext","webkitAudioContext","decodeAudioData","target","result","buffer","key","duration","parseInt","formObject","version","formData","FormData","append","bounceList","map","oldLatest","find","b","editBounce","_","pick","bounce","onerror","readAsArrayBuffer","createPlaylistSong","playlistsong","playlist","playlistId","editVersion","thisVersion","current","patch","parentTitle","titles","versionList","oldCurrent","v","title","bounceId","thisBounce","deleteTier","trackList","forEach","deleteTitle","deleteVersion","playlists","Object","values","playlistSongs","filter","pls","pl","songs","includes","deletePlaylistSong","tier","remainingVersions","newCurrent","selectVersion","deleteBounce","remainingBounces","newLatest","selectBounce","playlistSongId","playAudio","queueSongs","song","songObject","name","date","audio","parent","connect","state","useEffect","listen","location","className","onClick","AddButton","props","boxVisible","selectedOption","blockSpaceBarPress","e","stopPropagation","bodyClick","ref","contains","setState","showOptions","field","options","option","value","display","onDrop","input","files","onChange","inputClass","errors","meta","touched","autoFocus","required","undefined","showFields","fields","i","comp","label","Field","component","validate","submitForm","onSubmit","reset","showBox","addClass","handleSubmit","click","React","createRef","prevProps","prevState","this","document","addEventListener","capture","removeEventListener","src","image","Component","reduxForm","form","Modal","querySelector","classList","add","remove","ReactDOM","createPortal","onDismiss","content","actions","DeleteButton","displayName","useState","visible","setVisible","ChildComponent","ComposedComponent","authorized","handleUpdate","checkAuth","user","auth","DetailBox","selectedItem","itemList","itemType","displayItem","setSelected","renderAddButton","renderEditButton","renderDeleteButton","playButton","dropdownVisible","setDropdownVisible","dropdownRef","useRef","onBodyClick","count","currentTag","renderItemList","notes","comments","parentType","renderDetail","requireAuth","selectedBounce","setSelectedBounce","uploadActive","setUploadActive","displayDate","moment","utc","format","onEditSubmit","sort","onAddSubmit","initialValues","enableReinitialize","createVersion","selectedVersion","setSelectedVersion","setBounceList","renderBounces","queuePlaylistSongs","position","baseUrl","loaded","setLoaded","time","minutes","Math","floor","seconds","displayTime","onLoad","href","encodeURIComponent","band","tiers","editTitle","changeTier","move","currentTier","new","old","getTime","findLatest","expand","setExpand","setVersionList","setSong","versionToSelect","versionIds","bounceToSelect","arrow","currentSong","currentClass","open","renderPlayContainer","playlistOptions","tierOptions","t","unshift","onAddToPlaylist","renderButtons","editTier","createTitle","setOrder","orderBy","titlesToRender","setTitlesToRender","times","setTimes","orderedTitles","Date","track","total","reduce","prev","cur","renderTotalTime","tierList","titleList","renderTitles","editPlaylistSong","newSong","doUpdate","playSong","setPlaySong","updateToCurrent","currentVersion","currentBounce","otherSongs","s","otherVersions","otherBounces","editOptions","fetchPlaylistSongs","deletePlaylist","editPlaylist","playlistList","setPlaylistList","songsToRender","setSongsToRender","setDoUpdate","playlistsToShow","showUpdatePlaylistCheckbox","fetchPlaylists","createPlaylist","setTierList","playbarActive","renderTierAddButton","renderPlaylistAddButton","AudioDisplay","volume","sliderPosition","updateSlider","currentTime","formatTime","isNaN","setSpaceBarToPlay","code","preventDefault","pause","play","audioError","playOnLoad","prevSong","nextSong","pauseAudio","onSliderChange","onPauseButton","Audio","scrolled","scroll","scrollX","scrollY","wrapUrl","initializeAudio","min","max","onInput","allTitles","indexOf","allSongs","index","currentUser","changeVolume","match","menu","params","clickToDismiss","to","Main","createBand","editBand","deleteBand","username","bandList","renderBands","UserForm","renderInput","autoComplete","defaultValue","isSignedIn","signIn","setItem","signUp","Home","Help","Waveform","isRecording","canvas","audioContext","getContext","clearRect","width","height","close","renderWaveform","arrayBuffer","audio_context","array_buffer","scale","WaveformData","createFromAudio","waveform","drawWaveform","ctx","lengthMultiplier","scaleY","amplitude","beginPath","channel","x","val","max_sample","lineTo","min_sample","closePath","stroke","fill","Playhead","playheadPosition","setPlayheadPosition","isPlaying","setIsPlaying","player","onended","onplay","onpause","ontimeupdate","URL","createObjectURL","Timer","timer","setTimer","interval","setInterval","clearInterval","DeviceControl","inputSource","setInputSource","devices","setDevices","getDevices","navigator","mediaDevices","ondevicechange","enumerateDevices","inputDevices","device","kind","deviceId","deviceList","micSelect","uploadStarted","defaultItem","selectedTitle","setSelectedTitle","selectedTier","setSelectedTier","toISOString","substring","selectedDate","setSelectedDate","uploadSuccess","setUploadSuccess","uploadLoading","setUploadLoading","setTitleList","list","selector","stateList","onSelect","item","selected","submitActive","File","lastModified","Recorder","setIsRecording","setAudio","setError","mediaRecorder","vmsg","wasmURL","onRecord","getUserMedia","initAudio","initWorker","startRecording","stopRecording","blob","signedIn","fetchUser","errClass","path","exact","SignIn","SignUp","render","routeProps","Header","INITIAL_STATE","initialState","combineReducers","formReducer","action","mapKeys","oldPosition","newPosition","changedPositions","pos","changePosition","omit","addToTier","newTier","oldTier","deleteFromTier","newTrackList","oldTitle","newTitle","versionTitle","bounceTitle","addToTitle","deleteFromTitle","newVersionList","addToVersion","deleteFromVersion","newBounceList","p","addToPlaylist","deleteFromPlaylist","newSongList","newTiers","currentBandP","bandP","newPlaylists","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"qNAEMA,EAAM,CAGRA,QAAc,uCAKZC,E,OAAWC,EAAMC,OAAOH,GAE9BC,EAASG,aAAaC,QAAQC,KAC1B,SAACC,GACG,IAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,IACAD,EAAOI,QAAQC,cAAgBJ,GAE5BD,KAEX,SAACM,GACG,OAAOC,QAAQC,OAAOF,MAMfZ,QC3BFe,EAAU,UACVC,EAAW,WAEXC,EAAQ,QAERC,EAAc,cACdC,EAAsB,sBACtBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAa,aACbC,EAAc,cACdC,EAAe,eACfC,EAAiB,iBACjBC,EAAgB,gBAMhBC,EAAc,cACdC,EAAsB,sBACtBC,EAAe,eACfC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAc,cAEdC,EAAiB,iBAEjBC,EAAY,YACZC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAY,YAEZC,EAAc,cACdC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAe,eACfC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAc,cAEdC,EAAa,aACbC,GAAc,cACdC,GAAc,cACdC,GAAY,YACZC,GAAgB,gBAChBC,GAAmB,mBACnBC,GAAa,aAEbC,GAAiB,iBACjBC,GAAgB,gB,SCpDdC,kB,oBC8CTC,GAAe,SAAC/C,GAAD,OAAS,SAACgD,GAC7B,IAAIC,EAEFA,EADEjD,EAAIkD,SACIlD,EAAIkD,SAASC,KAAKC,MAElBpD,EAAIiD,QAEhBI,QAAQC,IAAItD,GACZuD,YAAW,WACTP,EAASQ,GAAW,SACnB,KACHR,EAAS,CAAES,KAAMpD,EAAOqD,QAAST,MActBU,GAAU,WAGrB,OAFA/D,aAAagE,WAAW,SACxBC,GAAQC,KAAK,KACN,CAAEL,KAAMrD,IAcJoD,GAAa,SAACP,GACzB,MAAO,CAAEQ,KAAMpD,EAAOqD,QAAST,IAgBpBc,GAAY,SAACC,GAAD,8CAAc,WAAOhB,GAAP,eAAAiB,EAAA,+EAEZC,EAAWC,IAAX,iBAAyBH,IAFb,OAE7Bd,EAF6B,OAGnCF,EAAS,CAAES,KAAM/C,EAAYgD,QAASR,EAASC,OAHZ,gDAKnCH,EAASD,GAAa,EAAD,KALc,yDAAd,uDASZqB,GAAa,yDAAM,WAAOpB,GAAP,eAAAiB,EAAA,+EAELC,EAAWC,IAAX,UAFK,OAEtBjB,EAFsB,OAG5BF,EAAS,CAAES,KAAM9C,EAAa+C,QAASR,EAASC,OAHpB,gDAK5BH,EAASD,GAAa,EAAD,KALO,yDAAN,uDASbsB,GAAa,SAACC,GAAD,8CAAY,WAAOtB,GAAP,eAAAiB,EAAA,+EAEXC,EAAWC,IAAX,iBAAyBG,IAFd,OAE5BpB,EAF4B,OAGlCF,EAAS,CAAES,KAAMnD,EAAaoD,QAASR,EAASC,OAHd,gDAKlCH,EAASD,GAAa,EAAD,KALa,yDAAZ,uDASbwB,GAAc,SAACC,GAAD,8CAAY,WAAOxB,GAAP,eAAAiB,EAAA,+EAEZC,EAAWC,IAAX,kBAA0BK,IAFd,OAE7BtB,EAF6B,OAGnCF,EAAS,CAAES,KAAM7C,EAAc8C,QAASR,EAASC,OAHd,gDAKnCH,EAASD,GAAa,EAAD,KALc,yDAAZ,uDASd0B,GAAgB,SAACC,GAAD,8CAAa,WAAO1B,GAAP,eAAAiB,EAAA,+EAEfC,EAAWC,IAAX,oBAA4BO,IAFb,OAEhCxB,EAFgC,OAGtCF,EAAS,CAAES,KAAM5C,EAAgB6C,QAASR,EAASC,OAHb,gDAKtCH,EAASD,GAAa,EAAD,KALiB,yDAAb,uDAShB4B,GAAe,SAACC,GAAD,8CAAe,WAAO5B,GAAP,eAAAiB,EAAA,+EAEhBC,EAAWC,IAAX,mBAA2BS,IAFX,OAEjC1B,EAFiC,OAGvCF,EAAS,CAAES,KAAM3C,EAAe4C,QAASR,EAASC,OAHX,gDAKvCH,EAASD,GAAa,EAAD,KALkB,yDAAf,uDAoCf8B,GAAa,SAACC,GAAD,8CAAgB,WAAO9B,EAAU+B,GAAjB,iBAAAd,EAAA,sEAE9Be,EAAgBD,IAAWE,MAA3BD,YAF8B,SAGfd,EAAWgB,KAAK,SAAhB,2BAClBJ,GADkB,IAErBE,YAAaA,EAAYG,MALW,OAGhCjC,EAHgC,OAOtCF,EAAS,CAAES,KAAM1C,EAAa2C,QAASR,EAASC,OAPV,gDAStCH,EAASD,GAAa,EAAD,KATiB,yDAAhB,yDA0EbqC,GACX,SAACN,EAAYF,GAAb,8CAA2B,WAAO5B,EAAU+B,GAAjB,mBAAAd,EAAA,sDACzBjB,EAAS,CAAES,KAAMnC,IACjB,IACU0D,EAAgBD,IAAWE,MAA3BD,aACFK,EAAgBN,IAAWO,SAASV,IAEvBW,QAAQC,SACzBV,EAAWW,QAAS,GAOtBX,EAAWY,KAAOZ,EAAWY,KAAK,IAG5BC,EAAS,IAAIC,YAGZC,OAAS,SAACC,IAEM,IAAKC,OAAOC,cAC/BD,OAAOE,qBAGIC,gBAAgBJ,EAAMK,OAAOC,OAA1C,+BAAAnC,EAAA,MAAkD,WAAOoC,GAAP,2BAAApC,EAAA,sDAahD,IAASqC,KAXHC,EAAWC,SAASH,EAAOE,UAE3BE,EAJ0C,2BAK3C3B,GAL2C,IAM9CE,YAAaA,EAAYG,GACzBuB,QAAS9B,EACT2B,aAGII,EAAW,IAAIC,SAELH,EACdE,EAASE,OAAOP,EAAKG,EAAWH,IAdc,gBAiBzBpC,EAAWgB,KAAK,WAAYyB,EAAU,CAC3D7G,QAAS,CAAE,eAAgB,yBAlBmB,QAiB1CoD,EAjB0C,QAqBnCC,KAAKsC,QACZJ,EAAcE,QAAQC,SAClBsB,EAAazB,EAAcE,QAAQwB,KACvC,SAAC5B,GAAD,OAAQJ,IAAWQ,QAAQJ,OAEvB6B,EAAYF,EAAWG,MAAK,SAACC,GAAD,OAAOA,EAAEzB,WACjCA,QAAS,EACnBzC,EACEmE,GACEC,KAAEC,KAAKL,EAAW,OAAQ,WAAY,UACtCA,EAAU7B,GACVP,KAOR5B,EAAS,CACPS,KAAMrC,EACNsC,QAAS,CAAE4D,OAAQpE,EAASC,KAAMuD,QAAS9B,KAzCG,2CAAlD,wDA+CFe,EAAO4B,QAAU,SAACzB,GAChBzC,QAAQD,MAAM,sCAAuC0C,IAIvDH,EAAO6B,kBAAkB1C,EAAWY,MACpC,MAAO1F,GACPgD,EAASD,GAAa/C,IAhFC,2CAA3B,yDAiGWyH,GACX,SAAC3C,GAAD,8CAAgB,WAAO9B,EAAU+B,GAAjB,iBAAAd,EAAA,sEAEJe,EAAgBD,IAAWE,MAA3BD,YAFI,SAGWd,EAAWgB,KAAK,iBAAhB,2BAClBJ,GADkB,IAErBE,YAAaA,EAAYG,MALf,OAGNjC,EAHM,OAOZF,EAAS,CACPS,KAAMzC,EACN0C,QAAS,CACPgE,aAAcxE,EAASC,KACvBwE,SAAU7C,EAAW8C,cAXb,gDAeZ5E,EAASD,GAAa,EAAD,KAfT,yDAAhB,yDAkEW8E,GACX,SADWA,EACV/C,EAAYF,EAAWF,GAAxB,8CAAoC,WAAO1B,EAAU+B,GAAjB,yBAAAd,EAAA,sEAExBe,EAAgBD,IAAWE,MAA3BD,aACF8C,EAAc/C,IAAWO,SAASV,IACxBmD,UACdjD,EAAWiD,SAAU,GALS,SAOT7D,EAAW8D,MAAX,oBAA8BpD,GAA9B,2BAClBE,GADkB,IAErBE,YAAaA,EAAYG,MATK,QAO1BjC,EAP0B,QAWnBC,KAAK4E,UAAYD,EAAYC,UAClCE,EAAclD,IAAWmD,OAAOxD,GAChCyD,EAAcF,EAAY3C,SAASyB,KACvC,SAAC5B,GAAD,OAAQJ,IAAWO,SAASH,OAExBiD,EAAaD,EAAYlB,MAAK,SAACoB,GAAD,OAAOA,EAAEN,YAClCA,SAAU,EACrB/E,EACE6E,EACET,KAAEC,KAAKe,EAAY,OAAQ,QAAS,WACpCA,EAAWjD,GACXT,KAMN1B,EAAS,CACPS,KAAM9B,EACN+B,QAAS,CAAEgD,QAASxD,EAASC,KAAMmF,MAAO5D,KA9BZ,kDAiChC1B,EAASD,GAAa,EAAD,KAjCW,0DAApC,yDAqCWoE,GACX,SADWA,EACVrC,EAAYyD,EAAU3D,GAAvB,8CAAqC,WAAO5B,EAAU+B,GAAjB,2BAAAd,EAAA,kEAEzBe,EAAgBD,IAAWE,MAA3BD,aACFwD,EAAazD,IAAWQ,QAAQgD,IACvB9C,SACbX,EAAWW,QAAS,IAElBX,EAAWY,OAAQZ,EAAWY,KAAKF,OAPN,iBAQ/BV,EAAWY,KAAOZ,EAAWY,KAAK,IAG5BC,EAAS,IAAIC,YAGZC,OAAS,SAACC,IAEM,IAAKC,OAAOC,cAC/BD,OAAOE,qBAGIC,gBAAgBJ,EAAMK,OAAOC,OAA1C,+BAAAnC,EAAA,MAAkD,WAAOoC,GAAP,6BAAApC,EAAA,sDAYhD,IAASqC,KAVHC,EAAWC,SAASH,EAAOE,UAE3BE,EAJ0C,2BAK3C3B,GAL2C,IAM9CE,YAAaA,EAAYG,GACzBoB,aAGII,EAAW,IAAIC,SAELH,EACdE,EAASE,OAAOP,EAAKG,EAAWH,IAbc,gBAgBzBpC,EAAW8D,MAAX,mBACTO,GACZ5B,EACA,CACE7G,QAAS,CAAE,eAAgB,yBApBiB,QAgB1CoD,EAhB0C,QAwBnCC,KAAKsC,SAAW+C,EAAW/C,SAChCJ,EAAgBN,IAAWO,SAASV,GACpCkC,EAAazB,EAAcE,QAAQwB,KACvC,SAAC5B,GAAD,OAAQJ,IAAWQ,QAAQJ,OAEvB6B,EAAYF,EAAWG,MAAK,SAACC,GAAD,OAAOA,EAAEzB,WACjCA,QAAS,EACnBzC,EACEmE,EACEC,KAAEC,KAAKL,EAAW,OAAQ,WAAY,UACtCA,EAAU7B,GACVP,KAKN5B,EAAS,CAAES,KAAM7B,EAAa8B,QAASR,EAASC,OAxCA,2CAAlD,wDA6CFwC,EAAO4B,QAAU,SAACzB,GAChBzC,QAAQD,MAAM,sCAAuC0C,IAIvDH,EAAO6B,kBAAkB1C,EAAWY,MAtEL,yCAwERxB,EAAW8D,MAAX,mBAA6BO,GAA7B,2BAClBzD,GADkB,IAErBE,YAAaA,EAAYG,MA1EI,SAwEzBjC,EAxEyB,QA4ElBC,KAAKsC,SAAW+C,EAAW/C,SAChCJ,EAAgBN,IAAWO,SAASV,GACpCkC,EAAazB,EAAcE,QAAQwB,KACvC,SAAC5B,GAAD,OAAQJ,IAAWQ,QAAQJ,OAEvB6B,EAAYF,EAAWG,MAAK,SAACC,GAAD,OAAOA,EAAEzB,WACjCA,QAAS,EACnBzC,EACEmE,EACEC,KAAEC,KAAKL,EAAW,OAAQ,WAAY,UACtCA,EAAU7B,GACVP,KAKN5B,EAAS,CAAES,KAAM7B,EAAa8B,QAASR,EAASC,OA5FjB,0DA+FjCH,EAASD,GAAa,EAAD,KA/FY,0DAArC,yDA6JW0F,GAAa,SAACjE,GAAD,8CAAY,WAAOxB,EAAU+B,GAAjB,iBAAAd,EAAA,6DAC5Be,EAAgBD,IAAWE,MAA3BD,YAD4B,kBAGXd,EAAWgB,KAAK,gBAAiB,CACtDV,SACAQ,YAAaA,EAAYG,KALO,QAG5BjC,EAH4B,QAOzBC,KAAKuF,UAAUC,SAAQ,SAACjE,GAC/B1B,EAAS4F,GAAYlE,EAASxB,EAASC,KAAKgC,QAE9CnC,EAAS,CAAES,KAAM3B,EAAa4B,QAASR,EAASC,OAVd,gDAYlCH,EAASD,GAAa,EAAD,KAZa,yDAAZ,yDAgBb6F,GAAc,SAAClE,EAASF,GAAV,8CAAqB,WAAOxB,EAAU+B,GAAjB,mBAAAd,EAAA,6DACtCe,EAAgBD,IAAWE,MAA3BD,YADsC,kBAGrBd,EAAWgB,KAAK,iBAAkB,CACvDR,UACAF,SACAQ,YAAaA,EAAYG,KANiB,QAGtCjC,EAHsC,QAQnCC,KAAKmC,SAASqD,SAAQ,SAAC/D,GAC9B5B,EAAS6F,GAAcjE,EAAW1B,EAASC,KAAKgC,QAE5C2D,EAAYC,OAAOC,OAAOjE,IAAW+D,WACrBC,OAAOC,OAAOjE,IAAWkE,eAAeC,QAC5D,SAACC,GAAD,OAASA,EAAIb,QAAU5D,KAEXiE,SAAQ,SAACQ,GACrB,IAAMxB,EAAWmB,EAAU7B,MAAK,SAACmC,GAAD,OAAQA,EAAGC,MAAMC,SAASH,EAAIhE,OAC9DnC,EAASuG,GAAmBJ,EAAIhE,GAAIwC,EAASxC,QAE/CnC,EAAS,CACPS,KAAMxB,EACNyB,QAAS,CAAE4E,MAAOpF,EAASC,KAAMqG,KAAMhF,KArBG,kDAwB5CxB,EAASD,GAAa,EAAD,KAxBuB,0DAArB,yDA4Bd8F,GACX,SAACjE,EAAWF,GAAZ,8CAAwB,WAAO1B,EAAU+B,GAAjB,uBAAAd,EAAA,6DACde,EAAgBD,IAAWE,MAA3BD,YADc,kBAGGd,EAAWgB,KAAK,mBAAoB,CACzDN,YACAF,UACAM,YAAaA,EAAYG,KANP,QAGdjC,EAHc,QAQPC,KAAK4E,UACVE,EAAclD,IAAWmD,OAAOxD,OAE9B+E,EAAoBxB,EAAY3C,SAAS4D,QAC7C,SAAC/D,GAAD,OAAQA,IAAOP,MAEKY,SACdkE,EACJ3E,IAAWO,SACTmE,EAAkBA,EAAkBjE,OAAS,KAEtCuC,SAAU,EACrB/E,EAAS2G,GAAcD,EAAYhF,IACnC1B,EACE6E,GACET,KAAEC,KAAKqC,EAAY,OAAQ,QAAS,WACpCA,EAAWvE,GACXT,KAIJ1B,EAAS2G,GAAc,KAAMjF,KAInCxB,EAASC,KAAKoC,QAAQoD,SAAQ,SAACJ,GAC7BvF,EAAS4G,GAAarB,EAAUrF,EAASC,KAAKgC,GAAIT,OAEpD1B,EAAS,CACPS,KAAMvB,EACNwB,QAAS,CAAEgD,QAASxD,EAASC,KAAMmF,MAAO5D,KAtCxB,kDAyCpB1B,EAASD,GAAa,EAAD,KAzCD,0DAAxB,yDA6CW6G,GACX,SAACrB,EAAU3D,EAAWF,GAAtB,8CAAkC,WAAO1B,EAAU+B,GAAjB,uBAAAd,EAAA,6DACxBe,EAAgBD,IAAWE,MAA3BD,YADwB,kBAGPd,EAAWgB,KAAK,kBAAmB,CACxDqD,WACA3D,YACAI,YAAaA,EAAYG,KANG,QAGxBjC,EAHwB,QAQjBC,KAAKsC,SACVJ,EAAgBN,IAAWO,SAASV,OAElCiF,EAAmBxE,EAAcE,QAAQ2D,QAC7C,SAAC/D,GAAD,OAAQA,IAAOoD,MAEI/C,SACbsE,EACJ/E,IAAWQ,QAAQsE,EAAiBA,EAAiBrE,OAAS,KACtDC,QAAS,EACnBzC,EAAS+G,GAAaD,EAAU3E,GAAIT,IACpC1B,EACEmE,GACEC,KAAEC,KAAKyC,EAAW,OAAQ,WAAY,UACtCA,EAAU3E,GACVP,KAIJ5B,EAAS+G,GAAa,KAAMrF,KAIlC1B,EAAS,CACPS,KAAMtB,EACNuB,QAAS,CAAE4D,OAAQpE,EAASC,KAAMuD,QAAS9B,KAjCf,gDAoC9B5B,EAASD,GAAa,EAAD,KApCS,yDAAlC,yDAwDWwG,GACX,SAACS,EAAgBpC,GAAjB,8CAAgC,WAAO5E,EAAU+B,GAAjB,iBAAAd,EAAA,6DACtBe,EAAgBD,IAAWE,MAA3BD,YADsB,kBAGLd,EAAWgB,KAAK,wBAAyB,CAC9D8E,iBACApC,aACA5C,YAAaA,EAAYG,KANC,OAGtBjC,EAHsB,OAQ5BF,EAAS,CACPS,KAAMzB,EACN0B,QAAS,CAAEgE,aAAcxE,EAASC,KAAMwE,SAAUC,KAVxB,gDAa5B5E,EAASD,GAAa,EAAD,KAbO,yDAAhC,yDAiBWkH,GAAY,WACvB,MAAO,CAAExG,KAAMpB,IAOJ6H,GAAa,SAACC,GAAD,OAAU,SAACnH,GACnC,IAAMoH,EAAa,CACjB9B,MAAO6B,EAAK7B,MACZ5B,QAASyD,EAAKzD,QAAQ2D,KACtBC,KAAMH,EAAK7C,OAAOgD,KAClB/D,SAAU4D,EAAK7C,OAAOf,SACtBgE,MAAOJ,EAAK7C,OAAOnC,IAGrBnC,EAAS,CACPS,KAAMlB,GACNmB,QAAS,CAAEyG,KAAMC,EAAYI,OAAQL,EAAKX,UAkNjCG,GAAgB,SAACjD,EAAShC,GACrC,MAAO,CAAEjB,KAAMb,GAAgBc,QAAS,CAAEgD,UAAShC,aAGxCqF,GAAe,SAACzC,EAAQ5C,GACnC,MAAO,CAAEjB,KAAMZ,GAAea,QAAS,CAAE4D,SAAQ5C,a,QC59BpC+F,gBANS,SAAAC,GACpB,MAAO,CACHtH,MAAOsH,EAAMtH,MAAMA,SAIa,CAAEI,eAA3BiH,EA5BD,SAAC,GAA2B,IAAzBrH,EAAwB,EAAxBA,MAAOI,EAAiB,EAAjBA,WAQpB,OANAmH,qBAAU,WACN9G,GAAQ+G,QAAO,SAAAC,GACXrH,EAAW,WAEhB,CAACK,KAECT,EAKD,uBAAK0H,UAAU,QAAQC,QAAS,kBAAMvH,EAAW,OAAjD,UACI,sBAAKsH,UAAU,UAAf,eACC1H,EACD,sBAAK0H,UAAU,UAAf,kBAPG,Q,8GCVTE,G,oDAEF,WAAYC,GAAQ,IAAD,+BACf,cAAMA,IAIVP,MAAQ,CAAEQ,YAAY,EAAOC,eAAgB,MAL1B,EAuBnBC,mBAAqB,SAACC,GAClBA,EAAEC,mBAxBa,EA2BnBC,UAAY,SAACF,GACL,EAAKG,IAAIzD,SAAW,EAAKyD,IAAIzD,QAAQ0D,SAASJ,EAAElF,SAGhD,EAAKuE,MAAMQ,YACX,EAAKQ,SAAS,CAAER,YAAY,KAhCjB,EAoCnBS,YAAc,SAACC,GACX,OAAOA,EAAMC,QAAQ9E,KAAI,SAAA+E,GACrB,OACI,yBAEIC,MAAOD,EAAOC,MAFlB,SAIKD,EAAOE,SAHHF,EAAOC,WAxCT,EAiDnBE,OAAS,SAACZ,EAAGa,GACT,IAAMxG,EAAO2F,EAAElF,OAAOgG,MAAM,IAE5BC,EADqBF,EAAbE,UACC1G,IApDM,EAuDnBwG,MAAQ,SAACN,GACL,IAAIS,EAAa,GACE,SAAfT,EAAMnI,OACN4I,EAAa,YAEE,aAAfT,EAAMnI,OACN4I,EAAa,YAEE,UAAfT,EAAMnI,OACN4I,EAAa,cAGjB,IAAMC,EACF,sBAAKxB,UAAU,cAAf,SACCc,EAAMW,KAAKC,SAAYZ,EAAMW,KAAKnJ,OAAS,+BAAIwI,EAAMW,KAAKnJ,MAAM,gDAGrE,MAAmB,SAAfwI,EAAMnI,aACCmI,EAAMM,MAAMH,MACZ,uCACFO,EACD,kDACQV,EAAMM,OADd,IAEIzI,KAAK,OACLqH,UAAU,YACVmB,OAAQ,SAACZ,GAAD,OAAO,EAAKY,OAAOZ,EAAGO,EAAMM,eAItB,WAAfN,EAAMnI,KACN,uCACF6I,EACD,mDACQV,EAAMM,OADd,IAEIO,UAAWb,EAAMa,UAFrB,SAIKb,EAAMC,QAAU,EAAKF,YAAYC,GAAS,WAI5C,uCACFU,EACD,kDACQV,EAAMM,OADd,IAEIO,UAAWb,EAAMa,UACjBhJ,KAAMmI,EAAMnI,KACZqH,UAAWuB,SArGR,EA2GnBK,SAAW,SAAAX,GACP,OAAOA,OAAQY,EAAY,YA5GZ,EA+GnBC,WAAa,WAET,OAAO,EAAK3B,MAAM4B,OAAO9F,KAAI,SAAC6E,EAAOkB,GACjC,IAAML,EAAkB,IAANK,EACdC,EAAO,EAAKb,MAIhB,MAHmB,aAAfN,EAAMnI,OACNsJ,EAAO,YAEJ,iCACH,mCAAQnB,EAAMoB,MAAd,QACA,eAACC,GAAA,EAAD,CACI5C,KAAMuB,EAAMvB,KACZ6C,UAAWH,EACXN,UAAWA,EACXhJ,KAAMmI,EAAMnI,KACZ0J,SAAUvB,EAAMc,SAAW,EAAKA,SAAW,KAC3Cb,QAASD,EAAMC,QANnB,SAQKD,EAAMC,QAAU,EAAKF,YAAYC,GAAS,SAVlCA,EAAMoB,WAvHZ,EAwInBI,WAAa,SAACtI,GACV,EAAKmG,MAAMoC,SAASvI,GACpB,EAAK4G,SAAS,CAAER,YAAY,IAC5B,EAAKD,MAAMqC,SA3II,EA8InBC,QAAU,WACN,GAAI,EAAK7C,MAAMQ,WAAY,CACvB,IAAMsC,EAAW,EAAKvC,MAAMuC,SAAW,EAAKvC,MAAMuC,SAAW,GAC7D,OAAO,qCACH,uBAAK1C,UAAS,kBAAa0C,GAAYzC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAAvD,UACI,qBAAIR,UAAU,gBAAd,SAA+B,EAAKG,MAAM3C,QAC1C,wBAAM+E,SAAY,EAAKpC,MAAMwC,aAAa,EAAKL,YAA/C,UACK,EAAKR,aACN,sBAAK9B,UAAU,yBAAf,SACI,yBAAQA,UAAU,gBAAgBrH,KAAK,SAAvC,4BAvJL,EA+JnBiK,MAAQ,SAACrC,GACLA,EAAEC,kBACE,EAAKE,IAAIzD,SAAW,EAAKyD,IAAIzD,UAAYsD,EAAElF,SAG3C,EAAKuE,MAAMQ,WACX,EAAKQ,SAAS,CAAER,YAAY,IAE5B,EAAKQ,SAAS,CAAER,YAAY,MArKhC,EAAKM,IAAMmC,IAAMC,YAFF,E,uDAOnB,SAAmBC,EAAWC,IACG,IAAzBA,EAAU5C,aAAkD,IAA1B6C,KAAKrD,MAAMQ,YAC7C8C,SAASC,iBAAiB,QAASF,KAAKxC,UAAW,CAAC2C,SAAS,IAC7DF,SAASC,iBAAiB,UAAWF,KAAK3C,mBAAoB,CAAC8C,SAAS,MACxC,IAAzBJ,EAAU5C,aAAiD,IAA1B6C,KAAKrD,MAAMQ,aACnD8C,SAASG,oBAAoB,QAASJ,KAAKxC,UAAW,CAAC2C,SAAS,IAChEF,SAASG,oBAAoB,UAAWJ,KAAK3C,mBAAoB,CAAC8C,SAAS,O,kCAKnF,WACIF,SAASG,oBAAoB,QAASJ,KAAKxC,UAAW,CAAC2C,SAAS,IAChEF,SAASG,oBAAoB,UAAWJ,KAAK3C,mBAAoB,CAAC8C,SAAS,M,oBAwJ/E,WAEI,OAAO,qCACH,uBAAKpD,UAAU,MAAMC,QAASgD,KAAKL,MAAOlC,IAAKuC,KAAKvC,IAApD,UACI,sBAAK4C,IAAKL,KAAK9C,MAAMoD,QACpBN,KAAKR,mB,GAnLEI,IAAMW,WA0LfC,gBAAU,CAAEC,KAAM,QAAlBD,CAA4BvD,IC3LrCyD,G,2KAEF,WACIT,SAASU,cAAc,cAAcC,UAAUC,IAAI,kB,kCAEvD,WACIZ,SAASU,cAAc,cAAcC,UAAUE,OAAO,kB,oBAG1D,WACI,OAAOC,IAASC,aACZ,sBAAKhE,QAASgD,KAAK9C,MAAM+D,UAAWlE,UAAU,mBAA9C,SACI,uBACIC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAChBR,UAAU,YAFd,UAII,sBAAKA,UAAU,cAAf,SACKiD,KAAK9C,MAAMgE,UAEhB,+BACKlB,KAAK9C,MAAMiE,eAIxBlB,SAASU,cAAc,e,GAxBff,IAAMW,WA6BXG,MC+BAU,GA7DM,SAAC,GAA+B,IAA7B9B,EAA4B,EAA5BA,SAAU+B,EAAkB,EAAlBA,YAE9B,EAA8BC,oBAAS,GAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAkDA,OACI,iCACI,sBAAKnB,IAAI,qBAAqBtD,UAAU,SAASC,QARzC,SAACM,GACbA,EAAEC,kBACFiE,GAAW,MAOND,GAtBD,eAAC,GAAD,CACIL,QA7BF,qBAAN,OAA4BG,EAA5B,MA8BQF,QAzBJ,uCACI,yBACIpE,UAAU,eACVC,QAAS,WACLsC,IACAkC,GAAW,IAJnB,oBASA,yBACIzE,UAAU,eACVC,QAAS,kBAAMwE,GAAW,IAF9B,wBAgBAP,UAAW,SAAA3D,GACPA,EAAEC,kBACFiE,GAAW,UCtChB,YAAAC,GAAmB,IAExBC,EAFuB,oDAIzB,WAAYxE,GAAQ,IAAD,+BACf,cAAMA,IAGVP,MAAQ,CAAEgF,YAAY,GAJH,EAenBC,aAAe,WACX,EAAKC,aAhBU,EAJM,sDAUzB,WACI7B,KAAK6B,cAXgB,uBAuBzB,WACQ7B,KAAK9C,MAAM4E,MAAQ9B,KAAK9C,MAAMjG,aAAe+I,KAAK9C,MAAM4E,KAAK5K,MAAMqE,SAASyE,KAAK9C,MAAMjG,YAAYG,KACnG4I,KAAKrC,SAAS,CAAEgE,YAAY,MAzBX,oBA6BzB,WACI,OAAO,eAACF,EAAD,2BAAoBzB,KAAK9C,OAAzB,IAAgCyE,WAAY3B,KAAKrD,MAAMgF,WAAYC,aAAc5B,KAAK4B,oBA9BxE,GAEGhC,IAAMW,WAyCtC,OAAO7D,aAPiB,SAAAC,GACpB,MAAO,CACHmF,KAAMnF,EAAMoF,KAAKD,KACjB7K,YAAa0F,EAAMzF,MAAMD,eAI1ByF,CAAyBgF,ICyFrBM,GArIG,SAAC,GAAuI,IAArIC,EAAoI,EAApIA,aAAcC,EAAsH,EAAtHA,SAAUC,EAA4G,EAA5GA,SAAUC,EAAkG,EAAlGA,YAAaC,EAAqF,EAArFA,YAAaC,EAAwE,EAAxEA,gBAAiBC,EAAuD,EAAvDA,iBAAkBC,EAAqC,EAArCA,mBAAoBC,EAAiB,EAAjBA,WAEpI,EAA8CnB,oBAAS,GAAvD,oBAAOoB,EAAP,KAAwBC,EAAxB,KAEMC,EAAcC,iBAAO,MAE3BjG,qBAAU,WACF8F,EACAzC,SAASC,iBAAiB,QAAS4C,EAAa,CAAC3C,SAAS,IAE1DF,SAASG,oBAAoB,QAAS0C,EAAa,CAAC3C,SAAS,MAElE,CAACuC,IAEJ,IAAMK,EAAQ,WACV,IAAIA,EAOJ,OALIA,EADsB,IAAtBb,IAAWzK,OACN,YAAQ0K,EAAR,KAEA,UAAMD,IAAWzK,OAAS,EAA1B,YAA+B0K,EAA/B,MAIL,8BAAKY,KAIPC,EAAa,WACf,GAAIf,EAAajI,SAAWiI,EAAavK,OACrC,OACI,sBAAKqF,UAAU,UAAf,sBAON+F,EAAc,SAAAxF,GAEZsF,EAAY5I,SAAW4I,EAAY5I,QAAQ0D,SAASJ,EAAElF,SAItDsK,GACAC,GAAmB,IAIrBM,EAAiB,WACnB,GAAIP,EAEA,OAAOR,IAAWlJ,KAAI,SAAA+F,GAClB,IAAM/E,EAAU+E,EAAE/E,SAAW+E,EAAErH,OAAS,uBAAMqF,UAAU,eAAhB,wBAAmD,KAC3F,OAAO,uBACHA,UAAU,gBACVC,QAAS,WACLqF,EAAYtD,GACZ4D,GAAmB,IAJpB,UAQEP,EAAYrD,GACZ/E,IAHA+E,EAAE3H,QA4DvB,OACI,uBACI2F,UAAS,qBAA6B,WAAboF,EAAwB,SAAW,IADhE,UAnDiB,WACjB,GAAIF,EACA,OACI,uBAAKlF,UAAU,iBAAf,UACI,uBAAKA,UAAU,gBAAf,UACKgG,IACAC,OAEL,uBAAKjG,UAAU,qBAAf,UACI,uBAAKA,UAAU,WAAWU,IAAKmF,EAA/B,UACI,yBACI7F,UAAU,UACVC,QAAS,kBAAM2F,GAAoBD,IAFvC,SAIKN,EAAYH,KAEjB,sBAAKlF,UAAU,mBAAf,SACKkG,SAGRR,GAAcA,OAInB,uBAAK1F,UAAU,eAAf,UACI,sBAAKA,UAAU,qBAAf,oBACA,6BACKkF,EAAaiB,OAASjB,EAAakB,iBAMpD,IAAIC,EAAa,GAOjB,MANiB,YAAbjB,IACAiB,EAAa,QAEA,WAAbjB,IACAiB,EAAa,WAGb,sBAAKrG,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,SACI,2CAAWoF,EAAX,sBAAiCiB,EAAjC,cAWXC,GACD,uBAAKtG,UAAU,iBAAf,UACKuF,IACAL,GAAgBM,IAChBN,GAAgBO,WCsFlB9F,eAAQ,KAAM,CAC3BV,gBACA3E,gBACA+B,cACAyC,gBACAM,eALaO,CAMZ4G,IA5MY,SAAC,GAWT,IAVL9L,EAUI,EAVJA,QACAwE,EASI,EATJA,aACAzB,EAQI,EARJA,MACAoH,EAOI,EAPJA,WACAhJ,EAMI,EANJA,QACAtB,EAKI,EALJA,aACA+B,EAII,EAJJA,WACAyC,EAGI,EAHJA,aACAO,EAEI,EAFJA,KACAD,EACI,EADJA,WAEA,EAA4CmF,mBAAS/G,EAAMgJ,gBAA3D,oBAAOA,EAAP,KAAuBC,EAAvB,KAEA,EAAwClC,oBAAS,GAAjD,oBAAOmC,EAAP,KAAqBC,EAArB,KAIA9G,qBAAU,WACJ2G,GAAkBA,IAAmBhJ,EAAMgJ,gBAC7CvH,EAAauH,EAAgBhJ,EAAMnD,MAGpC,CAACmM,IAEJ3G,qBAAU,WACJ2G,GAAkBA,IAAmBhJ,EAAMgJ,gBAC7CvH,EAAazB,EAAMgJ,eAAgBhJ,EAAMnD,MAE1C,CAACmD,EAAMgJ,iBAEV3G,qBAAU,WACR4G,EAAkBjJ,EAAMgJ,gBACxBG,GAAgB,KACf,CAACnJ,EAAMgJ,iBAEV,IAAMI,EAAc,SAACpH,GACnB,OAAOqH,KAAOC,IAAItH,GAAMuH,OAAO,aAoB3BC,EAAe,SAAChN,GACpBqC,EAAWrC,EAAYwM,EAAenM,GAAIuB,EAAQvB,IAClDsM,GAAgB,IAoHlB,OAAID,EACK,sBAAK1G,UAAU,oBAAf,SAhHL,uBAAKA,UAAU,eAAf,UACE,8CACA,sBAAKA,UAAU,WAAWsD,IAAI,8BAgH9B1H,EAEA,eAAC,GAAD,CACEsJ,aAAcsB,EACdpB,SAAS,SACTD,SA3IS,WACf,GAAIqB,EACF,OAAO/L,EACJ2D,QAAO,SAAChC,GAAD,OAAOA,GAAKA,EAAE/B,KAAOmM,EAAenM,MAC3C4M,MAAK,SAAC9N,EAAGiD,GAAJ,OAAWjD,EAAEqG,KAAOpD,EAAEoD,KAAO,GAAK,MAwItC6F,YAhJc,SAACjJ,GACrB,MAAM,GAAN,OAAUwK,EAAYxK,EAAEoD,QAgJlB8F,YAAamB,EACblB,gBAnHgB,WACtB,GAAIX,EACF,OACE,eAAC,GAAD,CACEpH,MAAK,0BAAqB5B,EAAQ2D,MAClCgE,MAAM,iBACNxB,OAAQ,CACN,CACEG,MAAO,OACP3C,KAAM,OACN5G,KAAM,OACNiJ,UAAU,GAEZ,CACEM,MAAO,OACP3C,KAAM,OACN5G,KAAM,OACNiJ,UAAU,GAEZ,CACEM,MAAO,WACP3C,KAAM,WACN5G,KAAM,YAER,CACEuJ,MAAO,iBACP3C,KAAM,SACN5G,KAAM,aAGV4J,SAAU,SAACvI,GAAD,OAjDE,SAACA,GACnBM,EAAaN,EAAY4B,EAAQvB,IACjCsM,GAAgB,GA+CgBO,CAAYlN,IACtC0J,KAAI,qBAAgBlG,EAAMnD,IAC1B8M,cAAe,CAAExM,QAAQ,GACzB+H,SAAS,gBAmFT8C,iBA7EiB,WACvB,GAAIZ,EACF,OACE,eAAC,GAAD,CACEpH,MAAO,mBACP+F,MAAM,kBACNxB,OAAQ,CACN,CACEG,MAAO,OACP3C,KAAM,OACN5G,KAAM,QAER,CACEuJ,MAAO,OACP3C,KAAM,OACN5G,KAAM,QAER,CACEuJ,MAAO,WACP3C,KAAM,WACN5G,KAAM,YAER,CACEuJ,MAAO,kBACP3C,KAAM,SACN5G,KAAM,aAGV4J,SAAUyE,EACVG,cAAa,2BACR7K,KAAEC,KAAKiK,EAAgB,WAAY,WAD3B,IAEXhH,KAAMqH,KAAOC,IAAIN,EAAehH,MAAMuH,OAAO,gBAE/CrD,KAAI,sBAAiBlG,EAAMnD,IAC3B+M,oBAAoB,EACpB1E,SAAS,gBA2CT+C,mBArCmB,WACzB,GAAIb,EACF,OACE,eAAC,GAAD,CACErC,SAAU,kBAAMzD,EAAa0H,EAAenM,GAAIuB,EAAQvB,GAAImD,EAAMnD,KAClEiK,YAAasC,EAAYJ,EAAehH,SAiCxCkG,WA3Be,WAGrB,OACE,sBACEpC,IAAI,mBACJtD,UAAU,YACVC,QAAS,kBAAMb,EAAWC,SAwBrB,SCpDEM,gBANS,SAAAC,GACpB,MAAO,CACHnF,QAASmF,EAAMnF,WAIiB,CAAEZ,gBAAcgF,iBAAewI,cR8DrE,SAACrN,EAAYJ,GAAb,8CAAyB,WAAO1B,EAAU+B,GAAjB,uBAAAd,EAAA,sEAEbe,EAAgBD,IAAWE,MAA3BD,aACFiD,EAAclD,IAAWmD,OAAOxD,IAErBY,SAASE,SACxBV,EAAWiD,SAAU,GANF,SASE7D,EAAWgB,KAAK,YAAhB,2BAClBJ,GADkB,IAErBE,YAAaA,EAAYG,GACzBmD,MAAO5D,KAZY,QASfxB,EATe,QAeRC,KAAK4E,SACZE,EAAY3C,SAASE,SACjB2C,EAAcF,EAAY3C,SAASyB,KACvC,SAAC5B,GAAD,OAAQJ,IAAWO,SAASH,OAExBiD,EAAaD,EAAYlB,MAAK,SAACoB,GAAD,OAAOA,EAAEN,YAClCA,SAAU,EACrB/E,EACE6E,GACET,KAAEC,KAAKe,EAAY,OAAQ,QAAS,WACpCA,EAAWjD,GACXT,KAOR1B,EAAS,CACPS,KAAMtC,EACNuC,QAAS,CAAEgD,QAASxD,EAASC,KAAMmF,MAAO5D,KAnCvB,kDAsCrB1B,EAASD,GAAa,EAAD,KAtCA,0DAAzB,yDQ9DoF8E,eAAagB,kBAApF4B,CAAqG4G,IAnJpG,SAAC,GAA4H,IAA1H/L,EAAyH,EAAzHA,SAAUC,EAA+G,EAA/GA,QAASZ,EAAsG,EAAtGA,aAAcgF,EAAwF,EAAxFA,cAAerB,EAAyE,EAAzEA,MAAO6J,EAAkE,EAAlEA,cAAezC,EAAmD,EAAnDA,WAAY7H,EAAuC,EAAvCA,YAAagB,EAA0B,EAA1BA,cAAesB,EAAW,EAAXA,KAE7H,EAA8CkF,mBAAS/G,EAAM8J,iBAA7D,oBAAOA,EAAP,KAAwBC,EAAxB,KACA,EAAoChD,mBAAS,MAA7C,oBAAOvI,EAAP,KAAmBwL,EAAnB,KAEA3H,qBAAU,WAEFyH,IAAoB9J,EAAM8J,kBAC1BzI,EAAcyI,EAAiB9J,EAAMnD,IACrCmN,EAAcF,EAAgB7M,QAAQwB,KAAI,SAAA5B,GAAE,OAAII,EAAQJ,OACxDR,EAAayN,EAAgBjN,OAElC,CAACiN,IAEJzH,qBAAU,WACFyH,GAEAE,EAAcF,EAAgB7M,QAAQwB,KAAI,SAAA5B,GAAE,OAAII,EAAQJ,SAE7D,CAACI,EAAS6M,IAGbzH,qBAAU,WACFyH,IAAoB9J,EAAM8J,iBAC1BC,EAAmB/J,EAAM8J,mBAE9B,CAAC9J,EAAM8J,kBAkGV,OACI,uCACI,eAAC,GAAD,CACIpC,aAAcoC,EACdlC,SAAS,UACTD,SAbK,WACb,OAAO3K,EAAS4D,QAAO,SAAAb,GAAC,OAAIA,EAAElD,KAAOiN,EAAgBjN,OAa7CgL,YAVW,SAAA9H,GACnB,MAAM,GAAN,OAAUA,EAAEgC,OAUJ+F,YAAaiC,EACbhC,gBA1FY,WACpB,GAAIX,EACA,OACI,eAAC,GAAD,CACIpH,MAAK,2BAAsBA,EAAMA,OACjC+F,MAAM,iBACNxB,OAAQ,CACJ,CACIG,MAAO,OACP3C,KAAM,OACN5G,KAAM,QACNiJ,UAAU,GAEd,CACIM,MAAO,QACP3C,KAAM,QACN5G,KAAM,YAEV,CACIuJ,MAAO,mBACP3C,KAAM,UACN5G,KAAM,aAGd4J,SAAU,SAACvI,GAAD,OAAgBqN,EAAcrN,EAAYwD,EAAMnD,KAC1DqJ,KAAI,sBAAiBlG,EAAMnD,IAC3B8M,cAAe,CAAElK,SAAS,GAC1BmK,oBAAoB,EACpB1E,SAAS,iBA+Db8C,iBAzDa,WACrB,GAAIZ,EACA,OAAO,eAAC,GAAD,CACHpH,MAAK,eAAU8J,EAAgB/H,MAC/BgE,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,OACP3C,KAAM,OACN5G,KAAM,SAEV,CACIuJ,MAAO,QACP3C,KAAM,QACN5G,KAAM,YAEV,CACIuJ,MAAO,mBACP3C,KAAM,UACN5G,KAAM,aAGd4J,SAAU,SAAAvI,GAAU,OAAI+C,EAAY/C,EAAYsN,EAAgBjN,GAAImD,EAAMnD,KAC1E8M,cAAe7K,KAAEC,KAAK+K,EAAiB,OAAQ,QAAS,WACxD5D,KAAI,uBAAkBlG,EAAMnD,IAC5B+M,oBAAoB,EACpB1E,SAAS,iBAgCT+C,mBA3Be,WACvB,GAAIb,EACA,OAAO,eAAC,GAAD,CACHrC,SAAU,kBAAMxE,EAAcuJ,EAAgBjN,GAAImD,EAAMnD,KACxDiK,YAAagD,EAAgB/H,UAlFnB,WAElB,GAAIvD,GAAcsL,EAEd,OACI,uCACI,sBAAKtH,UAAU,gBAAf,oBACA,eAAC,GAAD,CAAQvF,QAASuB,EAAYwB,MAAOA,EAAO5B,QAAS0L,EAAiBjI,KAAMA,OAoGlFoI,UC9DE9H,eAAQ,KAAM,CAAEP,cAAYsI,mBTstBT,SAACrI,GAAD,OAAU,SAACnH,EAAU+B,GAKrD,IAAMqF,EAAa,CACjB9B,MAAO6B,EAAK7B,MACZ5B,QAASyD,EAAKzD,QAAQ2D,KACtBC,KAAMH,EAAK7C,OAAOgD,KAClB/D,SAAU4D,EAAK7C,OAAOf,SACtBgE,MAAOJ,EAAK7C,OAAOnC,GACnBsN,SAAUtI,EAAKsI,UAGjBzP,EAAS,CACPS,KAAMlB,GACNmB,QAAS,CAAEyG,KAAMC,EAAYI,OAAQL,EAAKxC,cStuBiBsC,cAAhDQ,EA9EO,SAAC,GAA0D,IA2CzEiI,EAvCiBpI,EAJAH,EAAuD,EAAvDA,KAAMD,EAAiD,EAAjDA,WAAYiH,EAAqC,EAArCA,WAAYqB,EAAyB,EAAzBA,mBAEnD,EAA4BnD,oBAAS,GAArC,oBAAOsD,EAAP,KAAeC,EAAf,KAgDA,OALIF,EAAU,kCAMV,uBAAK5H,UAAU,iBAAf,UACI,sBAAKA,UAAU,sBAAf,SA5CY,SAAC+H,GACjB,IAAMC,EAAUC,KAAKC,MAAMH,EAAO,IAC5BI,EAAUF,KAAKC,MAAMH,EAAO,IAAM,GAAK,IAAME,KAAKC,MAAMH,EAAO,IAAME,KAAKC,MAAMH,EAAO,IAC7F,MAAM,GAAN,OAAUC,EAAV,YAAqBG,GAyCqBC,CAAY/I,EAAK7C,OAAOf,YAC9D,uBAAKuE,UAAU,sBAAf,WACM6H,GA7BN,uBAAK7H,UAAU,iBAAf,UACI,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,uBACf,sBAAKA,UAAU,0BAkBf,sBACIsD,IAAI,mBACJtD,UAAU,YACVC,QA5CD,SAACM,GACZA,EAAEC,kBACiB,SAAf6F,EACAjH,EAAWC,GACW,aAAfgH,GACPqB,EAAmBrI,IAwCXgJ,OAAQ,kBAAMP,GAAU,SAGhC,uBAAK9H,UAAU,yBAAf,UACI,6BAAIX,EAAKzD,QAAQ2D,OACjB,8BA5DSC,EA4DOH,EAAK7C,OAAOgD,KA3D7BqH,KAAOC,IAAItH,GAAMuH,OAAO,kBA6D3B,oBACI/G,UAAU,WACVC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAChB8H,KAAI,UAAKV,EAAL,+BAAmCvI,EAAK7C,OAAOnC,GAA/C,YAAqDkO,mBAAmBlJ,EAAK7B,MAAMA,QAH3F,SAMI,sBAAK8F,IAAI,iCC8KV3D,gBAZS,SAAAC,GACpB,MAAO,CACHpF,SAAUoF,EAAMpF,SAChBC,QAASmF,EAAMnF,QACf+N,KAAM5I,EAAMzF,MAAMD,YAClB8D,UAAW4B,EAAM5B,UACjBZ,OAAQwC,EAAMxC,OACdqC,MAAOG,EAAMH,MACbgJ,MAAO7I,EAAM6I,SAImB,CAAE9O,iBAAeE,gBAAcgF,iBAAeI,gBAActC,sBAAoB+L,UVyJtH,SAAC1O,EAAYJ,EAASF,GAAtB,8CAAiC,WAAOxB,EAAU+B,GAAjB,mBAAAd,EAAA,sEAErBe,EAAgBD,IAAWE,MAA3BD,YACJyO,EAAa3O,EAAW4O,KAHC,SAINxP,EAAW8D,MAAX,kBAA4BtD,GAA5B,2BAClBI,GADkB,IAErB6O,YAAanP,EACbQ,YAAaA,EAAYG,MAPE,OAIvBjC,EAJuB,OAS7BF,EAAS,CACPS,KAAM/B,EACNgC,QAAS,CACP4E,MAAOpF,EAASC,KAChBqG,KAAM,CAAEoK,IAAKH,EAAYI,IAAKrP,MAbL,gDAiB7BxB,EAASD,GAAa,EAAD,KAjBQ,yDAAjC,yDUzJiI6F,gBAApH6B,CAAmI4G,IAlPpI,SAAC,GAAsN,IAApN7H,EAAmN,EAAnNA,KAAMlB,EAA6M,EAA7MA,MAAOJ,EAAsM,EAAtMA,OAAQzD,EAA8L,EAA9LA,cAAea,EAA+K,EAA/KA,SAAUC,EAAqK,EAArKA,QAASZ,EAA4J,EAA5JA,aAAc+K,EAA8I,EAA9IA,WAAY4D,EAAkI,EAAlIA,KAAMxK,EAA4H,EAA5HA,UAAWa,EAAiH,EAAjHA,cAAeI,EAAkG,EAAlGA,aAActC,EAAoF,EAApFA,mBAAoB+L,EAAgE,EAAhEA,UAAW5K,EAAqD,EAArDA,YAAakL,EAAwC,EAAxCA,QAASvJ,EAA+B,EAA/BA,MAAOwJ,EAAwB,EAAxBA,WAAYR,EAAY,EAAZA,MAEpN,EAA4BlE,oBAAS,GAArC,oBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAsC5E,mBAAS,MAA/C,oBAAOlH,EAAP,KAAoB+L,EAApB,KACA,EAAoC7E,mBAAS,MAA7C,oBAAOvI,EAAP,KAAmBwL,EAAnB,KACA,EAAwBjD,mBAAS,MAAjC,oBAAOlF,EAAP,KAAagK,EAAb,KAEAxJ,qBAAU,WACNlG,EAAc6D,EAAMnD,MACrB,IAEHwF,qBAAU,WAENuJ,EAAe5L,EAAMhD,SAASyB,KAAI,SAAA5B,GAAE,OAAIG,EAASH,SAIlD,CAACG,IAEJqF,qBAAU,WAEN,GAAIxC,GAAeA,EAAY,GAAI,CAE/B,IAAIiM,EAEEnM,EAAcC,EAAOI,EAAMnD,IAE3BkP,EAAalM,EAAYpB,KAAI,SAAAsB,GAAC,OAAIA,EAAElD,MAErC8C,EAAYmK,iBAAoBiC,EAAW/K,SAASrB,EAAYmK,gBAAgBjN,IAE1E8C,EAAYmK,kBAIfgC,EAHC9O,EAAS2C,EAAYmK,gBAAgBjN,IAGpBG,EAAS2C,EAAYmK,gBAAgBjN,IAFrC,MAHtBiP,EAAkBjM,EAAYlB,MAAK,SAAAoB,GAAC,OAAIA,EAAEN,WAS9C4B,EAAcyK,EAAiB9L,EAAMnD,OAE1C,CAACgD,IAEJwC,qBAAU,WAEFrC,EAAM8J,iBAAmB9J,EAAM8J,gBAAgBjN,IAC/CR,EAAa2D,EAAM8J,gBAAgBjN,MAGxC,CAACmD,EAAM8J,kBAEVzH,qBAAU,WACFrC,EAAM8J,kBACF9J,EAAM8J,gBAAgB7M,QAAQ,GAC9B+M,EAAchK,EAAM8J,gBAAgB7M,QAAQwB,KAAI,SAAA5B,GAAE,OAAII,EAAQJ,OAE9B,OAAzBmD,EAAMgJ,iBAEbgB,EAAc,MACdvI,EAAa,KAAMzB,EAAMnD,QAGlC,CAACI,IAEJoF,qBAAU,WAGF,IAAI2J,EAFJxN,GAAcA,EAAW,IAIrBwB,EAAMgJ,gBAAkBxK,EAAWwC,SAAShB,EAAMgJ,gBAClDgD,EAAiBhM,EAAMgJ,gBAEvBgD,EAAiBxN,EAAWG,MAAK,SAAAC,GAAC,OAAIA,EAAEzB,UACxCsO,EAAWzL,EAAOgM,IAGlBA,IAAmBhM,EAAMgJ,gBAEzBvH,EAAauK,EAAgBhM,EAAMnD,KAIhCgF,GACPgK,EAAQ,QAGb,CAACrN,IAGJ6D,qBAAU,WACFrC,EAAMgJ,gBAAkBhJ,EAAM8J,iBAE9B+B,EAAQ,CACJ3K,OACAlB,MAAOJ,EAAOI,EAAMnD,IACpBuB,QAAS4B,EAAM8J,gBACf9K,OAAQgB,EAAMgJ,iBAGlBwC,EAAQ,CAAE3O,GAAImD,EAAMnD,GAAIoB,SAAU+B,EAAMgJ,eAAe/K,YAEhD4D,IAAS7B,EAAMgJ,iBACtB6C,EAAQ,MACRL,EAAQ,CAAE3O,GAAImD,EAAMnD,GAAIoB,SAAU,OAGvC,CAAC2B,EAAOI,EAAMnD,MAGjB,IAyFMoP,EAAQP,EAAS,aAAe,GAEhCjM,EAAUwC,EAAMiK,YAAcjK,EAAMiK,YAAYjK,MAAQ,KACxDC,EAASD,EAAMC,OAASD,EAAMC,OAAOrF,GAAK,KAE5CsP,EAAe,GAEf1M,GAAWO,EAAMgJ,iBACjBmD,EAAejK,IAAWhB,EAAKrE,IAAM4C,IAAYO,EAAMgJ,eAAenM,GAAK,eAAiB,IAGhG,IAAIuP,EAAOV,EAAS,OAAS,SAE7B,OACI,uBAAKlJ,UAAU,eAAf,UACI,sBAAKA,UAAS,oBAAe2J,EAAf,YAA+BT,EAAS,WAAa,IAAnE,SACI,uBAAKlJ,UAAU,SAASC,QAAS,kBAAMkJ,GAAWD,IAAlD,UACI,uBAAKlJ,UAAU,aAAf,UACI,sBAAKA,UAAS,gBAAWyJ,GAASnG,IAAG,4BACrC,8BAAK9F,EAAMA,WA5GH,WAExB,GAAI6B,EACA,OAAO,eAAC,GAAD,CAAeA,KAAMA,EAAMgH,WAAW,SA2GpCwD,GAtFK,WAClB,GAAIjF,EAAY,CACZ,IACMkF,EADgBtB,EAAKxK,UAAU/B,KAAI,SAAA5B,GAAE,OAAI2D,EAAU3D,MACnB4B,KAAI,SAAAqC,GACtC,GAAIA,EACA,MAAO,CAAE2C,MAAO3C,EAAGjE,GAAI6G,QAAS5C,EAAGiB,SAMrCwK,EAHYvB,EAAKC,MAClBrK,QAAO,SAAA4L,GAAC,OAAIA,IAAMtL,EAAKrE,MACvB4B,KAAI,SAAA5B,GAAE,OAAIoO,EAAMpO,MACS4B,KAAI,SAAA+N,GAC9B,GAAIA,EACA,MAAO,CAAE/I,MAAO+I,EAAE3P,GAAI6G,QAAS8I,EAAEzK,SAIzC,OADAwK,EAAYE,QAAQ,CAAEhJ,MAAO,KAAMC,QAAS,KAExC,uBAAKlB,UAAU,eAAf,UACKX,GAAQ,eAAC,GAAD,CACL7B,MAAM,oBACN+E,SAAU,SAAAvI,GAAU,OA9BhB,SAAAA,GACpB2C,EAAmB,2BACZ3C,GADW,IAEdwC,OAAQgB,EAAMgJ,eAAenM,GAC7BuB,QAAS4B,EAAM8J,gBAAgBjN,GAC/BmD,MAAOA,EAAMnD,MAyBuB6P,CAAgBlQ,IACxCuJ,MAAM,sBACNxB,OAAQ,CACJ,CACIpJ,KAAM,SACNoI,QAAS+I,EACTvK,KAAM,aACN2C,MAAO,aAGfwB,KAAI,0BAAqBlG,EAAMnD,IAC/B+M,oBAAoB,IAExB,eAAC,GAAD,CACI5J,MAAK,eAAUA,EAAMA,OACrB+F,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,QACP3C,KAAM,QACN5G,KAAM,QACNiJ,UAAU,GAEd,CACIM,MAAO,eACP3C,KAAM,OACN5G,KAAM,SACNoI,QAASgJ,IAGjBxH,SAAU,SAAAvI,GAAU,OAAI0O,EAAU1O,EAAYwD,EAAMnD,GAAIqE,EAAKrE,KAC7D8M,cAAe,CAAE3J,MAAOA,EAAMA,MAAOoL,KAAM,MAC3ClF,KAAI,qBAAgBlG,EAAMnD,IAC1B+M,oBAAoB,IAExB,eAAC,GAAD,CACI7E,SAAU,kBAAMzE,EAAYN,EAAMnD,GAAIqE,EAAKrE,KAC3CiK,YAAa9G,EAAMA,YA6BtB2M,QAGT,sBAAKnK,UAAS,4BAAuB4J,GAArC,SACKV,GAxGL,eAAC,GAAD,CAAS1O,SAAU6C,EAAaG,MAAOA,EAAO6B,KAAMA,aCoJjDM,gBATS,SAAAC,GACpB,MAAO,CACHxC,OAAQwC,EAAMxC,OACdoL,KAAM5I,EAAMzF,MAAMD,YAClBuO,MAAO7I,EAAM6I,SAKmB,CAAE1O,cAAYN,eAAa2Q,SXiH3C,SAACpQ,EAAYN,GAAb,8CAAwB,WAAOxB,EAAU+B,GAAjB,iBAAAd,EAAA,sEAEpCe,EAAgBD,IAAWE,MAA3BD,YAFoC,SAGrBd,EAAW8D,MAAX,iBAA2BxD,GAA3B,2BAClBM,GADkB,IAErBE,YAAaA,EAAYG,MALiB,OAGtCjC,EAHsC,OAO5CF,EAAS,CAAES,KAAMlC,EAAWmC,QAASR,EAASC,OAPF,gDAS5CH,EAASD,GAAa,EAAD,KATuB,yDAAxB,yDWjHqDoS,YX7E3E,SAACrQ,EAAYN,GAAb,8CAAwB,WAAOxB,EAAU+B,GAAjB,iBAAAd,EAAA,6DACde,EAAgBD,IAAWE,MAA3BD,YADc,kBAGGd,EAAWgB,KAAK,UAAhB,2BAClBJ,GADkB,IAErBE,YAAaA,EAAYG,GACzBqE,KAAMhF,KANY,OAGdtB,EAHc,OAQpBF,EAAS,CACPS,KAAMxC,EACNyC,QAAS,CAAE4E,MAAOpF,EAASC,KAAMqG,KAAMhF,KAVrB,gDAapBxB,EAASD,GAAa,EAAD,KAbD,yDAAxB,yDW6EwF0F,cAAY2M,SXwiB9E,SAAC5L,EAAM6L,GAC7B,MAAO,CAAE5R,KAAMd,GAAYe,QAAS,CAAE8F,OAAM6L,cWziB/B5K,CAAmG4G,IA5QrG,SAAC,GAAyG,IAAvG7H,EAAsG,EAAtGA,KAAMtB,EAAgG,EAAhGA,OAAQ3D,EAAwF,EAAxFA,YAAamL,EAA2E,EAA3EA,WAAY4D,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,MAAO2B,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,YAAa1M,EAA2B,EAA3BA,WAAY2M,EAAe,EAAfA,SAEnG,EAA4B/F,oBAAS,GAArC,oBAAO2E,EAAP,KAAeC,EAAf,KACA,EAA4C5E,mBAAS,MAArD,oBAAOiG,EAAP,KAAuBC,EAAvB,KACA,EAA0BlG,mBAAS,IAAnC,oBAAOmG,EAAP,KAAcC,EAAd,KAEMC,EAAgB9E,iBAAO,IAE7BjG,qBAAU,WACNyK,EAAS5L,EAAKrE,GAAI,QAClBZ,EAAYiF,EAAKrE,MAClB,IAEHwF,qBAAU,WACN4K,EAAkB/L,EAAKd,UAClB3B,KAAI,SAAA5B,GAAE,OAAI+C,EAAO/C,SACvB,CAAC+C,EAAQsB,IAEZ,IAAMuK,EAAa,SAACzL,EAAOhB,GAClBoO,EAAc3N,QAAQO,EAAMnD,MAC7BuQ,EAAc3N,QAAQO,EAAMnD,IAAM,IAAIwQ,KAAKrO,EAAOgD,QA4CpD+F,EAAkB,WACpB,GAAIX,EACA,OACI,uBAAK5E,UAAU,WAAf,UACI,4DAGA,eAAC,GAAD,CACIxC,MAAK,yBAAoBkB,EAAKa,MAC9BgE,MAAM,iBACNxB,OAAQ,CACJ,CACIG,MAAO,QACP3C,KAAM,QACN5G,KAAM,QACNiJ,UAAU,IAGlBW,SAAU,SAACvI,GACPqQ,EAAYrQ,EAAY0E,EAAKrE,IAC7B8O,GAAU,IAEdzF,KAAI,oBAAehF,EAAKrE,IACxBqI,SAAS,iBA6EvBsG,EAAU,SAAC8B,GACTJ,EAAMI,EAAMzQ,MAAQyQ,EAAMrP,UAC1BkP,EAAS,2BAAKD,GAAN,mBAAcI,EAAMzQ,GAAKyQ,EAAMrP,aA4DzCgO,EAAQP,EAAS,aAAe,GAChCU,EAAOV,EAAS,OAAS,SAE/B,OACI,uCACI,sBAAKlJ,UAAS,mBAAckJ,EAAS,WAAa,IAAMjJ,QAAS,kBAAMkJ,GAAWD,IAAlF,SACI,uBAAKlJ,UAAU,SAAf,UACI,uBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAS,gBAAWyJ,GAASnG,IAAG,2BACrC,8BAAK5E,EAAKa,UAGd,uBAAKS,UAAU,aAAf,UACI,uBAAKA,UAAU,aAAf,UAA6BtB,EAAKd,UAAUlD,OAA5C,YACA,sBAAKsF,UAAU,aAAf,SAhGI,WAGpB,IAAM+K,EAAQ9M,OAAOC,OAAOwM,GAAOM,QAAO,SAACC,EAAMC,GAC7C,OAAOD,EAAOC,IACf,GAEH,IAAKH,EACD,OAAO,KAGX,IAAM/C,EAAUC,KAAKC,MAAM6C,EAAQ,IAC7B5C,EAAUF,KAAKC,MAAM6C,EAAQ,IAAM,GAAK,IAAM9C,KAAKC,MAAM6C,EAAQ,IAAM9C,KAAKC,MAAM6C,EAAQ,IAChG,OACI,yCACQ/C,EADR,YACmBG,KAiFsBgD,QAEjC,uBAAKnL,UAAU,eAAf,UApJS,WACrB,GAAI4E,EAAY,CAEZ,IAAMwG,EAAW5C,EAAKC,MACjBxM,KAAI,SAAA5B,GAAE,OAAIoO,EAAMpO,MAChB4M,MAAK,SAAC9N,EAAGiD,GAAJ,OAAUjD,EAAEwO,SAAWvL,EAAEuL,UAAY,EAAI,KAC9C1L,KAAI,SAAA+N,GACD,GAAIA,EACA,MAAO,CAAE/I,MAAO+I,EAAErC,SAAUzG,QAAS8I,EAAErC,aAKnD,OACI,eAAC,GAAD,CACInK,MAAK,eAAUkB,EAAKa,MACpBgE,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,YACP3C,KAAM,OACN5G,KAAM,QACNiJ,UAAU,GACX,CACCM,MAAO,gBACP3C,KAAM,WACN5G,KAAM,SACNoI,QAASqK,IAGjB7I,SAAU,SAACvI,GAAD,OAAgBoQ,EAASpQ,EAAY0E,EAAKrE,KACpD8M,cAAe,CAAE5H,KAAMb,EAAKa,KAAMoI,SAAUjJ,EAAKiJ,UACjDjE,KAAI,oBAAehF,EAAKrE,IACxB+M,oBAAoB,KAoHf5B,GA9GM,WACvB,GAAIZ,EACA,OACI,eAAC,GAAD,CACIrC,SAAU,kBAAM5E,EAAWe,EAAKrE,KAChCiK,YAAa5F,EAAKa,OA0GbkG,WAIb,sBAAKzF,UAAS,uBAAkBkJ,EAAS,kBAAoB,IAA7D,SACKA,GA7BF,uCACF3D,IAlDA7G,EAAK6L,SAA4B,SAAjB7L,EAAK6L,QAuBL,SAAjB7L,EAAK6L,QAED,uBAAKvK,UAAU,WAAf,UACI,oDACA,sBACIA,UAAU,eACVC,QAAS,SAAAM,GACLA,EAAEC,kBACF8J,EAAS5L,EAAKrE,GAAI,SAJ1B,kBASA,sBACI2F,UAAU,4BACVC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAFpB,yBAbZ,EArBQ,uBAAKR,UAAU,WAAf,UACI,qDACA,sBACIA,UAAU,4BACVC,QAAS,SAAAM,GAAC,OAAIA,EAAEC,mBAFpB,kBAMA,sBACIR,UAAU,eACVC,QAAS,SAAAM,GACLA,EAAEC,kBACF8J,EAAS5L,EAAKrE,GAAI,SAJ1B,yBAsER,wBACA,sBAAK2F,UAAS,0BAAqB4J,GAAnC,SACKV,GAAUsB,GApOF,WAEjB,IAAMa,EAAS,aAAOb,GA2BtB,OAzBK9L,EAAK6L,SAA4B,SAAjB7L,EAAK6L,SAEtBc,EAAUpE,MAAK,SAAC9N,EAAGiD,GACf,OAAIwO,EAAc3N,QAAQ9D,EAAEkB,KAAOuQ,EAAc3N,QAAQb,EAAE/B,IACnDuQ,EAAc3N,QAAQ9D,EAAEkB,IAAMuQ,EAAc3N,QAAQb,EAAE/B,KAC9C,EAED,EAEJuQ,EAAc3N,QAAQ9D,EAAEkB,KACvB,EACDuQ,EAAc3N,QAAQb,EAAE/B,IACxB,OADJ,KAMM,SAAjBqE,EAAK6L,SAELc,EAAUpE,MAAK,SAAC9N,EAAGiD,GACf,OAAOjD,EAAEqE,MAAQpB,EAAEoB,OAAS,EAAI,KAKjC6N,EAAUpP,KAAI,SAAAuB,GACjB,GAAIA,EACA,OACI,eAAC,GAAD,CAAOA,MAAOA,EAAOkB,KAAMA,EAAqBsK,QAASA,EAASC,WAAYA,GAAxCzL,EAAMnD,OAoMnBiR,YCzB9B3L,gBAdS,SAAAC,GAEpB,MAAO,CACHzB,cAAeyB,EAAMzB,cACrBqK,KAAM5I,EAAMzF,MAAMD,YAClB8D,UAAW4B,EAAM5B,UACjBxD,SAAUoF,EAAMpF,SAChBC,QAASmF,EAAMnF,QACf2C,OAAQwC,EAAMxC,OACdqC,MAAOG,EAAMH,SAKmB,CAAE5F,gBAAcF,iBAAe4R,iBZqVrE,SAACvR,EAAYkF,GAAb,8CAAgC,WAAOhH,EAAU+B,GAAjB,qBAAAd,EAAA,sEAEpBe,EAAgBD,IAAWE,MAA3BD,YACFmF,EAAOpF,IAAWkE,cAAce,GAClClF,EAAW4O,OACP4C,EAAU,CACd1O,WAAY9C,EAAW4O,KACvBpL,MAAO6B,EAAK7B,MACZ5B,QAASyD,EAAKzD,QACdY,OAAQ6C,EAAK7C,QAEftE,EAASyE,GAAmB6O,KAXF,SAaLpS,EAAW8D,MAAX,yBACHgC,GADG,2BAEhBlF,GAFgB,IAEJE,YAAaA,EAAYG,MAfhB,OAatBjC,EAbsB,OAiB5BF,EAAS,CACPS,KAAMhC,EACNiC,QAAS,CACPgE,aAAcxE,EAASC,KACvBwE,SAAU7C,EAAW8C,cArBG,kDAyB5B5E,EAASD,GAAa,EAAD,KAzBO,0DAAhC,yDYrVuFwG,uBAA1EkB,CAAgG4G,IApO1F,SAAC,GAA4L,IAA1L1J,EAAyL,EAAzLA,SAAUmB,EAA+K,EAA/KA,UAAWqB,EAAoK,EAApKA,KAAMlB,EAA8J,EAA9JA,cAAeyG,EAA+I,EAA/IA,WAAYpK,EAAmI,EAAnIA,SAAUC,EAAyH,EAAzHA,QAAS2C,EAAgH,EAAhHA,OAAQvD,EAAwG,EAAxGA,aAAcF,EAA0F,EAA1FA,cAAe4R,EAA2E,EAA3EA,iBAAkB9M,EAAyD,EAAzDA,mBAAoBgB,EAAqC,EAArCA,MAAOuJ,EAA8B,EAA9BA,QAASR,EAAqB,EAArBA,KAAMiD,EAAe,EAAfA,SAE9L,EAAgClH,mBAAS,MAAzC,oBAAOmH,EAAP,KAAiBC,EAAjB,KAEA9L,qBAAU,WACNlG,EAAc0F,EAAK7B,OACnBJ,EAAOiC,EAAK7B,OAAOhD,SAASqD,SAAQ,SAAAxD,GAChCR,EAAaQ,QAElB,IAEHwF,qBAAU,WACFzC,EAAOiC,EAAK7B,QACZmO,EAAY,CACJ9O,WACAW,MAAOJ,EAAOiC,EAAK7B,OACnB5B,QAASpB,EAAS6E,EAAKzD,SACvBY,OAAQ/B,EAAQ4E,EAAK7C,QACrBmL,SAAUtI,EAAKsI,WAGnBlN,EAAQ4E,EAAK7C,SACbwM,EAAQ,CAAE3O,GAAIgF,EAAKhF,GAAIoB,SAAUhB,EAAQ4E,EAAK7C,QAAQf,aAE/D,CAAC0C,EAAckB,EAAKhF,IAAKI,EAAQ4E,EAAK7C,QAASY,EAAOiC,EAAK7B,OAAQhD,EAAS6E,EAAKzD,WAEpFiE,qBAAU,WAEF4L,GACAG,MAEL,CAACH,IAEJ,IA2BMG,EAAkB,WAEpB,IAEMC,EAFYzO,EAAOiC,EAAK7B,OACEhD,SAASyB,KAAI,SAAA5B,GAAE,OAAIG,EAASH,MACvB8B,MAAK,SAAAoB,GAAC,OAAIA,GAAKA,EAAEN,WACtD,GAAI4O,EAAgB,CAChB,IACMC,EADiBD,EAAepR,QAAQwB,KAAI,SAAA5B,GAAE,OAAII,EAAQJ,MAC3B8B,MAAK,SAAAC,GAAC,OAAIA,GAAKA,EAAEzB,UAClDmR,GACAP,EAAiB,CACb/O,OAAQsP,EAAczR,GACtBuB,QAASiQ,EAAexR,GACxBsN,SAAUtI,EAAKsI,SACf7K,WAAYD,EAASxC,IACtBgF,EAAKhF,MAyGd4C,EAAUwC,EAAMiK,YAAcjK,EAAMiK,YAAYjK,MAAQ,KACxDC,EAASD,EAAMC,OAASD,EAAMC,OAAOrF,GAAK,KAE5CsP,EAAe,GAOnB,OALI1M,GAAWoC,EAAK7C,SAChBmN,EAAejK,IAAW7C,EAASxC,IAAM4C,IAAYoC,EAAK7C,OAAS,eAAiB,IAKpF,sBAAKwD,UAAU,eAAf,SACI,sBAAKA,UAAS,iCAA4B2J,GAA1C,SACI,uBAAK3J,UAAU,SAAf,UACI,uBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,gBAAf,SACI,6BAAIX,EAAKsI,aAEb,8BAAKtI,GAAQjC,EAAOiC,EAAK7B,QAAUJ,EAAOiC,EAAK7B,OAAOA,WAlKlEkO,GAAYA,EAASlP,QAAUkP,EAAS9P,QACjC,eAAC,GAAD,CAAeyD,KAAMqM,EAAUrF,WAAW,aAG7C,uBAAKrG,UAAU,yBAAf,UACI,6BACKxF,EAAS6E,EAAKzD,SAAd,UAA4BpB,EAAS6E,EAAKzD,SAAS2D,MAAS,wBAEjE,uDA8JA,uBAAKS,UAAU,eAAf,UAzHS,WACrB,GAAI4E,GAAcxH,EAAOiC,EAAK7B,OAAQ,CAElC,IAAMuO,EAAa9N,OAAOC,OAAOC,GAC5BC,QAAO,SAAA4N,GAAC,OAAInP,EAAS0B,MAAMC,SAASwN,EAAE3R,OACtC4M,MAAK,SAAC9N,EAAEiD,GAAH,OAASjD,EAAEwO,SAAWvL,EAAEuL,UAAY,EAAI,KAC7C1L,KAAI,SAAA+P,GACD,MAAO,CAAE/K,MAAO+K,EAAErE,SAAUzG,QAAS8K,EAAErE,aAKzCsE,EAFY7O,EAAOiC,EAAK7B,OAEEhD,SAASyB,KAAI,SAAA5B,GAAE,OAAIG,EAASH,MAEtD6R,EAAeD,EAAchQ,KAAI,SAAAsB,GACnC,GAAIA,EACA,OAAOA,EAAE9C,QAAQwB,KAAI,SAAA5B,GAAE,OAAII,EAAQJ,SAKrC8R,EAAc,GAEpBF,EAAcpO,SAAQ,SAACN,EAAGyE,GAClBkK,EAAalK,IACbkK,EAAalK,GAAGnE,SAAQ,SAAAzB,GACpB,GAAIA,EAAG,CACH,IAAIa,EAAU,GACVM,EAAEN,SAAWb,EAAEzB,SACfsC,EAAS,cAEbkP,EAAYnT,KAAK,CACbiI,MAAO7E,EAAE/B,GACT6G,QAAQ,GAAD,OAAK3D,EAAEgC,KAAP,eAAkBsH,KAAOC,IAAI1K,EAAEoD,MAAMuH,OAAO,aAA5C,OAA0D9J,YAQrF,IAIM6M,EAJgBtB,EAAKxK,UACtBI,QAAO,SAAA/D,GAAE,OAAIA,IAAOwC,EAASxC,MAC7B4B,KAAI,SAAA5B,GAAE,OAAI2D,EAAU3D,MAEa4B,KAAI,SAAAqC,GACtC,GAAIA,EACA,MAAO,CAAE2C,MAAO3C,EAAGjE,GAAI6G,QAAS5C,EAAGiB,SAM3C,OAFAuK,EAAgBG,QAAQ,CAAEhJ,MAAO,KAAMC,QAAS,KAG5C,eAAC,GAAD,CACIqC,MAAM,mBACN/F,MAAK,eAAUJ,EAAOiC,EAAK7B,OAAOA,OAClC+E,SAAU,SAAAvI,GAAU,OAtFf,SAAAA,GACjB,IAAMgD,EAAciB,OAAOC,OAAO1D,GAAU2B,MAAK,SAAAoB,GAAC,OAAIA,EAAE9C,QAAQ+D,SAASxE,EAAWwC,WACpF+O,EAAiB,2BACVvR,GADS,IAEZ4B,QAASoB,EAAY3C,GACrByC,WAAYD,EAASxC,KACtBgF,EAAKhF,IAgF4B2M,CAAahN,IACrC+H,OAAQ,CACJ,CACIxC,KAAM,WACN2C,MAAO,WACPvJ,KAAM,SACNoI,QAASgL,GAEb,CACIxM,KAAM,SACN2C,MAAO,SACPvJ,KAAM,SACNoI,QAASoL,EACTvK,UAAU,GAEd,CACIM,MAAO,kBACP3C,KAAM,OACN5G,KAAM,SACNoI,QAAS+I,IAGjB3C,cAAe9H,EAAK7C,OAAL,2BAAmBF,KAAEC,KAAK8C,EAAM,WAAY,WAA5C,IAAuDuJ,KAAM,OAAS,CAAEjB,SAAUtI,EAAKsI,SAAUiB,KAAM,MACtHlF,KAAI,4BAAuBrE,EAAKhF,IAChC+M,oBAAoB,EACpB1E,SAAS,eAwCJ8C,GAlCM,WACvB,GAAIZ,EACA,OACI,eAAC,GAAD,CACIrC,SAAU,kBAAM9D,EAAmBY,EAAKhF,GAAIwC,EAASxC,KACrDiK,YAAalH,EAAOiC,EAAK7B,OAAOA,QA8B3BiI,iBCtBV9F,gBARS,SAAAC,GACpB,MAAO,CACH5B,UAAW4B,EAAM5B,UACjBG,cAAeyB,EAAMzB,cACrBqK,KAAM5I,EAAMzF,MAAMD,eAIc,CAAEkS,mBbtBR,SAACtP,GAAD,8CAAgB,WAAO5E,GAAP,eAAAiB,EAAA,+EAEvBC,EAAWC,IAAX,yBAAiCyD,IAFV,OAExC1E,EAFwC,OAG9CF,EAAS,CAAES,KAAMlD,EAAqBmD,QAASR,EAASC,OAHV,gDAK9CH,EAASD,GAAa,EAAD,KALyB,yDAAhB,uDasB4BoU,ebkjBhC,SAACvP,GAAD,8CAAgB,WAAO5E,EAAU+B,GAAjB,iBAAAd,EAAA,6DACpCe,EAAgBD,IAAWE,MAA3BD,YADoC,kBAGnBd,EAAWgB,KAAK,oBAAqB,CAC1D0C,aACA5C,YAAaA,EAAYG,KALe,QAGpCjC,EAHoC,QAOjCC,KAAKkG,MAAMV,SAAQ,SAACqB,GAC3BhH,EAASuG,GAAmBS,EAAgB9G,EAASC,KAAKgC,QAE5DnC,EAAS,CAAES,KAAM1B,EAAiB2B,QAASR,EAASC,OAVV,gDAY1CH,EAASD,GAAa,EAAD,KAZqB,yDAAhB,yDaljBgDqU,absX5E,SAACtS,EAAY8C,GAAb,8CAA4B,WAAO5E,EAAU+B,GAAjB,iBAAAd,EAAA,sEAEhBe,EAAgBD,IAAWE,MAA3BD,YAFgB,SAGDd,EAAW8D,MAAX,qBAA+BJ,GAA/B,2BAClB9C,GADkB,IAErBE,YAAaA,EAAYG,MALH,OAGlBjC,EAHkB,OAOxBF,EAAS,CAAES,KAAMjC,EAAekC,QAASR,EAASC,OAP1B,gDASxBH,EAASD,GAAa,EAAD,KATG,yDAA5B,0DatXa0H,CAA+E4G,IAtL7E,SAAC,GAAgH,IAA9G1J,EAA6G,EAA7GA,SAAUmB,EAAmG,EAAnGA,UAAWoO,EAAwF,EAAxFA,mBAAoBjO,EAAoE,EAApEA,cAAeyG,EAAqD,EAArDA,WAAY0H,EAAyC,EAAzCA,aAAcD,EAA2B,EAA3BA,eAAgB7D,EAAW,EAAXA,KAElH,EAA4BjE,oBAAS,GAArC,oBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAwC5E,mBAAS,IAAjD,oBAAOgI,EAAP,KAAqBC,EAArB,KACA,EAA0BjI,mBAAS,IAAnC,oBAAOmG,EAAP,KAAcC,EAAd,KACA,EAA0CpG,mBAAS,MAAnD,oBAAOkI,EAAP,KAAsBC,EAAtB,KACA,EAAgCnI,oBAAS,GAAzC,oBAAOkH,EAAP,KAAiBkB,EAAjB,KAGA9M,qBAAU,WACNuM,EAAmBvP,EAASxC,MAC7B,IAEHwF,qBAAU,WACN6M,EAAiB7P,EAAS0B,MAAMtC,KAAI,SAAA5B,GAAE,OAAI8D,EAAc9D,SACzD,CAAC8D,EAAetB,EAAS0B,QAe5BsB,qBAAU,WACN,GAAI2I,EAAKxK,UAAUtD,OAAQ,CACvB,IAAMkS,EAAkBpE,EAAKxK,UAAU/B,KAAI,SAAA5B,GAAE,OAAI2D,EAAU3D,MAAK4M,MAAK,SAAC9N,EAAGiD,GACrE,OAAIjD,EAAEwO,SAAWvL,EAAEuL,UACP,EAERvL,EAAEuL,SAAWxO,EAAEwO,SACR,OADX,KAIJ6E,EAAgBI,EAAgB3Q,KAAI,SAAA+N,GAChC,GAAIA,EACA,MAAO,CAAE/I,MAAO+I,EAAErC,SAAUzG,QAAS8I,EAAErC,iBAIpD,CAAC3J,IAEJ6B,qBAAU,WACF4L,GACAkB,GAAY,KAEjB,CAAClB,IAEJ,IA6DMzC,EAAU,SAAC8B,GACTJ,EAAMI,EAAMzQ,MAAQyQ,EAAMrP,UAC1BkP,EAAS,2BAAKD,GAAN,mBAAcI,EAAMzQ,GAAKyQ,EAAMrP,aAwBzCgO,EAAQP,EAAS,aAAe,GAChCU,EAAOV,EAAS,OAAS,SAE/B,OACI,uCACI,sBAAKlJ,UAAS,mBAAckJ,EAAS,WAAa,IAAMjJ,QAAS,kBAAMkJ,GAAWD,IAAlF,SACI,uBAAKlJ,UAAU,mBAAf,UACI,uBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAS,gBAAWyJ,GAASnG,IAAG,4BACrC,8BAAKzG,EAAS0C,OA7BC,WAC/B,GAAIqF,GAAcsE,EACd,OACI,uBAAKlJ,UAAU,kBAAf,UACI,sDAGA,sBACIA,UAAU,sBACVC,QAAS,SAAAM,GACLA,EAAEC,kBACFmM,GAAY,SAoBfE,MAIL,uBAAK7M,UAAU,aAAf,UACI,uBAAKA,UAAU,aAAf,UAA6BnD,EAAS0B,MAAM7D,OAA5C,YACA,sBAAKsF,UAAU,aAAf,SA/DI,WAGpB,IAAM+K,EAAQ9M,OAAOC,OAAOwM,GAAOM,QAAO,SAACC,EAAMC,GAC7C,OAAOD,EAAOC,IACf,GAEH,IAAKH,EACD,OAAO,KAGX,IAAM/C,EAAUC,KAAKC,MAAM6C,EAAQ,IAC7B5C,EAAUF,KAAKC,MAAM6C,EAAQ,IAAM,GAAK,IAAM9C,KAAKC,MAAM6C,EAAQ,IAAM9C,KAAKC,MAAM6C,EAAQ,IAChG,OACI,yCACQ/C,EADR,YACmBG,KAgDsBgD,QAEjC,uBAAKnL,UAAU,eAAf,UA1GS,WACrB,GAAI4E,EAGA,OACI,eAAC,GAAD,CACIpH,MAAK,eAAUX,EAAS0C,MACxBgE,MAAM,kBACNxB,OAAQ,CACJ,CACIG,MAAO,gBACP3C,KAAM,OACN5G,KAAM,SACP,CACCuJ,MAAO,oBACP3C,KAAM,WACN5G,KAAM,SACNoI,QAASwL,IAGjBhK,SAAU,SAACvI,GAAD,OAAgBsS,EAAatS,EAAY6C,EAASxC,KAC5D8M,cAAe7K,KAAEC,KAAKM,EAAU,OAAQ,YACxC6G,KAAI,eAAU7G,EAASxC,IACvB+M,oBAAoB,EACpB1E,SAAS,aAmFA8C,GA7EE,WACvB,GAAIZ,EACA,OACI,eAAC,GAAD,CACIrC,SAAU,kBAAM8J,EAAexP,EAASxC,KACxCiK,YAAazH,EAAS0C,OAyEbkG,WAIjB,wBACA,sBAAKzF,UAAS,0BAAqB4J,GAAnC,SACKV,IArJTuD,EAAcxF,MAAK,SAAC9N,EAAGiD,GAAJ,OAAUjD,EAAEwO,SAAWvL,EAAEuL,UAAY,EAAI,KAErD8E,EAAcxQ,KAAI,SAAAoD,GACrB,GAAIA,EACA,OACA,eAAC,GAAD,CAAcA,KAAMA,EAAMxC,SAAUA,EAAwBmM,QAASA,EAASyC,SAAUA,GAArCpM,EAAKhF,iBCkHzDsF,gBAVS,SAAAC,GACpB,MAAO,CACH6I,MAAO7I,EAAM6I,MACbzK,UAAW4B,EAAM5B,UACjB0L,YAAa9J,EAAMH,MAAMiK,YACzB3E,KAAMnF,EAAMoF,KAAKD,KACjByD,KAAM5I,EAAMzF,MAAMD,eAIc,CAAEX,cAAYuT,edaxB,SAACtT,GAAD,8CAAY,WAAOtB,GAAP,eAAAiB,EAAA,+EAEfC,EAAWC,IAAX,qBAA6BG,IAFd,OAEhCpB,EAFgC,OAGtCF,EAAS,CAAES,KAAMhD,EAAiBiD,QAASR,EAASC,OAHd,gDAKtCH,EAASD,GAAa,EAAD,KALiB,yDAAZ,uDcbwC8B,cAAYgT,eduMpD,SAAC/S,GAAD,8CAAgB,WAAO9B,EAAU+B,GAAjB,iBAAAd,EAAA,sEAElCe,EAAgBD,IAAWE,MAA3BD,YAFkC,SAGnBd,EAAWgB,KAAK,aAAhB,2BAClBJ,GADkB,IAErBE,YAAaA,EAAYG,MALe,OAGpCjC,EAHoC,OAO1CF,EAAS,CAAES,KAAMvC,EAAiBwC,QAASR,EAASC,OAPV,gDAS1CH,EAASD,GAAa,EAAD,KATqB,yDAAhB,0DcvMf0H,CAAqF4G,IA1I9E,SAAC,GAAqI,IAAnIuG,EAAkI,EAAlIA,eAAgB/S,EAAkH,EAAlHA,WAAYR,EAAsG,EAAtGA,WAAYkP,EAA0F,EAA1FA,MAAOzK,EAAmF,EAAnFA,UAAWwK,EAAwE,EAAxEA,KAAM5D,EAAkE,EAAlEA,WAAYmI,EAAsD,EAAtDA,eAAgBrD,EAAsC,EAAtCA,YAAa7E,EAAyB,EAAzBA,aAAcE,EAAW,EAAXA,KAE5I,EAAgCR,mBAAS,IAAzC,oBAAO6G,EAAP,KAAiB4B,EAAjB,KACA,EAAwCzI,mBAAS,IAAjD,oBAAOgI,EAAP,KAAqBC,EAArB,KAEA3M,qBAAU,WACNtG,EAAWiP,EAAKnO,IAChByS,EAAetE,EAAKnO,MACrB,IAEHwF,qBAAU,WACNgF,MACD,CAACE,IAEJlF,qBAAU,WACNmN,EAAYxE,EAAKC,MAAMxM,KAAI,SAAA5B,GAAE,OAAIoO,EAAMpO,MAAK4M,MAAK,SAAC9N,EAAGiD,GACjD,OAAIjD,EAAEwO,SAAWvL,EAAEuL,UACP,EAERvL,EAAEuL,SAAWxO,EAAEwO,SACR,OADX,QAIL,CAACc,IAEJ5I,qBAAU,WACN2M,EAAgBhE,EAAKxK,UAAU/B,KAAI,SAAA5B,GAAE,OAAI2D,EAAU3D,MAAK4M,MAAK,SAAC9N,EAAGiD,GAC7D,OAAIjD,EAAEwO,SAAWvL,EAAEuL,UACP,EAERvL,EAAEuL,SAAWxO,EAAEwO,SACR,OADX,QAIL,CAAC3J,IAEJ,IA8DMiP,EAAgBvD,EAAc,iBAAmB,GAEvD,OACI,uBAAK1J,UAAS,eAAUiN,GAAxB,UACI,uBAAKjN,UAAU,iBAAf,UACI,qBAAIA,UAAU,gBAAd,mBACA,sBAAKA,UAAU,cAAf,SAxDgB,WACxB,GAAI4E,EACA,OACI,eAAC,GAAD,CACIrC,SAAU,SAAAvI,GAAU,OAAID,EAAWC,IACnCwD,MAAM,aACN+F,MAAM,kBACNxB,OAAQ,CAAC,CACLG,MAAO,YACP3C,KAAM,WACN5G,KAAM,QACNiJ,UAAU,IAEdc,SAAS,aA4CRwK,QAGT,wBACCzE,GAvEE2C,EAASnP,KAAI,SAAAyC,GAChB,GAAIA,EACA,OACI,eAAC,GAAD,CAAMA,KAAMA,GAAWA,EAAKrE,OAqEpC,uBAAK2F,UAAU,YAAf,UACI,uBAAKA,UAAU,iBAAf,UACI,qBAAIA,UAAU,gBAAd,uBACA,sBAAKA,UAAU,cAAf,SA7CgB,WAC5B,GAAI4E,EACA,OACI,eAAC,GAAD,CACIrC,SAAU,SAAAvI,GAAU,OAAI+S,EAAe/S,IACvCwD,MAAM,iBACN+F,MAAM,kBACNxB,OAAQ,CAAC,CACLG,MAAO,gBACP3C,KAAM,eACN5G,KAAM,QACNiJ,UAAU,IAEdc,SAAS,aAiCJyK,QAGT,wBACCnP,GA7BFuO,EAAatQ,KAAI,SAAAY,GACpB,GAAIA,EACA,OACI,eAAC,GAAD,CAAUA,SAAUA,GAAeA,EAASxC,iBC/F1D+S,G,oDAEF,WAAYjN,GAAQ,IAAD,+BACf,cAAMA,IAUVP,MAAQ,CAAEyN,OAAQ,GAAIC,eAAgB,GAXnB,EAoBnB1G,YAAc,SAAApH,GACV,OAAOqH,KAAOC,IAAItH,GAAMuH,OAAO,aArBhB,EA4BnBwG,aAAe,WACX,IAAM5F,EAAY,EAAKlI,MAAMxC,QAAQuQ,YAAc,EAAK/N,MAAMxC,QAAQxB,SAAY,IAClF,EAAKsM,KAAO,EAAK0F,WAAW,EAAKhO,MAAMxC,QAAQuQ,aAC1CE,MAAM/F,IACP,EAAK/G,SAAS,CACV0M,eAAgB3F,KAjCT,EAsCnBgG,kBAAoB,SAACpN,GACF,UAAXA,EAAEqN,OACFrN,EAAEsN,iBACE,EAAK1N,MAAM2N,MACX,EAAKC,OAEL,EAAKD,UA5CE,EAiDnBE,WAAa,WAET,EAAK7N,MAAMzH,WADK,qEAlDD,EA0HnBuV,WAAa,WACL,EAAK9N,MAAM4N,MACX,EAAKtO,MAAMxC,QAAQ8Q,QA5HR,EAgInBG,SAAW,WACH,EAAKzO,MAAMxC,QAAQuQ,YAAc,EACjC,EAAKrN,MAAM+N,WAEX,EAAKzO,MAAMxC,QAAQuQ,YAAc,GApItB,EAwInBW,SAAW,WACP,EAAKhO,MAAMgO,YAzII,EA4InBJ,KAAO,WACH,EAAK5N,MAAMhB,aA7II,EAgJnB2O,MAAQ,WACJ,EAAK3N,MAAMiO,cAjJI,EAoJnBC,eAAiB,SAAC9N,GACd,IAAMoH,EAAYpH,EAAElF,OAAO4F,MAAQ,IAAQ,EAAKxB,MAAMxC,QAAQxB,SAC9D,EAAKgE,MAAMxC,QAAQuQ,YAAc7F,GAtJlB,EAyJnB2G,cAAgB,WAER,EAAKnO,MAAM4N,KACX,EAAKD,QAEL,EAAKC,QA3JL,EAAK1Z,IAAM,kCAIf,EAAKoL,MAAQoD,IAAMC,YAPJ,E,+CAanB,SAAWiF,GAEP,IAAIC,EAAUD,EAAO,IAAP,WAAiBE,KAAKC,MAAMH,EAAK,KAAQE,KAAKC,MAAMH,EAAK,IACnEI,EAAUJ,EAAO,GAAK,GAAZ,WAAqBE,KAAKC,MAAMH,EAAO,KAAQE,KAAKC,MAAMH,EAAO,IAC/E,MAAM,GAAN,OAAUC,EAAV,YAAqBG,K,qBAOzB,SAAQ9N,GACJ,MAAM,GAAN,OAAU4I,KAAK5O,IAAf,sBAAgCgG,EAAhC,U,+BA6BJ,WAMI4I,KAAKxD,MAAMxC,QAAU,IAAIsR,MAEzBtL,KAAKxD,MAAMxC,QAAQkG,iBAAiB,aAAcF,KAAKsK,cAEvDtK,KAAKxD,MAAMxC,QAAQkG,iBAAiB,QAASF,KAAK+K,YAIlD/K,KAAKxD,MAAMxC,QAAQkG,iBAAiB,QAASF,KAAKkL,UAIlDjL,SAASC,iBAAiB,UAAWF,KAAK0K,mBAG1C1K,KAAKxD,MAAMxC,QAAQkG,iBAAiB,iBAAkBF,KAAKgL,c,gCAI/D,SAAmBlL,GAIVE,KAAKuL,WACNvT,OAAOwT,OAAOxT,OAAOyT,QAASzT,OAAO0T,QAAU,IAC/C1L,KAAKuL,UAAW,GAGhBvL,KAAK9C,MAAMd,MAIP4D,KAAK9C,MAAMd,OAAS0D,EAAU1D,MAC9B4D,KAAKxD,MAAMxC,QAAQqG,IAAIL,KAAK2L,QAAQ3L,KAAK9C,MAAMd,KAAKI,OACpDwD,KAAKxD,MAAMxC,QAAQoQ,OAASpK,KAAK9C,MAAMkN,OAAS,KAEzCpK,KAAK9C,MAAM4N,MAAQhL,EAAU+K,MAEpC7K,KAAKxD,MAAMxC,QAAQ8Q,OACZ9K,KAAK9C,MAAM2N,OAAS/K,EAAUgL,MACrC9K,KAAKxD,MAAMxC,QAAQ6Q,QAEnB7K,KAAK9C,MAAMkN,SAAWtK,EAAUsK,SAChCpK,KAAKxD,MAAMxC,QAAQoQ,OAASpK,KAAK9C,MAAMkN,OAAS,MAGpDpK,KAAKxD,MAAMxC,QAAQ6Q,U,kCAI3B,WACI5K,SAASG,oBAAoB,UAAWJ,KAAK0K,mBAE7C1K,KAAKxD,MAAMxC,QAAQqG,IAAI,GACvBL,KAAKxD,MAAMxC,QAAQoG,oBAAoB,aAAcJ,KAAKsK,cAC1DtK,KAAKxD,MAAMxC,QAAQoG,oBAAoB,QAASJ,KAAK+K,YACrD/K,KAAKxD,MAAMxC,QAAQoG,oBAAoB,QAASJ,KAAKkL,UACrDlL,KAAKxD,MAAMxC,QAAQoG,oBAAoB,iBAAkBJ,KAAKgL,YAE9DhL,KAAK9C,MAAM0O,oB,oBA4Cf,WAEI,OAAI5L,KAAK9C,MAAMd,KAGP,uBAAKW,UAAU,UAAf,UACI,uBAAKA,UAAU,iBAAf,UACQ,sBAAKA,UAAU,gBAAf,SACI,6BAAIiD,KAAK9C,MAAMd,KAAK7B,MAAMA,UAE9B,uBAAKwC,UAAU,qBAAf,UACI,sBACIsD,IAAI,mBACJtD,UAAU,iBACVC,QAASgD,KAAKiL,WAElB,sBACIlO,UAAU,eACVsD,IAAKL,KAAK9C,MAAM4N,KAAO,oBAAsB,mBAC7C9N,QAASgD,KAAKqL,gBAElB,sBACIhL,IAAI,mBACJtD,UAAU,iBACVC,QAASgD,KAAKkL,cAI1B,uBAAKnO,UAAU,eAAf,UACI,uBAAKA,UAAU,sBAAf,UACI,0CACA,6BAAIiD,KAAK9C,MAAMd,KAAKzD,aAExB,uBAAKoE,UAAU,sBAAf,UACI,uCACA,6BAAIiD,KAAK2D,YAAY3D,KAAK9C,MAAMd,KAAKG,iBAIjD,uBAAKQ,UAAU,uBAAf,UACI,sBAAKA,UAAU,kBAAf,SACKiD,KAAK8E,OAEV,wBACIpP,KAAK,QACLmW,IAAI,IACJC,IAAI,OACJ9N,MAAOgC,KAAKrD,MAAM0N,eAClBtN,UAAU,aACVgP,QAAS/L,KAAKoL,iBAElB,sBAAKrO,UAAU,kBAAf,SACKiD,KAAKwK,WAAWxK,KAAK9C,MAAMd,KAAK5D,kBAM1C,S,GA/NQoH,IAAMW,WA6OlB7D,gBATS,SAAAC,GACpB,MAAO,CACHP,KAAMO,EAAMH,MAAMiK,YAClBqE,KAAMnO,EAAMH,MAAMsO,KAClBD,MAAOlO,EAAMH,MAAMqO,MACnBT,OAAQzN,EAAMH,MAAM4N,UAIY,CAAElO,aAAWiP,WfoiB3B,WACxB,MAAO,CAAEzV,KAAMnB,KeriBgD2W,Sf+kBzC,kBAAM,SAACjW,EAAU+B,GACvC,MAAgCA,IAAWwF,MAAnCC,EAAR,EAAQA,OAAQgK,EAAhB,EAAgBA,YAChB,GAAIhK,EAAO9B,UAAW,CACpB,IAAIqR,EAEmB,SAAnBvP,EAAO6K,UACT0E,EAAYvP,EAAO9B,UAChB3B,KAAI,SAAC5B,GAAD,OAAQJ,IAAWmD,OAAO/C,MAC9B4M,MAAK,SAAC9N,EAAGiD,GACR,OAAIjD,EAAEqN,gBAAkBpK,EAAEoK,eAEtB,IAAIqE,KAAK1R,EAAEqN,eAAehH,MAAQ,IAAIqL,KAAKzO,EAAEoK,eAAehH,OAEpD,EAED,EAEArG,EAAEqN,gBACH,EACCpK,EAAEoK,eACJ,OADF,MAMU,SAAnB9G,EAAO6K,UACT0E,EAAYvP,EAAO9B,UAChB3B,KAAI,SAAC5B,GAAD,OAAQJ,IAAWmD,OAAO/C,MAC9B4M,MAAK,SAAC9N,EAAGiD,GACR,OAAOjD,EAAEqE,MAAQpB,EAAEoB,OAAS,EAAI,MAItC,IAAM6B,EAAO4P,EAAUA,EAAUC,QAAQxF,EAAYlM,OAAS,GAE9D,GAAI6B,GAAQA,EAAKiI,iBAAmBjI,EAAKmH,eAAgB,CACvD,IAAM5K,EAAU3B,IAAWO,SAAS6E,EAAKiI,gBAAgBjN,IACnDmC,EAASvC,IAAWQ,QAAQ4E,EAAKmH,eAAenM,IAEhDiF,EAAa,CACjB9B,MAAO6B,EACPzD,QAASA,EAAQ2D,KACjBC,KAAMhD,EAAOgD,KACb/D,SAAUe,EAAOf,SACjBgE,MAAOjD,EAAOnC,IAGhBnC,EAAS,CAAES,KAAMjB,GAAWkB,QAAS0G,SAErCpH,EAAS,CAAES,KAAMf,KAGrB,GAAI8H,EAAOnB,MAAO,CAQhB,IAPA,IAIIc,EAJE8P,EAAWzP,EAAOnB,MACrBtC,KAAI,SAAC5B,GAAD,OAAQJ,IAAWkE,cAAc9D,MACrC4M,MAAK,SAAC9N,EAAGiD,GAAJ,OAAWjD,EAAEwO,SAAWvL,EAAEuL,UAAY,EAAI,KAG9CyH,EAAQ1F,EAAY/B,SAEjByH,EAAQD,EAASzU,QAAQ,CAC9B,GAA+B,OAA3ByU,EAASC,GAAO5S,OAAiB,CACnC6C,EAAO8P,EAASC,GAChB,MAEFA,IAGF,IAAK/P,EACH,OAAOnH,EAAS,CAAES,KAAMf,KAG1B,IAAMgE,EAAU3B,IAAWO,SAAS6E,EAAKzD,SACnCY,EAASvC,IAAWQ,QAAQ4E,EAAK7C,QAGjC8C,EAAa,CACjB9B,MAHYvD,IAAWmD,OAAOiC,EAAK7B,OAInC5B,QAASA,EAAQ2D,KACjBC,KAAMhD,EAAOgD,KACb/D,SAAUe,EAAOf,SACjBgE,MAAOjD,EAAOnC,GACdsN,SAAUtI,EAAKsI,UAEjBzP,EAAS,CAAES,KAAMjB,GAAWkB,QAAS0G,OenqBkC4O,SfuqBnD,kBAAM,SAAChW,EAAU+B,GACvC,MAAgCA,IAAWwF,MAAnCC,EAAR,EAAQA,OAAQgK,EAAhB,EAAgBA,YAChB,GAAIhK,EAAO9B,UAAW,CACpB,IAAIqR,EACmB,SAAnBvP,EAAO6K,UACT0E,EAAYvP,EAAO9B,UAChB3B,KAAI,SAAC5B,GAAD,OAAQJ,IAAWmD,OAAO/C,MAC9B4M,MAAK,SAAC9N,EAAGiD,GACR,OAAIjD,EAAEqN,gBAAkBpK,EAAEoK,eAEtB,IAAIqE,KAAK1R,EAAEqN,eAAehH,MAAQ,IAAIqL,KAAKzO,EAAEoK,eAAehH,OAEpD,EAED,EAEArG,EAAEqN,gBACH,EACCpK,EAAEoK,eACJ,OADF,MAMU,SAAnB9G,EAAO6K,UACT0E,EAAYvP,EAAO9B,UAChB3B,KAAI,SAAC5B,GAAD,OAAQJ,IAAWmD,OAAO/C,MAC9B4M,MAAK,SAAC9N,EAAGiD,GACR,OAAOjD,EAAEqE,MAAQpB,EAAEoB,OAAS,EAAI,MAItC,IAAM6B,EAAO4P,EAAUA,EAAUC,QAAQxF,EAAYlM,OAAS,GAE9D,GAAI6B,GAAQA,EAAKiI,iBAAmBjI,EAAKmH,eAAgB,CACvD,IAAM5K,EAAU3B,IAAWO,SAAS6E,EAAKiI,gBAAgBjN,IACnDmC,EAASvC,IAAWQ,QAAQ4E,EAAKmH,eAAenM,IAEhDiF,EAAa,CACjB9B,MAAO6B,EACPzD,QAASA,EAAQ2D,KACjBC,KAAMhD,EAAOgD,KACb/D,SAAUe,EAAOf,SACjBgE,MAAOjD,EAAOnC,IAGhBnC,EAAS,CAAES,KAAMjB,GAAWkB,QAAS0G,KAIzC,GAAII,EAAOnB,MAAO,CAQhB,IAPA,IAIIc,EAJE8P,EAAWzP,EAAOnB,MACrBtC,KAAI,SAAC5B,GAAD,OAAQJ,IAAWkE,cAAc9D,MACrC4M,MAAK,SAAC9N,EAAGiD,GAAJ,OAAWjD,EAAEwO,SAAWvL,EAAEuL,UAAY,EAAI,KAG9CyH,EAAQ1F,EAAY/B,SAAW,EAE5ByH,EAAQD,EAASzU,QAAQ,CAC9B,GAA+B,OAA3ByU,EAASC,GAAO5S,OAAiB,CACnC6C,EAAO8P,EAASC,GAChB,MAEFA,GAAgB,EAGlB,IAAK/P,EACH,OAAOnH,EAAS,CAAES,KAAMf,KAG1B,IAAMgE,EAAU3B,IAAWO,SAAS6E,EAAKzD,SACnCY,EAASvC,IAAWQ,QAAQ4E,EAAK7C,QAGjC8C,EAAa,CACjB9B,MAHYvD,IAAWmD,OAAOiC,EAAK7B,OAInC5B,QAASA,EAAQ2D,KACjBC,KAAMhD,EAAOgD,KACb/D,SAAUe,EAAOf,SACjBgE,MAAOjD,EAAOnC,GACdsN,SAAUtI,EAAKsI,UAEjBzP,EAAS,CAAES,KAAMjB,GAAWkB,QAAS0G,OezvB4C5G,cAAYmW,gBfiwBlE,WAC7B,MAAO,CAAElW,KAAMf,MelwBF+H,CAAqGyN,IC/HrGzN,gBARS,SAAAC,GACpB,MAAO,CACH4I,KAAM5I,EAAMzF,MAAMD,YAClB6K,KAAMnF,EAAMoF,KAAKqK,YACjBhC,OAAQzN,EAAMH,MAAM4N,UAIY,CAAEpU,aAAWJ,WAASyW,ahB43BlC,SAACrO,GAC3B,MAAO,CAAEtI,KAAMhB,GAAeiB,QAASqI,KgB73B1BtB,CAA+D4G,IA5G/D,SAAC,GAA+F,IAA7FtN,EAA4F,EAA5FA,UAAWuP,EAAiF,EAAjFA,KAAM+G,EAA2E,EAA3EA,MAAO3K,EAAoE,EAApEA,WAAYC,EAAwD,EAAxDA,aAAcE,EAA0C,EAA1CA,KAAMlM,EAAoC,EAApCA,QAASwU,EAA2B,EAA3BA,OAAQiC,EAAmB,EAAnBA,aAEvF,EAA4B/K,oBAAS,GAArC,oBAAO2E,EAAP,KAAeC,EAAf,KACMqG,EAAO1J,iBAAO,MAEpBjG,qBAAU,WAGN,OAFA5G,EAAUsW,EAAME,OAAOvW,UACvBgK,SAASC,iBAAiB,QAASuM,EAAgB,CAAEtM,SAAS,IACvD,WACHF,SAASG,oBAAoB,QAASqM,EAAgB,CAAEtM,SAAS,OAEtE,IAEHvD,qBAAU,WACNgF,MACD,CAAC2D,EAAMzD,IAEV,IAAM2K,EAAiB,SAACnP,GAChBiP,EAAKvS,SAAWuS,EAAKvS,QAAQ0D,SAASJ,EAAElF,SAG5C8N,GAAU,IAkEd,OAAO,uCAEH,uBAAKnJ,UAAU,SAAf,UACI,eAAC,GAAD,IA5CCwI,EAiBD,uBAAKxI,UAAU,cAAf,UACI,uBAAKA,UAAU,YAAf,UACI,8BAAKwI,GAAQA,EAAKjJ,OAClB,uBAAKS,UAAU,cAAcU,IAAK8O,EAAMvP,QAAS,kBAAMkJ,GAAWD,IAAlE,UACI,sBAAK5F,IAAI,oBACR4F,IAAWtE,EA1CxB,uBAAK5E,UAAU,OAAf,UACI,eAAC,KAAD,CAAMA,UAAU,YAAY2P,GAAG,QAA/B,uBACA,eAAC,KAAD,CAAM3P,UAAU,YAAY2P,GAAG,QAA/B,kBACA,sBAAK3P,UAAU,YAAYC,QAASpH,EAApC,yBAOJ,uBAAKmH,UAAU,OAAf,UACI,eAAC,KAAD,CAAMA,UAAU,YAAY2P,GAAG,IAA/B,kBACA,eAAC,KAAD,CAAM3P,UAAU,YAAY2P,GAAG,QAA/B,kBACA,eAAC,KAAD,CAAM3P,UAAU,YAAY2P,GAAG,UAA/B,+BAgCA,uBAAK3P,UAAU,mBAAf,UACI,wBACIrH,KAAK,QACLmW,IAAI,IAAIC,IAAI,MACZ/O,UAAU,SACViB,MAAOoM,EACP2B,QAAS,SAAAzO,GAAC,OAAI+O,EAAa/O,EAAElF,OAAO4F,UAExC,sBAAKqC,IAAI,6BA/Bb,uBAAKtD,UAAU,UAAf,UACI,0GACA,uBAAKA,UAAU,eAAf,UACI,eAAC,KAAD,CAAM2P,GAAG,IAAT,kBAGA,eAAC,KAAD,CAAMA,GAAG,QAAT,kCAwCfnH,GAAQ,eAACoH,GAAD,WCLFjQ,gBAPS,SAAAC,GACpB,MAAO,CACHmF,KAAMnF,EAAMoF,KAAKD,KACjB5K,MAAOyF,EAAMzF,SAImB,CAAE0V,WjBiFhB,SAAC7V,GAAD,8CAAgB,WAAO9B,GAAP,eAAAiB,EAAA,+EAEfC,EAAWgB,KAAK,SAAUJ,GAFX,OAEhC5B,EAFgC,OAGtCF,EAAS,CAAES,KAAMpC,EAAaqC,QAASR,EAASC,OAHV,gDAKtCH,EAASD,GAAa,EAAD,KALiB,yDAAhB,uDiBjF4BqB,cAAYwW,SjB0R1C,SAAC9V,EAAYR,GAAb,8CAAwB,WAAOtB,GAAP,eAAAiB,EAAA,+EAErBC,EAAW8D,MAAM,SAAjB,2BAClBlD,GADkB,IAErBE,YAAaV,KAJ6B,OAEtCpB,EAFsC,OAM5CF,EAAS,CAAES,KAAM5B,EAAW6B,QAASR,EAASC,OANF,gDAQ5CH,EAASD,GAAa,EAAD,KARuB,yDAAxB,uDiB1RoD8X,WjB+flD,SAACvW,GAAD,8CAAY,WAAOtB,GAAP,eAAAiB,EAAA,+EAEXC,EAAWgB,KAAK,gBAAiB,CACtDF,YAAaV,IAHmB,QAE5BpB,EAF4B,QAKzBC,KAAKoQ,MAAM5K,SAAQ,SAACnE,GAC3BxB,EAASyF,GAAWjE,EAAQtB,EAASC,KAAKgC,QAE5CnC,EAAS,CAAES,KAAMrB,EAAasB,QAASR,EAASC,OARd,gDAUlCH,EAASD,GAAa,EAAD,KAVa,yDAAZ,uDiB/f8DY,YAAzE8G,EA1FF,SAAC,GAA4E,IAA1EoF,EAAyE,EAAzEA,KAAM5K,EAAmE,EAAnEA,MAAO0V,EAA4D,EAA5DA,WAAYvW,EAAgD,EAAhDA,WAAYwW,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAYlX,EAAc,EAAdA,QAEvEgH,qBAAU,WACNvG,MACD,IAuCH,OAAIyL,EACO,uCACH,uBAAK/E,UAAU,cAAf,UACI,uBAAKA,UAAU,kBAAf,UACI,sBAAIA,UAAU,aAAd,UACK+E,EAAKiL,SADV,cAGA,eAAC,GAAD,CACIzN,SAAU,SAAAvI,GAAU,OAAI6V,EAAW7V,IACnCwD,MAAM,gBACN+F,MAAM,iBACNxB,OAAQ,CAAC,CACLG,MAAO,YACP3C,KAAM,WACN5G,KAAM,eAIlB,uBAAKqH,UAAU,kBAAf,UACI,eAAC,KAAD,CAAMA,UAAU,YAAY2P,GAAG,IAA/B,kBAGA,sBAAK3P,UAAU,YAAYC,QAASpH,EAApC,4BAKR,wBACA,sBAAKmH,UAAU,YAAf,SAjEY,WAChB,IAAMiQ,EAAWlL,EAAK5K,MAAM8B,KAAI,SAAA5B,GAAE,OAAIF,EAAME,MAC5C,OAAK4V,EAASvV,QAAWuV,EAAS,GAG3BA,EAAShU,KAAI,SAAAuM,GAChB,GAAIA,EACA,OACI,uBAAKxI,UAAU,YAAf,UACI,eAAC,KAAD,CAAM2P,GAAE,WAAMnH,EAAKnU,KAAnB,SACI,8BAAKmU,EAAKjJ,SAEd,uBAAKS,UAAU,eAAf,UACI,eAAC,GAAD,CACIuC,SAAU,SAAAvI,GAAU,OAAI8V,EAAS9V,EAAYwO,EAAKnO,KAClDmD,MAAK,eAAUgL,EAAKjJ,MACpBgE,MAAM,kBACNxB,OAAQ,CAAC,CACLG,MAAO,YACP3C,KAAM,OACN5G,KAAM,UAEVwO,cAAe,CAAE5H,KAAMiJ,EAAKjJ,MAC5B6H,oBAAoB,EACpB1D,KAAI,oBAAe8E,EAAKnO,MAE5B,eAAC,GAAD,CACIkI,SAAU,kBAAMwN,EAAWvH,EAAKnO,KAChCiK,YAAakE,EAAKjJ,YApBEiJ,EAAKnO,OALtC,+DA+DF6V,QAMF,QCnFTC,G,+MAEFC,YAAc,YAA+D,IAA5DhP,EAA2D,EAA3DA,MAAOc,EAAoD,EAApDA,MAAavJ,GAAuC,EAA7C8I,KAA6C,EAAvC9I,MAAM0X,EAAiC,EAAjCA,aAAiC,EAAnBC,aAErD,OACI,iCACI,iCAAQpO,IACR,oCACIvJ,KAAMA,EACN0X,aAAcA,GACVjP,Q,EAMpBkB,WAAa,SAAAtI,GACT,EAAKmG,MAAMoC,SAASvI,I,6CAIxB,WACI,OACI,wBAAMgG,UAAU,SAASuC,SAAUU,KAAK9C,MAAMwC,aAAaM,KAAKX,YAAhE,UACI,eAACH,GAAA,EAAD,CACI5C,KAAK,WACL6C,UAAWa,KAAKmN,YAChBlO,MAAM,aACNvJ,KAAK,OACL0X,aAAa,aAGjB,eAAClO,GAAA,EAAD,CACI5C,KAAK,WACL6C,UAAWa,KAAKmN,YAChBlO,MAAM,aACNvJ,KAAK,WACL0X,aAAa,qBAEjB,yBAAQrQ,UAAU,gBAAlB,2B,GAvCO6C,IAAMW,WA+CdC,gBAAU,CACrBC,KAAM,YADKD,CAEZ0M,ICXYxQ,gBAJS,SAAAC,GACpB,MAAO,CAAE2Q,WAAY3Q,EAAMoF,KAAKuL,cAGI,CAAEC,OnBqBpB,SAACxW,GAAD,8CAAgB,WAAO9B,GAAP,eAAAiB,EAAA,+EAEXC,EAAWgB,KAAK,UAAWJ,GAFhB,OAE5B5B,EAF4B,OAGlCtD,aAAa2b,QAAQ,QAASrY,EAASC,KAAKxD,OAC5CqD,EAAS,CAAES,KAAMtD,EAASuD,QAASR,EAASC,KAAK0M,OACjDhM,GAAQC,KAAK,SALqB,gDAOlCd,EAASD,GAAa,EAAD,KAPa,yDAAhB,wDmBrBP0H,EAhCA,SAAC,GAA4B,IAA1B6Q,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,WAQtB,OANA1Q,qBAAU,WACF0Q,GACAxX,GAAQC,KAAK,WAElB,IAIC,uBAAKgH,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,iCAGA,0CACA,eAAC,GAAD,CAAUuC,SAAU,SAAAvI,GAAU,OAAIwW,EAAOxW,MACzC,uBAAKgG,UAAU,eAAf,UACI,eAAC,KAAD,CAAM2P,GAAG,IAAT,kBAGA,eAAC,KAAD,CAAMA,GAAG,SAAT,8BCWDhQ,gBAJS,SAAAC,GACpB,MAAO,CAAE2Q,WAAY3Q,EAAMoF,KAAKuL,cAGI,CAAEG,OpBuCpB,SAAC1W,GAAD,8CAAgB,WAAO9B,GAAP,eAAAiB,EAAA,+EAEXC,EAAWgB,KAAK,UAAWJ,GAFhB,OAE5B5B,EAF4B,OAGlCtD,aAAa2b,QAAQ,QAASrY,EAASC,KAAKxD,OAC5CqD,EAAS,CAAES,KAAMtD,EAASuD,QAASR,EAASC,KAAK0M,OACjDhM,GAAQC,KAAK,SALqB,gDAOlCd,EAASD,GAAa,EAAD,KAPa,yDAAhB,wDoBvCP0H,EA/BA,SAAC,GAA4B,IAA1B+Q,EAAyB,EAAzBA,OAAQH,EAAiB,EAAjBA,WAQtB,OANA1Q,qBAAU,WACF0Q,GACAxX,GAAQC,KAAK,WAElB,IAGC,uBAAKgH,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,iCAGA,0CACA,eAAC,GAAD,CAAUuC,SAAU,SAAAvI,GAAU,OAAI0W,EAAO1W,MACzC,uBAAKgG,UAAU,eAAf,UACI,eAAC,KAAD,CAAM2P,GAAG,IAAT,kBAGA,eAAC,KAAD,CAAMA,GAAG,SAAT,8BCrBVgB,G,2KAGF,WACI1N,KAAK9C,MAAM7G,e,yBAGf,WAMI,cAJO2J,KAAK9C,MAAMhG,MAAMD,YAEV+D,OAAOC,OAAO+E,KAAK9C,MAAMhG,OAE1B8B,KAAI,SAAAuM,GACb,OACI,sBAAKxI,UAAU,YAAf,SACI,eAAC,KAAD,CAAM2P,GAAE,WAAMnH,EAAKnU,KAAnB,SACI,8BAAKmU,EAAKjJ,UAFciJ,EAAKnO,S,oBAWjD,WACI,OACI,uBAAK2F,UAAU,YAAf,UACI,qBAAIA,UAAU,cAAd,iCACA,uBAAKA,UAAU,eAAf,UACI,eAAC,KAAD,CAAM2P,GAAG,UAAT,qBAGA,eAAC,KAAD,CAAMA,GAAG,UAAT,qBAGA,eAAC,KAAD,CAAMA,GAAG,QAAT,4BAIJ,6CACA,sBAAK3P,UAAU,YAAf,SACKiD,KAAK9C,MAAMhG,OAAS8I,KAAKiN,uB,GA3C3BrN,IAAMW,WA0DV7D,gBANS,SAAAC,GACpB,MAAO,CACHzF,MAAOyF,EAAMzF,SAImB,CAAEb,eAA3BqG,CAAyCgR,ICczCC,GA5EF,WACT,OAAO,uCACH,uBAAK5Q,UAAU,eAAf,UACI,eAAC,KAAD,CAAM2P,GAAG,IAAT,kBACA,eAAC,KAAD,CAAMA,GAAG,SAAT,qBACA,eAAC,KAAD,CAAMA,GAAG,SAAT,wBAEJ,uBAAK3P,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,uHAGA,wDAGA,sBAAKA,UAAU,OAAf,kOAGA,oGAIA,gDAGA,yNAGA,wCAGA,sTAGA,yCAGA,gTAGA,2CAGA,oVAGA,0CAGA,sNAGA,4CAGA,gRAGA,4SAGA,2CAGA,4KAGA,oBAAGA,UAAU,SAAb,iGAGA,oBAAGsI,KAAK,4CAAR,4C,oBCAGuI,GArEE,SAAC,GAA4B,IAA1BpR,EAAyB,EAAzBA,MAAOqR,EAAkB,EAAlBA,YACnBC,EAASjL,mBACTkL,EAAelL,mBAErBjG,oBAAS,sBAAC,sBAAA1G,EAAA,0DACJ2X,IAAeC,EAAO9T,QADlB,uBAEM8T,EAAO9T,QAAQgU,WAAW,MAClCC,UAAU,EAAG,EAAGH,EAAO9T,QAAQkU,MAAOJ,EAAO9T,QAAQmU,QAHnD,SAIAJ,EAAa/T,QAAQoU,QAJrB,6BAMNC,IANM,2CAQP,CAACR,IAEJ,IAAMQ,EAAc,uCAAG,8BAAAnY,EAAA,6DACrB6X,EAAa/T,QAAU,IAAI/B,aADN,SAEAuE,EAAM8R,cAFN,OAEfhW,EAFe,OAGfwF,EAAU,CACdyQ,cAAeR,EAAa/T,QAC5BwU,aAAclW,EACdmW,MAAO,KAETC,KAAaC,gBAAgB7Q,GAAS,SAAC7L,EAAK2c,GACtC3c,EACFqD,QAAQC,IAAItD,GAEZ4c,EAAaD,MAZI,2CAAH,qDAiBdC,EAAe,SAACD,GACpB,IAAME,EAAMhB,EAAO9T,QAAQgU,WAAW,MAEhCe,EAAmBH,EAASnX,OAAS,IAErCuX,EAAS,SAACC,EAAWd,GAIzB,OAAOA,GAAWc,EAFH,KAEyBd,EAH1B,KAMhBW,EAAII,YAKJ,IAHA,IAAMC,EAAUP,EAASO,QAAQ,GAGxBC,EAAI,EAAGA,EAAIR,EAASnX,OAAQ2X,IAAK,CACxC,IAAMC,EAAMF,EAAQG,WAAWF,GAE/BN,EAAIS,OAAOH,EAAIL,EAAkBC,EAAOK,EAAKvB,EAAO9T,QAAQmU,SAI9D,IAAK,IAAIiB,EAAIR,EAASnX,OAAS,EAAG2X,GAAK,EAAGA,IAAK,CAC7C,IAAMC,EAAMF,EAAQK,WAAWJ,GAE/BN,EAAIS,OAAOH,EAAIL,EAAkBC,EAAOK,EAAKvB,EAAO9T,QAAQmU,SAG9DW,EAAIW,YACJX,EAAIY,SACJZ,EAAIa,QAGN,OAAO,yBAAQlS,IAAKqQ,KC8BP8B,GA/FE,SAAC,GAA4B,IAA1BpT,EAAyB,EAAzBA,MAAOqR,EAAkB,EAAlBA,YACzB,EAAgDvM,mBAAS,GAAzD,oBAAOuO,EAAP,KAAyBC,EAAzB,KACA,EAAkCxO,oBAAS,GAA3C,oBAAOyO,EAAP,KAAkBC,EAAlB,KAEMC,EAASpN,mBAEfjG,qBAAU,WAYR,OAXAqT,EAAOjW,QAAU,IAAIsR,MACrB2E,EAAOjW,QAAQkW,QAAU,WACvBF,GAAa,IAEfC,EAAOjW,QAAQmW,OAAS,WACtBH,GAAa,IAEfC,EAAOjW,QAAQoW,QAAU,WACvBJ,GAAa,IAEfC,EAAOjW,QAAQqW,aAAe/F,EACvB,WACL2F,EAAOjW,QAAQqW,aAAe,KAC9BJ,EAAOjW,QAAQkW,QAAU,KACzBD,EAAOjW,QAAQmW,OAAS,KACxBF,EAAOjW,QAAQoW,QAAU,QAE1B,IAEHxT,qBAAU,WACJiR,IACFmC,GAAa,GACTC,EAAOjW,SACTiW,EAAOjW,QAAQ6Q,WAGlB,CAACgD,IAEJjR,qBAAU,WACR,GAAIJ,EAAO,CACT,IAAMpL,EAAMkf,IAAIC,gBAAgB/T,GAChCyT,EAAOjW,QAAQqG,IAAMjP,KAEtB,CAACoL,IAEJ,IAoBM8N,EAAe,WACnB,IAAM5F,EACHuL,EAAOjW,QAAQuQ,YAAc0F,EAAOjW,QAAQxB,SAAY,IACtDiS,MAAM/F,IACToL,EAAoBpL,EAAWuL,EAAOjW,QAAQxB,SAAW,MAW7D,OACE,uCAnCKqV,IAAerR,GAAUuT,GAQlBlC,GAAerR,EAEvB,sBACE6D,IAAI,oBACJtD,UAAU,YACVC,QAAS,kBAAMiT,EAAOjW,QAAQ6Q,gBAL7B,EANH,sBACExK,IAAI,mBACJtD,UAAU,YACVC,QAAS,kBAAMiT,EAAOjW,QAAQ8Q,UAgClC,uBAAK/N,UAAU,mBAAf,UACE,eAAC,GAAD,CAAUP,MAAOA,EAAOqR,YAAaA,IACrC,wBACEnY,KAAK,QACLmW,IAAI,IACJC,IAAI,OACJ9N,MAAO6R,EACP9S,UAAU,WACVgP,QAlBe,SAACzO,GACtB,IAAMoH,EAAYpH,EAAElF,OAAO4F,MAAQ,IAAQiS,EAAOjW,QAAQxB,SACrDiS,MAAM/F,KACTuL,EAAOjW,QAAQuQ,YAAc7F,aC5CpB8L,GA/BD,SAAC,GAAqB,IAAnB3C,EAAkB,EAAlBA,YACf,EAA0BvM,mBAAS,GAAnC,oBAAOmP,EAAP,KAAcC,EAAd,KAEA9T,qBAAU,WACR,IAAI+T,EASJ,OARI9C,EACF8C,EAAWC,aAAY,WACrBF,EAASD,EAAQ,KAChB,MAEHI,cAAcF,GACdD,EAAS,IAEJ,WACLG,cAAcF,MAEf,CAAC9C,EAAa4C,IAUjB,OACE,sBAAK1T,UAAU,gBAAf,SAAgC8Q,GATf,SAAC/I,GAClB,IAAIC,EACFD,EAAO,IAAP,WAAiBE,KAAKC,MAAMH,EAAO,KAAQE,KAAKC,MAAMH,EAAO,IAC3DI,EACFJ,EAAO,GAAK,GAAZ,WAAqBE,KAAKC,MAAMH,EAAO,KAAQE,KAAKC,MAAMH,EAAO,IACnE,MAAM,GAAN,OAAUC,EAAV,YAAqBG,GAI0BsF,CAAWiG,MCY/CK,GAvCO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACpC,EAA8B1P,mBAAS,IAAvC,oBAAO2P,EAAP,KAAgBC,EAAhB,KAEAtU,qBAAU,WACRuU,IACAC,UAAUC,aAAaC,eAAiBH,IACvC,IAEH,IAAMA,EAAU,uCAAG,8BAAAjb,EAAA,sEAEKkb,UAAUC,aAAaE,mBAF5B,OAEXN,EAFW,OAGXO,EAAeP,EAAQjY,KAAI,SAACyY,GAChC,GAAoB,eAAhBA,EAAOC,MAA6C,YAApBD,EAAOE,SACzC,OAAOF,KAGXP,EAAWM,GACNT,GACHC,EAAeC,EAAQ,IAVR,2CAAH,qDAuBhB,OACE,uBAAKlU,UAAU,iBAAf,UACE,iDACA,sBAAKA,UAAU,aAAf,SAZc,WAChB,IAAM6U,EAAaX,EAAQjY,KAAI,SAACyY,GAC9B,GAAIA,EACF,OAAO,kCAA+BA,EAAOxS,OAAzBwS,EAAOE,aAG/B,OAAO,kCAASC,IAMeC,SCkMpBnV,gBAVS,SAACC,GACvB,MAAO,CACL6I,MAAO7I,EAAM6I,MACbrL,OAAQwC,EAAMxC,OACd5C,SAAUoF,EAAMpF,SAChBN,YAAa0F,EAAMzF,MAAMD,YACzB6a,cAAenV,EAAMzF,MAAM4a,iBAIS,CACtCxb,cACAE,eACAE,iBACAV,aACAqB,gBACAT,iBANa8F,EA1NM,SAAC,GAcf,IAbLzF,EAaI,EAbJA,YACAuO,EAYI,EAZJA,MACArL,EAWI,EAXJA,OACA5C,EAUI,EAVJA,SACAtB,EASI,EATJA,SACAD,EAQI,EARJA,UACAM,EAOI,EAPJA,WACAE,EAMI,EANJA,YACAE,EAKI,EALJA,cACAE,EAII,EAJJA,aACAS,EAGI,EAHJA,aACAmF,EAEI,EAFJA,MACAsV,EACI,EADJA,cAEMC,EAAc,CAAEzV,KAAM,YAAalF,GAAI,KAK7C,EAA0CkK,mBAASyQ,GAAnD,oBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwC3Q,mBAASyQ,GAAjD,oBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8C7Q,mBAASyQ,GAAvD,oBAAO1N,EAAP,KAAwBC,EAAxB,KACA,EAAwChD,oBAN/B,IAAIsG,MAAOwK,cAAcC,UAAU,EAAG,KAM/C,oBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CjR,oBAAS,GAAnD,oBAAOkR,EAAP,KAAsBC,EAAtB,KACA,EAA0CnR,oBAAS,GAAnD,oBAAOoR,EAAP,KAAsBC,EAAtB,KAEA,EAAkCrR,mBAAS,IAA3C,oBAAO8G,EAAP,KAAkBwK,EAAlB,KACA,EAAgCtR,mBAAS,IAAzC,oBAAO6G,EAAP,KAAiB4B,EAAjB,KACA,EAAsCzI,mBAAS,IAA/C,oBAAOlH,EAAP,KAAoB+L,EAApB,KAEAvJ,qBAAU,WACR5G,EAAUC,KACT,IAEH2G,qBAAU,WACJ3F,GACFX,EAAWW,EAAYG,MAExB,CAACH,IAEJ2F,qBAAU,WACR,GAAI3F,EAAa,CACf,IAAM4b,EAAO5b,EAAYuO,MAAMxM,KAAI,SAAC5B,GAAD,OAAQoO,EAAMpO,MACjD2S,EAAY8I,MAEb,CAACrN,IAEJ5I,qBAAU,WACJsV,IAAiBH,IACnBvb,EAAY0b,EAAa9a,IACzB+O,EAAe,IACf7B,EAAmByN,MAEpB,CAACG,IAEJtV,qBAAU,WACR,GAAIsV,IAAiBH,EAAa,CAChC,IAAMc,EAAOX,EAAavX,UAAU3B,KAAI,SAAC5B,GAAD,OAAQ+C,EAAO/C,MACvDwb,EAAaC,MAEd,CAAC1Y,IAEJyC,qBAAU,WACJoV,IAAkBD,GACpBrb,EAAcsb,EAAc5a,MAE7B,CAAC4a,IAEJpV,qBAAU,WACR,GAAIoV,IAAkBD,EAAa,CACjC,IAAMc,EAAOb,EAAcza,SAASyB,KAAI,SAAC5B,GAAD,OAAQG,EAASH,MACzD+O,EAAe0M,MAEhB,CAACtb,IAEJqF,qBAAU,WACmB,MAAvByH,EAAgBjN,IAClBR,EAAayN,EAAgBjN,MAE9B,CAACiN,IAEJzH,qBAAU,WACJ8V,IAAkBZ,IACpBa,GAAiB,GACjBF,GAAiB,GACjBjd,YAAW,WACTid,GAAiB,KAChB,MAEDX,IAAkBY,GACpBC,GAAiB,KAElB,CAACb,IAEJ,IAAMgB,EAAW,SAACC,EAAWC,EAAU/Q,GACrC,IAKMnE,EADI,CAAIiU,GAAJ,oBAAoBgB,IACT/Z,KAAI,SAACia,GACxB,GAAIA,EAAM,CACR,IAAM3W,EAAO2W,EAAK3W,MAAQ2W,EAAK1Y,MAC/B,OACE,yBAAQyD,MAAOiV,EAAK7b,GAApB,SACGkF,GAD0B2W,EAAK7b,QAMxC,OACE,yBAAQiH,SAhBO,SAACf,GAChB,IAAM4V,EAAWH,EAAU7Z,MAAK,SAAC+Z,GAAD,OAAUA,EAAK7b,KAAOkG,EAAElF,OAAO4F,SAC/DgV,EAASE,IAcmBlV,MAAOiE,EAAa7K,GAAhD,SACG0G,KAmBDqV,EAAe,WACnB,SAAI3W,IAAS8V,GAAuC,MAAvBjO,EAAgBjN,KAmB/C,OACE,uBAAK2F,UAAU,gBAAf,UACE,uBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,sBAAf,mBACA,+BACG9F,GACCkR,GACA2K,EAAS3K,EAAUgK,EAAiBD,QAI1C,uBAAKnV,UAAU,2BAAf,UACE,sBAAKA,UAAU,sBAAf,oBACA,+BACGmV,GACC9J,GACA0K,EAAS1K,EAAW6J,EAAkBD,QAI5C,uBAAKjV,UAAU,2BAAf,UACE,sBAAKA,UAAU,sBAAf,sBACA,+BACGiV,GACC5X,GACA0Y,EAAS1Y,EAAakK,EAAoBD,QAIhD,uBAAKtH,UAAU,2BAAf,UACE,sBAAKA,UAAU,sBAAf,mBACA,+BACE,wBACErH,KAAK,OACLsI,MAAOsU,EACPjU,SAAU,SAACf,GAAD,OAAOiV,EAAgBjV,EAAElF,OAAO4F,QAC1CjB,UAAU,kBAIhB,uBAAMuC,SA1EO,SAAChC,GAEhB,GADAA,EAAEsN,iBACEuI,IAAgB,CAClB,IAAMxb,EAAO,IAAIyb,KAAK,CAAC5W,GAAQ,gBAAiB,CAAE6W,aAAczL,SAOhEvQ,EANa,CACXkF,KAAM+V,EACN5a,QAAQ,EACRC,KAAM,CAACA,IAGU0M,EAAgBjN,MAgEnC,SACE,yBACE2F,UAAS,UACPoW,IAAiB,yBAA2B,mBAE9Czd,KAAK,SAJP,2BASD8c,GA9DI,sBAAKzV,UAAU,iBAAf,2CA+DJ2V,GA1DD,uBAAK3V,UAAU,eAAf,UACE,8CACA,sBAAKsD,IAAI,uBAAuBtD,UAAU,sBCzEnCuW,GA9EE,SAAC,GAAe,IAAbhH,EAAY,EAAZA,MAClB,EAAkChL,oBAAS,GAA3C,oBACA,GADA,UACsCA,oBAAS,IAA/C,oBAAOuM,EAAP,KAAoB0F,EAApB,KACA,EAA0BjS,qBAA1B,oBAAO9E,EAAP,KAAcgX,EAAd,KACA,EAAsClS,qBAAtC,oBAAOyP,EAAP,KAAoBC,EAApB,KACA,EAA0B1P,mBAAS,IAAnC,oBAAOjM,EAAP,KAAcoe,EAAd,KAEMC,EAAgB7Q,mBAEtBjG,oBAAS,sBAAC,sBAAA1G,EAAA,sDAERwd,EAAc1Z,QAAU,IAAI2Z,KAAKL,SAAS,CACxCM,QAAS,2CAHH,2CAKP,IAEH,IAAMC,EAAQ,uCAAG,4BAAA3d,EAAA,yDAIV2X,EAJU,0CAMLuD,UAAUC,aAAayC,aAAa,CACxCtX,MAAO,CACLmV,SAAUZ,EAAYY,YARf,uBAWL+B,EAAc1Z,QAAQ+Z,YAXjB,uBAYLL,EAAc1Z,QAAQga,aAZjB,OAaXN,EAAc1Z,QAAQia,iBAEtBV,GAAe,GAfJ,kDAiBXje,QAAQD,MAAR,MAEAoe,EAAS,EAAD,IAnBG,iDAsBMC,EAAc1Z,QAAQka,gBAtB5B,QAsBPC,EAtBO,OAuBbX,EAASW,GAETZ,GAAe,GAzBF,0DAAH,qDAuCd,OACE,uBAAKxW,UAAW8Q,EAAc,qBAAuB,WAArD,UACE,+BAAMxY,IACN,sBAAK0H,UAAU,qBAAf,SACGP,IAAUqR,GACT,eAAC,GAAD,CAAUrR,MAAOA,EAAOqR,YAAaA,MAbzC,sBAAK9Q,UAAU,mBAAf,SACE,sBAAKC,QAAS6W,EAAU9W,UAAU,eAAlC,SACG8Q,EAAc,OAAS,aAiB5B,eAAC,GAAD,CAAOA,YAAaA,IAEpB,eAAC,GAAD,CACEkD,YAAaA,EACbC,eAAgBA,IAGlB,eAAC,GAAD,CAAc/a,SAAUqW,EAAME,OAAOvW,SAAUuG,MAAOA,QCnB7CE,gBAPS,SAACC,GACvB,MAAO,CACLyX,SAAUzX,EAAMoF,KAAKuL,WACrBjY,MAAOsH,EAAMtH,MAAMA,SAIiB,CAAEgf,U7BgCjB,yDAAM,WAAOpf,GAAP,eAAAiB,EAAA,+EAEJC,EAAWC,IAAI,SAFX,QAErBjB,EAFqB,QAGdC,KACXH,EAAS,CAAES,KAAMtD,EAASuD,QAASR,EAASC,OAE5CH,EAASW,MANgB,gDAS3BX,EAASD,GAAa,EAAD,KATM,yDAAN,wD6BhCV0H,EA9CH,SAAC,GAAoC,IAAlC0X,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAAWhf,EAAY,EAAZA,MAClCuH,qBAAU,WACJwX,GACFC,MAED,IAEH,IAAMC,EAAWjf,EAAQ,eAAiB,GAE1C,OACE,uCACE,eAAC,GAAD,IACA,sBAAK0H,UAAS,oBAAeuX,GAA7B,SACE,eAAC,IAAD,CAAQxe,QAASA,GAAjB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOye,KAAK,IAAIC,OAAK,EAACrV,UAAWuO,KACjC,eAAC,IAAD,CAAO6G,KAAK,UAAUC,OAAK,EAACrV,UAAWsV,KAFzC,IAGE,eAAC,IAAD,CAAOF,KAAK,UAAUC,OAAK,EAACrV,UAAWuV,KAHzC,IAIE,eAAC,IAAD,CACEH,KAAK,QACLC,OAAK,EACLG,OAAQ,SAACC,GACP,OAAKR,EAIE,eAAC,GAAD,eAAUQ,KAHf9e,GAAQC,KAAK,WACN,SAKb,eAAC,IAAD,CAAOwe,KAAK,QAAQC,OAAK,EAACrV,UAAWwO,KACrC,eAAC,IAAD,CAAO4G,KAAK,oBAAoBC,OAAK,EAACrV,UAAWmU,KACjD,eAAC,IAAD,CAAOiB,KAAK,aAAapV,UAAW0V,kB,UC7C1CC,GAAgB,CAClBxH,YAAY,EACZxL,KAAM,MCFJiT,GAAe,CACjBjK,MAAM,EACNV,OAAQ,GACR3D,YAAa,MCQFuO,eAAgB,CAC3BvU,KAAMwU,KACNlT,KFRW,WAAoC,IAAnCpF,EAAkC,uDAA1BmY,GAAeI,EAAW,uCAC9C,OAAQA,EAAOxf,MACX,KAAKtD,EACD,OAAO,2BAAKuK,GAAZ,IAAmB2Q,YAAY,EAAMxL,KAAMoT,EAAOvf,UACtD,KAAKtD,EACD,OAAO,2BAAKsK,GAAZ,IAAmB2Q,YAAY,EAAOxL,KAAM,OAChD,KAAKxO,EACD,IAAQwO,EAASnF,EAATmF,KAER,OADAA,EAAK5K,MAAMnB,KAAKmf,EAAOvf,QAAQyB,IACxB,2BAAKuF,GAAZ,IAAmBmF,SACvB,QACI,OAAOnF,IEFf6I,MCbW,WAAyB,IAAxB7I,EAAuB,uDAAf,GAAIuY,EAAW,uCAEnC,OAAQA,EAAOxf,MAEX,KAAKnD,EACD,OAAO,2BAAKoK,GAAUtD,KAAE8b,QAAQD,EAAOvf,QAAS,OACpD,KAAK3C,EACD,OAAO,2BAAK2J,GAAZ,mBAAoBuY,EAAOvf,QAAQyB,GAAK8d,EAAOvf,UACnD,KAAKnC,EACD,IAAM4hB,EAAczY,EAAMuY,EAAOvf,QAAQyB,IAArB,SACdie,EAAcH,EAAOvf,QAAQ+O,SAC/B4Q,EAAmB,GACvB,GAAIF,EAAcC,EACd,cAAiBra,OAAOC,OAAO0B,GAA/B,eAAuC,CAAlC,IAAIsW,EAAI,KACT,GAAIA,EAAKvO,UAAY2Q,GAAepC,EAAKvO,SAAW0Q,EAAa,CAC7D,IAAMG,EAAMtC,EAAKvO,SACjB4Q,EAAiBrC,EAAK7b,IAAtB,2BAAiC6b,GAAjC,IAAuCvO,SAAU6Q,EAAM,KAInE,GAAIH,EAAcC,EACd,cAAiBra,OAAOC,OAAO0B,GAA/B,eAAuC,CAAlC,IAAIsW,EAAI,KACT,GAAIA,EAAKvO,SAAW0Q,GAAenC,EAAKvO,UAAY2Q,EAAa,CAC7D,IAAME,EAAMtC,EAAKvO,SACjB4Q,EAAiBrC,EAAK7b,IAAtB,2BAAiC6b,GAAjC,IAAuCvO,SAAU6Q,EAAM,KAInE,OAAO,2BAAK5Y,GAAZ,mBAAoBuY,EAAOvf,QAAQyB,GAAK8d,EAAOvf,SAAY2f,GAC/D,KAAKvhB,EACD,IAAMyhB,EAAiBxa,OAAOC,OAAO5B,KAAEoc,KAAK9Y,EAAOA,EAAM1F,cAAckE,QAAO,SAAA4L,GAAC,OAAIA,EAAErC,SAAWwQ,EAAOvf,QAAQ+O,YAK/G,OAJA8Q,EAAe5a,SAAQ,SAACa,GACpBA,EAAKiJ,SAAWjJ,EAAKiJ,SAAW,YAE7B/H,EAAMuY,EAAOvf,QAAQyB,IACrB,2BAAKuF,GAAUtD,KAAE8b,QAAQK,EAAgB,OACpD,KAAK5gB,GAED,OADA+H,EAAMuY,EAAOvf,QAAQ8F,MAAM6L,QAAU4N,EAAOvf,QAAQ2R,QAC7C,eAAK3K,GAChB,KAAKzJ,EACD,IAAMwiB,EAAY/Y,EAAMuY,EAAOvf,QAAQ8F,MAEvC,OADAia,EAAU/a,UAAU5E,KAAKmf,EAAOvf,QAAQ4E,MAAMnD,IACvC,2BAAKuF,GAAZ,mBAAoB+Y,EAAUte,GAAKse,IACvC,KAAK/hB,EACD,GAAIuhB,EAAOvf,QAAQ8F,KAAKoK,IAAK,CAAC,IAAD,EACnB8P,EAAUhZ,EAAMuY,EAAOvf,QAAQ8F,KAAKoK,KAC1C8P,EAAQhb,UAAU5E,KAAKmf,EAAOvf,QAAQ4E,MAAMnD,IAC5C,IAAMwe,EAAUjZ,EAAMuY,EAAOvf,QAAQ8F,KAAKqK,KAE1C,OADA8P,EAAQjb,UAAYib,EAAQjb,UAAUQ,QAAO,SAAA/D,GAAE,OAAIA,IAAO8d,EAAOvf,QAAQ4E,MAAMnD,MACxE,2BAAKuF,GAAZ,wBAAoBgZ,EAAQve,GAAKue,GAAjC,eAA2CC,EAAQxe,GAAKwe,GAAxD,IAEA,OAAOjZ,EAEf,KAAKzI,EACD,IAAM2hB,EAAiBlZ,EAAMuY,EAAOvf,QAAQ8F,MAC5C,GAAIoa,EAAgB,CAChB,IAAMC,EAAeD,EAAelb,UAAUQ,QAAO,SAAA/D,GAAE,OAAIA,IAAO8d,EAAOvf,QAAQ4E,MAAMnD,MAEvF,OADAye,EAAelb,UAAYmb,EACpB,2BAAKnZ,GAAZ,mBAAoBkZ,EAAeze,GAAKye,IAEhD,QACI,OAAOlZ,ID/CfxC,OEbW,WAAyB,IAAxBwC,EAAuB,uDAAf,GAAIuY,EAAW,uCAEnC,OAAQA,EAAOxf,MAEX,KAAK7C,EACD,OAAO,2BAAK8J,GAAUtD,KAAE8b,QAAQD,EAAOvf,QAAS,OACpD,KAAKzC,EACD,OAAO,2BAAKyJ,GAAZ,mBAAoBuY,EAAOvf,QAAQ4E,MAAMnD,GAAK8d,EAAOvf,QAAQ4E,QACjE,KAAK5G,EACD,IAAMoiB,EAAWpZ,EAAMuY,EAAOvf,QAAQ4E,MAAMnD,IACtC4e,EAAWd,EAAOvf,QAAQ4E,MAGhC,OAFAyb,EAAS3R,gBAAkB0R,EAAS1R,gBACpC2R,EAASzS,eAAiBwS,EAASxS,eAC5B,2BAAK5G,GAAZ,mBAAoBqZ,EAAS5e,GAAK4e,IACtC,KAAK9hB,EAED,cADOyI,EAAMuY,EAAOvf,QAAQ4E,MAAMnD,IAC3B,eAAKuF,GAChB,KAAK9H,GACD,IAAMohB,EAAetZ,EAAMuY,EAAOvf,QAAQgB,SAE1C,OADAsf,EAAa5R,gBAAkB6Q,EAAOvf,QAAQgD,QACvC,2BAAKgE,GAAZ,mBAAoBsZ,EAAa7e,GAAjC,eAA2C6e,KAC/C,KAAKnhB,GACD,IAAMohB,EAAcvZ,EAAMuY,EAAOvf,QAAQgB,SAEzC,OADAuf,EAAY3S,eAAiB2R,EAAOvf,QAAQ4D,OACrC,2BAAKoD,GAAZ,mBAAoBuZ,EAAY9e,GAAhC,eAA0C8e,KAC9C,KAAK9iB,EACD,IAAM+iB,EAAaxZ,EAAMuY,EAAOvf,QAAQ4E,OAGxC,OAFA4b,EAAW5e,SAASxB,KAAKmf,EAAOvf,QAAQgD,QAAQvB,IAChD+e,EAAW9R,gBAAkB6Q,EAAOvf,QAAQgD,QACrC,2BAAKgE,GAAZ,mBAAoBwZ,EAAW/e,GAAK+e,IACxC,KAAKhiB,EACD,IAAMiiB,EAAkBzZ,EAAMuY,EAAOvf,QAAQ4E,OAC7C,GAAI6b,EAAiB,CACjB,IAAMC,EAAiBD,EAAgB7e,SAAS4D,QAAO,SAAA/D,GAAE,OAAIA,IAAO8d,EAAOvf,QAAQgD,QAAQvB,MAE3F,OADAgf,EAAgB7e,SAAW8e,EACpB,2BAAK1Z,GAAZ,mBAAoByZ,EAAgBhf,GAAKgf,IAEjD,QACI,OAAOzZ,IFxBfpF,SGfW,WAAyB,IAAxBoF,EAAuB,uDAAf,GAAIuY,EAAW,uCAEnC,OAAQA,EAAOxf,MAEX,KAAK5C,EACD,OAAO,2BAAK6J,GAAUtD,KAAE8b,QAAQD,EAAOvf,QAAS,OACpD,KAAKvC,EAEL,KAAKQ,EACD,OAAO,2BAAK+I,GAAZ,mBAAoBuY,EAAOvf,QAAQgD,QAAQvB,GAAK8d,EAAOvf,QAAQgD,UACnE,KAAKxE,EAED,cADOwI,EAAMuY,EAAOvf,QAAQgD,QAAQvB,IAC7B,eAAKuF,GAChB,KAAKtJ,EACD,IAAMijB,EAAe3Z,EAAMuY,EAAOvf,QAAQgD,SAE1C,OADA2d,EAAa9e,QAAQzB,KAAKmf,EAAOvf,QAAQ4D,OAAOnC,IACzC,2BAAKuF,GAAZ,mBAAoB2Z,EAAalf,GAAKkf,IAC1C,KAAKliB,EACD,IAAMmiB,EAAoB5Z,EAAMuY,EAAOvf,QAAQgD,SAC/C,GAAI4d,EAAmB,CACnB,IAAMC,EAAgBD,EAAkB/e,QAAQ2D,QAAO,SAAA/D,GAAE,OAAIA,IAAO8d,EAAOvf,QAAQ4D,OAAOnC,MAE1F,OADAmf,EAAkB/e,QAAUgf,EACrB,2BAAK7Z,GAAZ,mBAAoB4Z,EAAkBnf,GAAKmf,IAEnD,QACI,OAAO5Z,IHTfnF,QIXW,WAAyB,IAAxBmF,EAAuB,uDAAf,GAAIuY,EAAW,uCACrC,OAAQA,EAAOxf,MACb,KAAK3C,EACH,OAAO,2BAAK4J,GAAUtD,KAAE8b,QAAQD,EAAOvf,QAAS,OAClD,KAAKtC,EACH,OAAO,2BAAKsJ,GAAZ,mBAAoBuY,EAAOvf,QAAQ4D,OAAOnC,GAAK8d,EAAOvf,QAAQ4D,SAChE,KAAK1F,EACH,OAAO,2BAAK8I,GAAZ,mBAAoBuY,EAAOvf,QAAQyB,GAAK8d,EAAOvf,UACjD,KAAKvB,EAEH,cADOuI,EAAMuY,EAAOvf,QAAQ4D,OAAOnC,IAC5B,eAAKuF,GACd,QACE,OAAOA,IJAT5B,UKjBW,WAAyB,IAAxB4B,EAAuB,uDAAf,GAAIuY,EAAW,uCAEnC,OAAQA,EAAOxf,MAEX,KAAKhD,EACD,OAAO,2BAAKiK,GAAUtD,KAAE8b,QAAQD,EAAOvf,QAAS,OACpD,KAAKlD,EAEL,KAAKU,EACD,OAAO,2BAAKwJ,GAAZ,mBAAoBuY,EAAOvf,QAAQyB,GAAK8d,EAAOvf,UACnD,KAAKlC,EACD,IAAM2hB,EAAczY,EAAMuY,EAAOvf,QAAQyB,IAArB,SACdie,EAAcH,EAAOvf,QAAQ+O,SAC/B4Q,EAAmB,GACvB,GAAIF,EAAcC,EACd,cAAiBra,OAAOC,OAAO0B,GAA/B,eAAuC,CAAlC,IAAIsW,EAAI,KACT,GAAIA,EAAKvO,UAAY2Q,GAAepC,EAAKvO,SAAW0Q,EAAa,CAC7D,IAAMG,EAAMtC,EAAKvO,SACjB4Q,EAAiBrC,EAAK7b,IAAtB,2BAAiC6b,GAAjC,IAAuCvO,SAAU6Q,EAAM,KAInE,GAAIH,EAAcC,EACd,cAAiBra,OAAOC,OAAO0B,GAA/B,eAAuC,CAAlC,IAAIsW,EAAI,KACT,GAAIA,EAAKvO,SAAW0Q,GAAenC,EAAKvO,UAAY2Q,EAAa,CAC7D,IAAME,EAAMtC,EAAKvO,SACjB4Q,EAAiBrC,EAAK7b,IAAtB,2BAAiC6b,GAAjC,IAAuCvO,SAAU6Q,EAAM,KAInE,OAAO,2BAAK5Y,GAAZ,mBAAoBuY,EAAOvf,QAAQyB,GAAK8d,EAAOvf,SAAY2f,GAC/D,KAAKthB,SACM2I,EAAM1F,YACb,IAAMue,EAAiBxa,OAAOC,OAAO0B,GAAOxB,QAAO,SAAAsb,GAAC,OAAIA,EAAE/R,SAAWwQ,EAAOvf,QAAQ+O,YAKpF,OAJA8Q,EAAe5a,SAAQ,SAAChB,GACpBA,EAAS8K,SAAW9K,EAAS8K,SAAW,YAErC/H,EAAMuY,EAAOvf,QAAQyB,IACrB,2BAAKuF,GAAUtD,KAAE8b,QAAQK,EAAgB,OACpD,KAAKviB,EACD,IAAMyjB,EAAgB/Z,EAAMuY,EAAOvf,QAAQiE,UAE3C,OADA8c,EAAcpb,MAAMvF,KAAKmf,EAAOvf,QAAQgE,aAAavC,IAC9C,2BAAKuF,GAAZ,mBAAoB+Z,EAActf,GAAKsf,IAC3C,KAAKziB,EACD,IAAM0iB,EAAqBha,EAAMuY,EAAOvf,QAAQiE,UAChD,GAAI+c,EAAoB,CACpB,IAAMC,EAAcD,EAAmBrb,MAAMH,QAAO,SAAA/D,GAAE,OAAIA,IAAO8d,EAAOvf,QAAQgE,aAAavC,MAE7F,OADAuf,EAAmBrb,MAAQsb,EACpB,2BAAKja,GAAZ,mBAAoBga,EAAmBvf,GAAKuf,IAEpD,QACI,OAAOha,ILjCfzB,cMlBW,WAAyB,IAAxByB,EAAuB,uDAAf,GAAIuY,EAAW,uCAEnC,OAAQA,EAAOxf,MAEX,KAAKlD,EACD,OAAO,2BAAKmK,GAAUtD,KAAE8b,QAAQD,EAAOvf,QAAS,OACpD,KAAK1C,EACD,OAAO,2BAAK0J,GAAZ,mBAAoBuY,EAAOvf,QAAQgE,aAAavC,GAAK8d,EAAOvf,QAAQgE,eACxE,KAAKjG,EACD,IAAM0hB,EAAczY,EAAMuY,EAAOvf,QAAQgE,aAAavC,IAAlC,SACdie,EAAcH,EAAOvf,QAAQgE,aAAa+K,SAC5C4Q,EAAmB,GAEvB,GAAIF,EAAcC,EACd,cAAiBra,OAAOC,OAAO0B,GAA/B,eAAuC,CAAlC,IAAIsW,EAAI,KACT,GAAIA,EAAKvO,UAAY2Q,GAAepC,EAAKvO,SAAW0Q,EAAa,CAC7D,IAAMG,EAAMtC,EAAKvO,SACjB4Q,EAAiBrC,EAAK7b,IAAtB,2BAAiC6b,GAAjC,IAAuCvO,SAAU6Q,EAAM,KAInE,GAAIH,EAAcC,EACd,cAAiBra,OAAOC,OAAO0B,GAA/B,eAAuC,CAAlC,IAAIsW,EAAI,KACT,GAAIA,EAAKvO,SAAW0Q,GAAenC,EAAKvO,UAAY2Q,EAAa,CAC7D,IAAME,EAAMtC,EAAKvO,SACjB4Q,EAAiBrC,EAAK7b,IAAtB,2BAAiC6b,GAAjC,IAAuCvO,SAAU6Q,EAAM,KAKnE,OAAO,2BAAK5Y,GAAZ,mBAAoBuY,EAAOvf,QAAQgE,aAAavC,GAAK8d,EAAOvf,QAAQgE,cAAiB2b,GACzF,KAAKrhB,EACD,IAAMuhB,EAAiBxa,OAAOC,OAAO0B,GAAOxB,QAAO,SAAAsb,GAAC,OAAIA,EAAE/R,SAAWwQ,EAAOvf,QAAQgE,aAAa+K,YAKjG,OAJA8Q,EAAe5a,SAAQ,SAACwB,GACpBA,EAAKsI,SAAWtI,EAAKsI,SAAW,YAE7B/H,EAAMuY,EAAOvf,QAAQgE,aAAavC,IAClC,eAAKuF,GAChB,KAAKxI,EACD,IAAK,IAAMiD,KAAMuF,EACTA,EAAMvF,GAAIuB,UAAYuc,EAAOvf,QAAQgD,QAAQvB,KAC7CuF,EAAMvF,GAAIuB,QAAU,KACpBgE,EAAMvF,GAAImC,OAAS,MAG3B,OAAO,eAAKoD,GAChB,KAAKvI,EACD,IAAK,IAAMgD,KAAMuF,EACTA,EAAMvF,GAAImC,SAAW2b,EAAOvf,QAAQ4D,OAAOnC,KAC3CuF,EAAMvF,GAAImC,OAAS,MAG3B,OAAO,eAAKoD,GAChB,QACI,OAAOA,INnCfzF,MONW,WAAyB,IAAD,UAAvByF,EAAuB,uDAAf,GAAIuY,EAAW,uCACrC,OAAQA,EAAOxf,MACb,KAAK/C,EACH,OAAO,2BACFgK,GADL,wBAEGuY,EAAOvf,QAAQyB,GAAK8d,EAAOvf,SAF9B,6BAGeuf,EAAOvf,SAHtB,IAKF,KAAK/C,EACH,OAAO,2BAAK+J,GAAUtD,KAAE8b,QAAQD,EAAOvf,QAAS,OAClD,KAAKrC,EAEL,KAAKQ,EACH,OAAO,2BAAK6I,GAAZ,mBAAoBuY,EAAOvf,QAAQyB,GAAK8d,EAAOvf,UACjD,KAAKtB,EAEH,cADOsI,EAAMuY,EAAOvf,QAAQyB,IACrB,eAAKuF,GACd,KAAK3J,EACH,IAAQiE,EAAgB0F,EAAhB1F,YAER,OADAA,EAAYuO,MAAMzP,KAAKmf,EAAOvf,QAAQyB,IAC/B,2BAAKuF,GAAZ,wBAAoB1F,EAAYG,GAAKH,GAArC,6BAAkDA,GAAlD,IACF,KAAKlD,EACH,IAAMwR,EAAO5I,EAAM1F,YACb4f,EAAWtR,EAAKC,MAAMrK,QAAO,SAAC/D,GAAD,OAAQA,IAAO8d,EAAOvf,QAAQyB,MAEjE,OADAmO,EAAKC,MAAQqR,EACN,2BAAKla,GAAZ,wBAAoB4I,EAAKnO,GAAKmO,GAA9B,6BAAiDA,GAAjD,IACF,KAAKpS,EACH,IAAM2jB,EAAena,EAAM1F,YAE3B,OADA6f,EAAa/b,UAAUhF,KAAKmf,EAAOvf,QAAQyB,IACpC,2BACFuF,GADL,wBAEGma,EAAa1f,GAAK0f,GAFrB,6BAGeA,GAHf,IAKF,KAAK9iB,EACH,IAAM+iB,EAAQpa,EAAM1F,YACd+f,EAAeD,EAAMhc,UAAUI,QACnC,SAAC/D,GAAD,OAAQA,IAAO8d,EAAOvf,QAAQyB,MAGhC,OADA2f,EAAMhc,UAAYic,EACX,2BAAKra,GAAZ,wBAAoBoa,EAAM3f,GAAK2f,GAA/B,6BAAmDA,GAAnD,IACF,KAAK1kB,EACH,OAAOgH,KAAEoc,KAAK9Y,EAAOA,EAAM1F,aAC7B,KAAK1D,EACH,OAAO,2BAAKoJ,GAAZ,IAAmBmV,eAAe,IACpC,KAAKze,EACH,OAAO,2BAAKsJ,GAAZ,IAAmBmV,eAAe,IACpC,QACE,OAAOnV,IPzCTtH,MQpBW,WAAyB,IAAxBsH,EAAuB,uDAAf,GAAIuY,EAAW,uCACnC,OAAQA,EAAOxf,OACNpD,EACM,CAAE+C,MAAO6f,EAAOvf,SAEhBgH,GRgBfH,MDhBW,WAAmC,IAAlCG,EAAiC,uDAAzBoY,GAAcG,EAAW,uCAC7C,OAAQA,EAAOxf,MACX,KAAKpB,EACD,OAAO,2BAAKqI,GAAZ,IAAmBmO,MAAM,EAAMD,OAAO,IAC1C,KAAKtW,GACD,OAAO,2BAAKoI,GAAZ,IAAmBmO,MAAM,EAAOD,OAAO,IAC3C,KAAKrW,GACD,MAAyB0gB,EAAOvf,QAAxByG,EAAR,EAAQA,KAAMK,EAAd,EAAcA,OACd,OAAO,2BAAKE,GAAZ,IAAmB8J,YAAarK,EAAM0O,MAAM,EAAMrO,WACtD,KAAKhI,GACD,OAAO,2BAAKkI,GAAZ,IAAmB8J,YAAayO,EAAOvf,UAC3C,KAAKvB,EACD,OAAIuI,EAAM8J,aAAeyO,EAAOvf,QAAQ4D,OAAOnC,KAAOuF,EAAM8J,YAAYjK,MAC7D,eAAKuY,IAELpY,EAMf,KAAKjI,GACD,OAAO,2BAAKiI,GAAZ,IAAmByN,OAAQ8K,EAAOvf,UACtC,KAAKhB,GACD,OAAO,eAAKogB,IAChB,QACI,OAAOpY,MUrBboY,GAAe,GAEPljB,aAAaC,QAAQ,WAG/BijB,GAAahT,KAAO,CAAEuL,YAAY,IAGtC,IAAM2J,GAAmBjf,OAAOkf,sCAAwCC,IAClEC,GAAQC,YACVC,GACAvC,GACAkC,GAAiBM,YAAgBC,OAGrCzW,IAAS4T,OACL,eAAC,IAAD,CAAUyC,MAAOA,GAAjB,SACI,eAAC,GAAD,MAEJnX,SAASU,cAAc,Y","file":"static/js/main.74fa0501.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = {};\n\nif (process.env.NODE_ENV === 'production') {\n    url.baseURL = 'https://exploring-the-space.com/api';\n} else {\n    url.baseURL = 'http://localhost:3001/api'\n}\n\nconst instance = axios.create(url);\n\ninstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = token;\n        }\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\n\n\nexport default instance;","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const ERROR = 'ERROR';\n\nexport const FETCH_TIERS = 'FETCH_TIERS';\nexport const FETCH_PLAYLISTSONGS = 'FETCH_PLAYLISTSONGS';\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\nexport const FETCH_PLAYLISTS = 'FETCH_PLAYLISTS';\nexport const FETCH_BAND = 'FETCH_BAND';\nexport const FETCH_BANDS = 'FETCH_BANDS';\nexport const FETCH_TITLES = 'FETCH_TITLES';\nexport const FETCH_VERSIONS = 'FETCH_VERSIONS';\nexport const FETCH_BOUNCES = 'FETCH_BOUNCES';\n\nexport const FETCH_TITLE = 'FETCH_TITLE';\nexport const FETCH_VERSION = 'FETCH_VERSION';\nexport const FETCH_BOUNCE = 'FETCH_BOUNCE';\n\nexport const CREATE_TIER = 'CREATE_TIER';\nexport const CREATE_PLAYLISTSONG = 'CREATE_PLAYLISTSONG';\nexport const CREATE_TITLE = 'CREATE_TITLE';\nexport const CREATE_PLAYLIST = 'CREATE_PLAYLIST';\nexport const CREATE_VERSION = 'CREATE_VERSION';\nexport const CREATE_BOUNCE = 'CREATE_BOUNCE';\nexport const CREATE_BAND = 'CREATE_BAND';\n\nexport const UPLOAD_STARTED = 'UPLOAD_STARTED';\n\nexport const EDIT_TIER = 'EDIT_TIER';\nexport const EDIT_PLAYLIST = 'EDIT_PLAYLIST';\nexport const EDIT_PLAYLISTSONG = 'EDIT_PLAYLISTSONG';\nexport const EDIT_TITLE = 'EDIT_TITLE';\nexport const EDIT_VERSION = 'EDIT_VERSION';\nexport const EDIT_BOUNCE = 'EDIT_BOUNCE';\nexport const EDIT_BAND = 'EDIT_BAND';\n\nexport const DELETE_TIER = 'DELETE_TIER';\nexport const DELETE_PLAYLIST = 'DELETE_PLAYLIST';\nexport const DELETE_PLAYLISTSONG = 'DELETE_PLAYLISTSONG';\nexport const DELETE_TITLE = 'DELETE_TITLE';\nexport const DELETE_VERSION = 'DELETE_VERSION';\nexport const DELETE_BOUNCE = 'DELETE_BOUNCE';\nexport const DELETE_BAND = 'DELETE_BAND';\n\nexport const PLAY_AUDIO = 'PLAY_AUDIO';\nexport const PAUSE_AUDIO = 'PAUSE_AUDIO';\nexport const QUEUE_SONGS = 'QUEUE_SONGS';\nexport const NEXT_SONG = 'NEXT_SONG';\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\nexport const INITIALIZE_AUDIO = 'INITIALIZE_AUDIO';\nexport const ORDER_TIER = 'ORDER_TIER';\n\nexport const SELECT_VERSION = 'SELECT_VERSION';\nexport const SELECT_BOUNCE = 'SELECT_BOUNCE';\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import greenhouse from '../apis/greenhouse';\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  ERROR,\n  FETCH_BAND,\n  FETCH_BANDS,\n  FETCH_TIERS,\n  FETCH_TITLES,\n  FETCH_VERSIONS,\n  FETCH_BOUNCES,\n  FETCH_PLAYLISTS,\n  FETCH_PLAYLISTSONGS,\n  CREATE_BAND,\n  CREATE_TIER,\n  CREATE_TITLE,\n  CREATE_VERSION,\n  CREATE_BOUNCE,\n  CREATE_PLAYLIST,\n  CREATE_PLAYLISTSONG,\n  EDIT_BAND,\n  EDIT_TIER,\n  EDIT_TITLE,\n  EDIT_VERSION,\n  EDIT_BOUNCE,\n  EDIT_PLAYLIST,\n  EDIT_PLAYLISTSONG,\n  DELETE_BAND,\n  DELETE_TIER,\n  DELETE_TITLE,\n  DELETE_VERSION,\n  DELETE_BOUNCE,\n  DELETE_PLAYLIST,\n  DELETE_PLAYLISTSONG,\n  PLAY_AUDIO,\n  PAUSE_AUDIO,\n  QUEUE_SONGS,\n  NEXT_SONG,\n  CHANGE_VOLUME,\n  INITIALIZE_AUDIO,\n  ORDER_TIER,\n  SELECT_VERSION,\n  SELECT_BOUNCE,\n  UPLOAD_STARTED,\n} from './types';\nimport history from '../history';\nimport _ from 'lodash';\n\nconst errorHandler = (err) => (dispatch) => {\n  let message;\n  if (err.response) {\n    message = err.response.data.error;\n  } else {\n    message = err.message;\n  }\n  console.log(err);\n  setTimeout(() => {\n    dispatch(throwError(null));\n  }, 10000);\n  dispatch({ type: ERROR, payload: message });\n};\n\nexport const signIn = (formValues) => async (dispatch) => {\n  try {\n    const response = await greenhouse.post('/signin', formValues);\n    localStorage.setItem('token', response.data.token);\n    dispatch({ type: SIGN_IN, payload: response.data.user });\n    history.push('/user');\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const signOut = () => {\n  localStorage.removeItem('token');\n  history.push('/');\n  return { type: SIGN_OUT };\n};\n\nexport const signUp = (formValues) => async (dispatch) => {\n  try {\n    const response = await greenhouse.post('/signup', formValues);\n    localStorage.setItem('token', response.data.token);\n    dispatch({ type: SIGN_IN, payload: response.data.user });\n    history.push('/user');\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const throwError = (message) => {\n  return { type: ERROR, payload: message };\n};\n\nexport const fetchUser = () => async (dispatch) => {\n  try {\n    const response = await greenhouse.get('/user');\n    if (response.data) {\n      dispatch({ type: SIGN_IN, payload: response.data });\n    } else {\n      dispatch(signOut());\n    }\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchBand = (bandName) => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/bands/${bandName}`);\n    dispatch({ type: FETCH_BAND, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchBands = () => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/bands`);\n    dispatch({ type: FETCH_BANDS, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchTiers = (bandId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/tiers/${bandId}`);\n    dispatch({ type: FETCH_TIERS, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchTitles = (tierId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/titles/${tierId}`);\n    dispatch({ type: FETCH_TITLES, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchVersions = (titleId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/versions/${titleId}`);\n    dispatch({ type: FETCH_VERSIONS, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchBounces = (versionId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/bounces/${versionId}`);\n    dispatch({ type: FETCH_BOUNCES, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchPlaylists = (bandId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/playlists/${bandId}`);\n    dispatch({ type: FETCH_PLAYLISTS, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const fetchPlaylistSongs = (playlistId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.get(`/playlistsongs/${playlistId}`);\n    dispatch({ type: FETCH_PLAYLISTSONGS, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const createBand = (formValues) => async (dispatch) => {\n  try {\n    const response = await greenhouse.post('/bands', formValues);\n    dispatch({ type: CREATE_BAND, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const createTier = (formValues) => async (dispatch, getState) => {\n  try {\n    const { currentBand } = getState().bands;\n    const response = await greenhouse.post('/tiers', {\n      ...formValues,\n      currentBand: currentBand.id,\n    });\n    dispatch({ type: CREATE_TIER, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const createTitle =\n  (formValues, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n      const response = await greenhouse.post('/titles', {\n        ...formValues,\n        currentBand: currentBand.id,\n        tier: tierId,\n      });\n      dispatch({\n        type: CREATE_TITLE,\n        payload: { title: response.data, tier: tierId },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const createVersion =\n  (formValues, titleId) => async (dispatch, getState) => {\n    try {\n      const { currentBand } = getState().bands;\n      const parentTitle = getState().titles[titleId];\n\n      if (!parentTitle.versions.length) {\n        formValues.current = true;\n      }\n\n      const response = await greenhouse.post('/versions', {\n        ...formValues,\n        currentBand: currentBand.id,\n        title: titleId,\n      });\n\n      if (response.data.current) {\n        if (parentTitle.versions.length) {\n          const versionList = parentTitle.versions.map(\n            (id) => getState().versions[id]\n          );\n          const oldCurrent = versionList.find((v) => v.current);\n          oldCurrent.current = false;\n          dispatch(\n            editVersion(\n              _.pick(oldCurrent, 'name', 'notes', 'current'),\n              oldCurrent.id,\n              titleId\n            )\n          );\n        }\n      }\n\n      // dispatch({ type: SELECT_VERSION, payload: { titleId, version: response.data } });\n      dispatch({\n        type: CREATE_VERSION,\n        payload: { version: response.data, title: titleId },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const createBounce =\n  (formValues, versionId) => async (dispatch, getState) => {\n    dispatch({ type: UPLOAD_STARTED });\n    try {\n      const { currentBand } = getState().bands;\n      const parentVersion = getState().versions[versionId];\n\n      if (!parentVersion.bounces.length) {\n        formValues.latest = true;\n      }\n\n      // if (formValues.file instanceof FileList) {\n      //   formValues.file = formValues.file[0];\n      // }\n\n      formValues.file = formValues.file[0];\n\n      // Create instance of FileReader\n      const reader = new FileReader();\n\n      // When the file has been succesfully read\n      reader.onload = (event) => {\n        // Create an instance of AudioContext\n        const audioContext = new (window.AudioContext ||\n          window.webkitAudioContext)();\n\n        // Asynchronously decode audio file data contained in an ArrayBuffer.\n        audioContext.decodeAudioData(event.target.result, async (buffer) => {\n          // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n          const duration = parseInt(buffer.duration);\n\n          const formObject = {\n            ...formValues,\n            currentBand: currentBand.id,\n            version: versionId,\n            duration,\n          };\n\n          const formData = new FormData();\n\n          for (let key in formObject) {\n            formData.append(key, formObject[key]);\n          }\n\n          const response = await greenhouse.post('/bounces', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' },\n          });\n\n          if (response.data.latest) {\n            if (parentVersion.bounces.length) {\n              const bounceList = parentVersion.bounces.map(\n                (id) => getState().bounces[id]\n              );\n              const oldLatest = bounceList.find((b) => b.latest);\n              oldLatest.latest = false;\n              dispatch(\n                editBounce(\n                  _.pick(oldLatest, 'date', 'comments', 'latest'),\n                  oldLatest.id,\n                  versionId\n                )\n              );\n            }\n          }\n\n          // dispatch({ type: SELECT_BOUNCE, payload: { titleId, bounce: response.data } });\n          dispatch({\n            type: CREATE_BOUNCE,\n            payload: { bounce: response.data, version: versionId },\n          });\n        });\n      };\n\n      // In case the file couldn't be read\n      reader.onerror = (event) => {\n        console.error('An error ocurred reading the file: ', event);\n      };\n\n      // Read file as an ArrayBuffer, important !\n      reader.readAsArrayBuffer(formValues.file);\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const createPlaylist = (formValues) => async (dispatch, getState) => {\n  try {\n    const { currentBand } = getState().bands;\n    const response = await greenhouse.post('/playlists', {\n      ...formValues,\n      currentBand: currentBand.id,\n    });\n    dispatch({ type: CREATE_PLAYLIST, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const createPlaylistSong =\n  (formValues) => async (dispatch, getState) => {\n    try {\n      const { currentBand } = getState().bands;\n      const response = await greenhouse.post('/playlistsongs', {\n        ...formValues,\n        currentBand: currentBand.id,\n      });\n      dispatch({\n        type: CREATE_PLAYLISTSONG,\n        payload: {\n          playlistsong: response.data,\n          playlist: formValues.playlistId,\n        },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const editBand = (formValues, bandId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.patch('/bands', {\n      ...formValues,\n      currentBand: bandId,\n    });\n    dispatch({ type: EDIT_BAND, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const editTier = (formValues, tierId) => async (dispatch, getState) => {\n  try {\n    const { currentBand } = getState().bands;\n    const response = await greenhouse.patch(`/tiers/${tierId}`, {\n      ...formValues,\n      currentBand: currentBand.id,\n    });\n    dispatch({ type: EDIT_TIER, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const editTitle =\n  (formValues, titleId, tierId) => async (dispatch, getState) => {\n    try {\n      const { currentBand } = getState().bands;\n      let changeTier = formValues.move;\n      const response = await greenhouse.patch(`/titles/${titleId}`, {\n        ...formValues,\n        currentTier: tierId,\n        currentBand: currentBand.id,\n      });\n      dispatch({\n        type: EDIT_TITLE,\n        payload: {\n          title: response.data,\n          tier: { new: changeTier, old: tierId },\n        },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const editVersion =\n  (formValues, versionId, titleId) => async (dispatch, getState) => {\n    try {\n      const { currentBand } = getState().bands;\n      const thisVersion = getState().versions[versionId];\n      if (thisVersion.current) {\n        formValues.current = true;\n      }\n      const response = await greenhouse.patch(`/versions/${versionId}`, {\n        ...formValues,\n        currentBand: currentBand.id,\n      });\n      if (response.data.current && !thisVersion.current) {\n        const parentTitle = getState().titles[titleId];\n        const versionList = parentTitle.versions.map(\n          (id) => getState().versions[id]\n        );\n        const oldCurrent = versionList.find((v) => v.current);\n        oldCurrent.current = false;\n        dispatch(\n          editVersion(\n            _.pick(oldCurrent, 'name', 'notes', 'current'),\n            oldCurrent.id,\n            titleId\n          )\n        );\n      }\n\n      // dispatch({ type: SELECT_VERSION, payload: { titleId, version: response.data } });\n      dispatch({\n        type: EDIT_VERSION,\n        payload: { version: response.data, title: titleId },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const editBounce =\n  (formValues, bounceId, versionId) => async (dispatch, getState) => {\n    try {\n      const { currentBand } = getState().bands;\n      const thisBounce = getState().bounces[bounceId];\n      if (thisBounce.latest) {\n        formValues.latest = true;\n      }\n      if (formValues.file && formValues.file.length) {\n        formValues.file = formValues.file[0];\n\n        // Create instance of FileReader\n        const reader = new FileReader();\n\n        // When the file has been succesfully read\n        reader.onload = (event) => {\n          // Create an instance of AudioContext\n          const audioContext = new (window.AudioContext ||\n            window.webkitAudioContext)();\n\n          // Asynchronously decode audio file data contained in an ArrayBuffer.\n          audioContext.decodeAudioData(event.target.result, async (buffer) => {\n            // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n            const duration = parseInt(buffer.duration);\n\n            const formObject = {\n              ...formValues,\n              currentBand: currentBand.id,\n              duration,\n            };\n\n            const formData = new FormData();\n\n            for (let key in formObject) {\n              formData.append(key, formObject[key]);\n            }\n\n            const response = await greenhouse.patch(\n              `/bounces/${bounceId}`,\n              formData,\n              {\n                headers: { 'Content-Type': 'multipart/form-data' },\n              }\n            );\n\n            if (response.data.latest && !thisBounce.latest) {\n              const parentVersion = getState().versions[versionId];\n              const bounceList = parentVersion.bounces.map(\n                (id) => getState().bounces[id]\n              );\n              const oldLatest = bounceList.find((b) => b.latest);\n              oldLatest.latest = false;\n              dispatch(\n                editBounce(\n                  _.pick(oldLatest, 'date', 'comments', 'latest'),\n                  oldLatest.id,\n                  versionId\n                )\n              );\n            }\n\n            dispatch({ type: EDIT_BOUNCE, payload: response.data });\n          });\n        };\n\n        // In case the file couldn't be read\n        reader.onerror = (event) => {\n          console.error('An error ocurred reading the file: ', event);\n        };\n\n        // Read file as an ArrayBuffer, important !\n        reader.readAsArrayBuffer(formValues.file);\n      } else {\n        const response = await greenhouse.patch(`/bounces/${bounceId}`, {\n          ...formValues,\n          currentBand: currentBand.id,\n        });\n        if (response.data.latest && !thisBounce.latest) {\n          const parentVersion = getState().versions[versionId];\n          const bounceList = parentVersion.bounces.map(\n            (id) => getState().bounces[id]\n          );\n          const oldLatest = bounceList.find((b) => b.latest);\n          oldLatest.latest = false;\n          dispatch(\n            editBounce(\n              _.pick(oldLatest, 'date', 'comments', 'latest'),\n              oldLatest.id,\n              versionId\n            )\n          );\n        }\n\n        dispatch({ type: EDIT_BOUNCE, payload: response.data });\n      }\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const editPlaylist =\n  (formValues, playlistId) => async (dispatch, getState) => {\n    try {\n      const { currentBand } = getState().bands;\n      const response = await greenhouse.patch(`/playlists/${playlistId}`, {\n        ...formValues,\n        currentBand: currentBand.id,\n      });\n      dispatch({ type: EDIT_PLAYLIST, payload: response.data });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const editPlaylistSong =\n  (formValues, playlistSongId) => async (dispatch, getState) => {\n    try {\n      const { currentBand } = getState().bands;\n      const song = getState().playlistSongs[playlistSongId];\n      if (formValues.move) {\n        const newSong = {\n          playlistId: formValues.move,\n          title: song.title,\n          version: song.version,\n          bounce: song.bounce,\n        };\n        dispatch(createPlaylistSong(newSong));\n      }\n      const response = await greenhouse.patch(\n        `/playlistsongs/${playlistSongId}`,\n        { ...formValues, currentBand: currentBand.id }\n      );\n      dispatch({\n        type: EDIT_PLAYLISTSONG,\n        payload: {\n          playlistsong: response.data,\n          playlist: formValues.playlistId,\n        },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const deleteBand = (bandId) => async (dispatch) => {\n  try {\n    const response = await greenhouse.post('/bands/delete', {\n      currentBand: bandId,\n    });\n    response.data.tiers.forEach((tierId) => {\n      dispatch(deleteTier(tierId, response.data.id));\n    });\n    dispatch({ type: DELETE_BAND, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const deleteTier = (tierId) => async (dispatch, getState) => {\n  const { currentBand } = getState().bands;\n  try {\n    const response = await greenhouse.post('/tiers/delete', {\n      tierId,\n      currentBand: currentBand.id,\n    });\n    response.data.trackList.forEach((titleId) => {\n      dispatch(deleteTitle(titleId, response.data.id));\n    });\n    dispatch({ type: DELETE_TIER, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const deleteTitle = (titleId, tierId) => async (dispatch, getState) => {\n  const { currentBand } = getState().bands;\n  try {\n    const response = await greenhouse.post('/titles/delete', {\n      titleId,\n      tierId,\n      currentBand: currentBand.id,\n    });\n    response.data.versions.forEach((versionId) => {\n      dispatch(deleteVersion(versionId, response.data.id));\n    });\n    const playlists = Object.values(getState().playlists);\n    const playlistSongs = Object.values(getState().playlistSongs).filter(\n      (pls) => pls.title === titleId\n    );\n    playlistSongs.forEach((pls) => {\n      const playlist = playlists.find((pl) => pl.songs.includes(pls.id));\n      dispatch(deletePlaylistSong(pls.id, playlist.id));\n    });\n    dispatch({\n      type: DELETE_TITLE,\n      payload: { title: response.data, tier: tierId },\n    });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const deleteVersion =\n  (versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n      const response = await greenhouse.post('/versions/delete', {\n        versionId,\n        titleId,\n        currentBand: currentBand.id,\n      });\n      if (response.data.current) {\n        const parentTitle = getState().titles[titleId];\n        if (parentTitle) {\n          const remainingVersions = parentTitle.versions.filter(\n            (id) => id !== versionId\n          );\n          if (remainingVersions.length) {\n            const newCurrent =\n              getState().versions[\n                remainingVersions[remainingVersions.length - 1]\n              ];\n            newCurrent.current = true;\n            dispatch(selectVersion(newCurrent, titleId));\n            dispatch(\n              editVersion(\n                _.pick(newCurrent, 'name', 'notes', 'current'),\n                newCurrent.id,\n                titleId\n              )\n            );\n          } else {\n            dispatch(selectVersion(null, titleId));\n          }\n        }\n      }\n      response.data.bounces.forEach((bounceId) => {\n        dispatch(deleteBounce(bounceId, response.data.id, titleId));\n      });\n      dispatch({\n        type: DELETE_VERSION,\n        payload: { version: response.data, title: titleId },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const deleteBounce =\n  (bounceId, versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n      const response = await greenhouse.post('/bounces/delete', {\n        bounceId,\n        versionId,\n        currentBand: currentBand.id,\n      });\n      if (response.data.latest) {\n        const parentVersion = getState().versions[versionId];\n        if (parentVersion) {\n          const remainingBounces = parentVersion.bounces.filter(\n            (id) => id !== bounceId\n          );\n          if (remainingBounces.length) {\n            const newLatest =\n              getState().bounces[remainingBounces[remainingBounces.length - 1]];\n            newLatest.latest = true;\n            dispatch(selectBounce(newLatest.id, titleId));\n            dispatch(\n              editBounce(\n                _.pick(newLatest, 'date', 'comments', 'latest'),\n                newLatest.id,\n                versionId\n              )\n            );\n          } else {\n            dispatch(selectBounce(null, titleId));\n          }\n        }\n      }\n      dispatch({\n        type: DELETE_BOUNCE,\n        payload: { bounce: response.data, version: versionId },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const deletePlaylist = (playlistId) => async (dispatch, getState) => {\n  const { currentBand } = getState().bands;\n  try {\n    const response = await greenhouse.post('/playlists/delete', {\n      playlistId,\n      currentBand: currentBand.id,\n    });\n    response.data.songs.forEach((playlistSongId) => {\n      dispatch(deletePlaylistSong(playlistSongId, response.data.id));\n    });\n    dispatch({ type: DELETE_PLAYLIST, payload: response.data });\n  } catch (err) {\n    dispatch(errorHandler(err));\n  }\n};\n\nexport const deletePlaylistSong =\n  (playlistSongId, playlistId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n      const response = await greenhouse.post('/playlistsongs/delete', {\n        playlistSongId,\n        playlistId,\n        currentBand: currentBand.id,\n      });\n      dispatch({\n        type: DELETE_PLAYLISTSONG,\n        payload: { playlistsong: response.data, playlist: playlistId },\n      });\n    } catch (err) {\n      dispatch(errorHandler(err));\n    }\n  };\n\nexport const playAudio = () => {\n  return { type: PLAY_AUDIO };\n};\n\nexport const pauseAudio = () => {\n  return { type: PAUSE_AUDIO };\n};\n\nexport const queueSongs = (song) => (dispatch) => {\n  const songObject = {\n    title: song.title,\n    version: song.version.name,\n    date: song.bounce.date,\n    duration: song.bounce.duration,\n    audio: song.bounce.id,\n  };\n\n  dispatch({\n    type: QUEUE_SONGS,\n    payload: { song: songObject, parent: song.tier },\n  });\n};\n\nexport const queuePlaylistSongs = (song) => (dispatch, getState) => {\n  // const version = getState().versions[song.version];\n  // const bounce = getState().bounces[song.bounce];\n  // const title = getState().titles[song.title];\n\n  const songObject = {\n    title: song.title,\n    version: song.version.name,\n    date: song.bounce.date,\n    duration: song.bounce.duration,\n    audio: song.bounce.id,\n    position: song.position,\n  };\n\n  dispatch({\n    type: QUEUE_SONGS,\n    payload: { song: songObject, parent: song.playlist },\n  });\n};\n\nexport const setOrder = (tier, orderBy) => {\n  return { type: ORDER_TIER, payload: { tier, orderBy } };\n};\n\nexport const nextSong = () => (dispatch, getState) => {\n  const { parent, currentSong } = getState().audio;\n  if (parent.trackList) {\n    let allTitles;\n\n    if (parent.orderBy === 'date') {\n      allTitles = parent.trackList\n        .map((id) => getState().titles[id])\n        .sort((a, b) => {\n          if (a.selectedBounce && b.selectedBounce) {\n            if (\n              new Date(a.selectedBounce.date) > new Date(b.selectedBounce.date)\n            ) {\n              return -1;\n            } else {\n              return 1;\n            }\n          } else if (a.selectedBounce) {\n            return -1;\n          } else if (b.selectedBounce) {\n            return 1;\n          }\n        });\n    }\n\n    if (parent.orderBy === 'name') {\n      allTitles = parent.trackList\n        .map((id) => getState().titles[id])\n        .sort((a, b) => {\n          return a.title < b.title ? -1 : 1;\n        });\n    }\n\n    const song = allTitles[allTitles.indexOf(currentSong.title) + 1];\n\n    if (song && song.selectedVersion && song.selectedBounce) {\n      const version = getState().versions[song.selectedVersion.id];\n      const bounce = getState().bounces[song.selectedBounce.id];\n\n      const songObject = {\n        title: song,\n        version: version.name,\n        date: bounce.date,\n        duration: bounce.duration,\n        audio: bounce.id,\n      };\n\n      dispatch({ type: NEXT_SONG, payload: songObject });\n    } else {\n      dispatch({ type: INITIALIZE_AUDIO });\n    }\n  }\n  if (parent.songs) {\n    const allSongs = parent.songs\n      .map((id) => getState().playlistSongs[id])\n      .sort((a, b) => (a.position < b.position ? -1 : 1));\n\n    let song;\n    let index = currentSong.position;\n\n    while (index < allSongs.length) {\n      if (allSongs[index].bounce !== null) {\n        song = allSongs[index];\n        break;\n      }\n      index++;\n    }\n\n    if (!song) {\n      return dispatch({ type: INITIALIZE_AUDIO });\n    }\n\n    const version = getState().versions[song.version];\n    const bounce = getState().bounces[song.bounce];\n    const title = getState().titles[song.title];\n\n    const songObject = {\n      title: title,\n      version: version.name,\n      date: bounce.date,\n      duration: bounce.duration,\n      audio: bounce.id,\n      position: song.position,\n    };\n    dispatch({ type: NEXT_SONG, payload: songObject });\n  }\n};\n\nexport const prevSong = () => (dispatch, getState) => {\n  const { parent, currentSong } = getState().audio;\n  if (parent.trackList) {\n    let allTitles;\n    if (parent.orderBy === 'date') {\n      allTitles = parent.trackList\n        .map((id) => getState().titles[id])\n        .sort((a, b) => {\n          if (a.selectedBounce && b.selectedBounce) {\n            if (\n              new Date(a.selectedBounce.date) > new Date(b.selectedBounce.date)\n            ) {\n              return -1;\n            } else {\n              return 1;\n            }\n          } else if (a.selectedBounce) {\n            return -1;\n          } else if (b.selectedBounce) {\n            return 1;\n          }\n        });\n    }\n\n    if (parent.orderBy === 'name') {\n      allTitles = parent.trackList\n        .map((id) => getState().titles[id])\n        .sort((a, b) => {\n          return a.title < b.title ? -1 : 1;\n        });\n    }\n\n    const song = allTitles[allTitles.indexOf(currentSong.title) - 1];\n\n    if (song && song.selectedVersion && song.selectedBounce) {\n      const version = getState().versions[song.selectedVersion.id];\n      const bounce = getState().bounces[song.selectedBounce.id];\n\n      const songObject = {\n        title: song,\n        version: version.name,\n        date: bounce.date,\n        duration: bounce.duration,\n        audio: bounce.id,\n      };\n\n      dispatch({ type: NEXT_SONG, payload: songObject });\n    }\n  }\n\n  if (parent.songs) {\n    const allSongs = parent.songs\n      .map((id) => getState().playlistSongs[id])\n      .sort((a, b) => (a.position < b.position ? -1 : 1));\n\n    let song;\n    let index = currentSong.position - 2;\n\n    while (index < allSongs.length) {\n      if (allSongs[index].bounce !== null) {\n        song = allSongs[index];\n        break;\n      }\n      index = index - 1;\n    }\n\n    if (!song) {\n      return dispatch({ type: INITIALIZE_AUDIO });\n    }\n\n    const version = getState().versions[song.version];\n    const bounce = getState().bounces[song.bounce];\n    const title = getState().titles[song.title];\n\n    const songObject = {\n      title: title,\n      version: version.name,\n      date: bounce.date,\n      duration: bounce.duration,\n      audio: bounce.id,\n      position: song.position,\n    };\n    dispatch({ type: NEXT_SONG, payload: songObject });\n  }\n};\n\nexport const changeVolume = (value) => {\n  return { type: CHANGE_VOLUME, payload: value };\n};\n\nexport const initializeAudio = () => {\n  return { type: INITIALIZE_AUDIO };\n};\n\nexport const selectVersion = (version, titleId) => {\n  return { type: SELECT_VERSION, payload: { version, titleId } };\n};\n\nexport const selectBounce = (bounce, titleId) => {\n  return { type: SELECT_BOUNCE, payload: { bounce, titleId } };\n};\n","\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { throwError } from '../actions';\nimport history from '../history';\n\nconst Error = ({ error, throwError }) => {\n\n    useEffect(() => {\n        history.listen(location => {\n            throwError(null);\n        });\n    }, [history]);\n\n    if (!error) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\" onClick={() => throwError(null)}>\n            <div className=\"error-x\">X</div>\n            {error}\n            <div className=\"error-x\">X</div>\n        </div>\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.error.error\n    }\n}\n\nexport default connect(mapStateToProps, { throwError })(Error);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n\n\nclass AddButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    state = { boxVisible: false, selectedOption: null };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.boxVisible === false && this.state.boxVisible === true) {\n            document.addEventListener('click', this.bodyClick, {capture: true});\n            document.addEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        } else if (prevState.boxVisible === true && this.state.boxVisible === false) {\n            document.removeEventListener('click', this.bodyClick, {capture: true});\n            document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        }\n        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.bodyClick, {capture: true});\n        document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n    }\n\n    blockSpaceBarPress = (e) => {\n        e.stopPropagation();\n    }\n\n    bodyClick = (e) => {\n        if (this.ref.current && this.ref.current.contains(e.target)) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        }\n    }\n\n    showOptions = (field) => {\n        return field.options.map(option => {\n            return (\n                <option\n                    key={option.value}\n                    value={option.value}\n                >\n                    {option.display}\n                </option>\n            );\n        });\n    };\n\n    onDrop = (e, input) => {\n        const file = e.target.files[0];\n        const { onChange } = input;\n        onChange(file);\n    }\n\n    input = (field) => {\n        let inputClass = '';\n        if (field.type === 'date') {\n            inputClass = 'calendar';\n        }\n        if (field.type === 'checkbox') {\n            inputClass = 'checkbox';\n        }\n        if (field.type === 'input') {\n            inputClass = 'text-input';\n        }\n\n        const errors = \n            <div className=\"form-errors\">\n            {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n            </div>;\n\n        if (field.type === 'file') {\n            delete field.input.value;\n            return <>\n                {errors}\n                <input\n                    {...field.input}\n                    type='file'\n                    className='inputfile'\n                    onDrop={(e) => this.onDrop(e, field.input)}\n                        \n                />\n            </>;\n        } else if (field.type === 'select') {\n            return <>\n                {errors}\n                <select\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </select>\n            </>;\n        } else {\n            return <>\n                {errors}\n                <input\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                    className={inputClass}\n                />\n            </>;\n        }\n    }\n\n    required = value => {\n        return value ? undefined : 'Required';\n    }\n\n    showFields = () => {\n\n        return this.props.fields.map((field, i) => {\n            const autoFocus = i === 0 ? true : false;\n            let comp = this.input;\n            if (field.type === 'textarea') {\n                comp = 'textarea'\n            }\n            return <div key={field.label}>\n                <label>{field.label}: </label>\n                <Field\n                    name={field.name}\n                    component={comp}\n                    autoFocus={autoFocus}\n                    type={field.type}\n                    validate={field.required ? this.required : null}\n                    options={field.options}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </Field>\n            </div>\n        });\n \n    };\n\n    submitForm = (formValues) => {\n        this.props.onSubmit(formValues);\n        this.setState({ boxVisible: false });\n        this.props.reset();\n    }\n\n    showBox = () => {\n        if (this.state.boxVisible) {\n            const addClass = this.props.addClass ? this.props.addClass : '';\n            return <>    \n                <div className={`add-box ${addClass}`} onClick={e => e.stopPropagation()}>\n                    <h3 className=\"add-box-title\">{this.props.title}</h3>\n                    <form onSubmit = {this.props.handleSubmit(this.submitForm)}>\n                        {this.showFields()}\n                        <div className=\"submit-button-centered\">\n                            <button className=\"submit-button\" type='submit'>OK</button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        }\n    }\n\n    click = (e) => {\n        e.stopPropagation();\n        if (this.ref.current && this.ref.current === e.target) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        } else {\n            this.setState({ boxVisible: true });\n        }\n\n    }\n    \n    render() {\n\n        return <>\n            <div className=\"add\" onClick={this.click} ref={this.ref}>\n                <img src={this.props.image} />\n                {this.showBox()}\n            </div>\n        </>;\n    }\n\n}\n\nexport default reduxForm({ form: 'form' })(AddButton);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Modal extends React.Component {\n\n    componentDidMount() {\n        document.querySelector('.container').classList.add('modal-active');\n    }\n    componentWillUnmount() {\n        document.querySelector('.container').classList.remove('modal-active');\n    }\n\n    render() {\n        return ReactDOM.createPortal(\n            <div onClick={this.props.onDismiss} className=\"modal-background\">\n                <div \n                    onClick={e => e.stopPropagation()}\n                    className=\"modal-box\"\n                >\n                    <div className=\"modal-title\">\n                        {this.props.content}\n                    </div>\n                    <div>\n                        {this.props.actions}\n                    </div>\n                </div>\n            </div>,\n            document.querySelector('#modal')\n        );\n    }\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from './Modal';\n\nconst DeleteButton = ({ onSubmit, displayName }) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const renderContent = () => {\n        return `Seriously delete \"${displayName}\"?`;\n    };\n\n    const renderActions = () => {\n        return (\n            <>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => {\n                        onSubmit();\n                        setVisible(false);\n                    }}\n                >\n                    Delete\n                </button>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => setVisible(false)}\n                >\n                    No Wait\n                </button>\n            </>\n        );\n    };\n\n    const showModal = () => {\n\n        return (\n            <Modal \n                content={renderContent()}\n                actions={renderActions()}\n                onDismiss={e => {\n                    e.stopPropagation();\n                    setVisible(false)\n                }}\n            />\n        );\n    };\n\n\n\n    const onClick = (e) => {\n        e.stopPropagation();\n        setVisible(true);\n    };\n\n\n    return (\n        <div>\n            <img src=\"/images/delete.png\" className=\"delete\" onClick={onClick} />\n            {visible && showModal()}\n        </div>\n    );\n\n};\n\nexport default DeleteButton;","import React from 'react';\nimport { connect } from 'react-redux';\n\nexport default ChildComponent => {\n\n    class ComposedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n        }\n\n        state = { authorized: false };\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n\n        // componentDidUpdate() {\n        //     this.checkAuth();\n        // }\n\n        handleUpdate = () => {\n            this.checkAuth();\n        }\n\n        checkAuth() {\n            if (this.props.user && this.props.currentBand && this.props.user.bands.includes(this.props.currentBand.id)) {\n                this.setState({ authorized: true });\n            }\n        }\n\n        render() {\n            return <ChildComponent {...this.props} authorized={this.state.authorized} handleUpdate={this.handleUpdate} />;\n\n        }\n\n    }\n\n    const mapStateToProps = state => {\n        return {\n            user: state.auth.user,\n            currentBand: state.bands.currentBand\n        }\n    };\n\n    return connect(mapStateToProps)(ComposedComponent);\n\n};\n\n","import React, { useEffect, useState, useRef } from 'react';\n\nconst DetailBox = ({ selectedItem, itemList, itemType, displayItem, setSelected, renderAddButton, renderEditButton, renderDeleteButton, playButton }) => {\n\n    const [dropdownVisible, setDropdownVisible] = useState(false);\n\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n        if (dropdownVisible) {\n            document.addEventListener('click', onBodyClick, {capture: true});\n        } else {\n            document.removeEventListener('click', onBodyClick, {capture: true});\n        }\n    }, [dropdownVisible]);\n\n    const count = () => {\n        let count;\n        if (itemList().length === 0) {\n            count = `1 ${itemType}:`;\n        } else {\n            count = `${itemList().length + 1} ${itemType}s:`\n        }\n\n        return (\n            <h5>{count}</h5>\n        );\n    };\n\n    const currentTag = () => {\n        if (selectedItem.current || selectedItem.latest) {\n            return (\n                <div className=\"current\">\n                    Current\n                </div>\n            );\n        }\n    };\n\n    const onBodyClick = e => {\n\n        if (dropdownRef.current && dropdownRef.current.contains(e.target)) {\n            return;\n        }\n\n        if (dropdownVisible) {\n            setDropdownVisible(false);\n        }\n    };\n\n    const renderItemList = () => {\n        if (dropdownVisible) {\n            \n            return itemList().map(i => {\n                const current = i.current || i.latest ? <span className=\"list-current\"> * current</span> : null;\n                return <div\n                    className=\"dropdown-link\"\n                    onClick={() => {\n                        setSelected(i);\n                        setDropdownVisible(false);\n                    }}\n                    key={i.id}\n                >\n                        {displayItem(i)}\n                        {current}\n                </div>\n            });\n        }\n    };\n\n\n    const renderDetail = () => {\n        if (selectedItem) {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        {count()}\n                        {currentTag()}\n                    </div>\n                    <div className='dropdown-container'>\n                        <div className=\"dropdown\" ref={dropdownRef}>\n                            <button\n                                className=\"dropbtn\"\n                                onClick={() => setDropdownVisible(!dropdownVisible)}\n                            >\n                                {displayItem(selectedItem)}\n                            </button>\n                            <div className=\"dropdown-content\">\n                                {renderItemList()}\n                            </div>\n                        </div>\n                        {playButton && playButton()}\n                    </div>\n                    \n                    \n                    <div className=\"detail-notes\">\n                        <div className=\"detail-notes-title\">Notes:</div>\n                        <p>\n                            {selectedItem.notes || selectedItem.comments}\n                        </p>\n                    </div>\n                </div>\n            );\n        } else {\n            let parentType = '';\n            if (itemType === 'Version') {\n                parentType = 'Song';\n            }\n            if (itemType === 'Bounce') {\n                parentType = 'Version';\n            }\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>{`No ${itemType}s for this ${parentType} Yet`}</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <div\n            className={`detail-box ${itemType === 'Bounce' ? 'bounce' : ''}`}\n        >\n            {renderDetail()}      \n            <div className=\"detail-buttons\">\n                {renderAddButton()}\n                {selectedItem && renderEditButton()}\n                {selectedItem && renderDeleteButton()}\n            </div>\n        </div>\n    );\n};\n\nexport default DetailBox;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\nimport DetailBox from './DetailBox';\nimport {\n  selectBounce,\n  createBounce,\n  editBounce,\n  deleteBounce,\n  queueSongs,\n} from '../actions';\n\nconst Bounce = ({\n  bounces,\n  selectBounce,\n  title,\n  authorized,\n  version,\n  createBounce,\n  editBounce,\n  deleteBounce,\n  song,\n  queueSongs,\n}) => {\n  const [selectedBounce, setSelectedBounce] = useState(title.selectedBounce);\n\n  const [uploadActive, setUploadActive] = useState(false);\n\n  // const [playButtonVisible, setPlayButtonVisible] = useState(false);\n\n  useEffect(() => {\n    if (selectedBounce && selectedBounce !== title.selectedBounce) {\n      selectBounce(selectedBounce, title.id);\n      // setPlayButtonVisible(true);\n    }\n  }, [selectedBounce]);\n\n  useEffect(() => {\n    if (selectedBounce && selectedBounce !== title.selectedBounce) {\n      selectBounce(title.selectedBounce, title.id);\n    }\n  }, [title.selectedBounce]);\n\n  useEffect(() => {\n    setSelectedBounce(title.selectedBounce);\n    setUploadActive(false);\n  }, [title.selectedBounce]);\n\n  const displayDate = (date) => {\n    return moment.utc(date).format('MM/DD/yy');\n  };\n\n  const displayBounce = (b) => {\n    return `${displayDate(b.date)}`;\n  };\n\n  const itemList = () => {\n    if (selectedBounce) {\n      return bounces\n        .filter((b) => b && b.id !== selectedBounce.id)\n        .sort((a, b) => (a.date < b.date ? 1 : -1));\n    }\n  };\n\n  const onAddSubmit = (formValues) => {\n    createBounce(formValues, version.id);\n    setUploadActive(true);\n  };\n\n  const onEditSubmit = (formValues) => {\n    editBounce(formValues, selectedBounce.id, version.id);\n    setUploadActive(true);\n  };\n\n  const uploadContent = () => {\n    return (\n      <div className=\"upload-image\">\n        <p>Uploading...</p>\n        <img className=\"windmill\" src=\"/images/windmill.gif\" />\n      </div>\n    );\n  };\n\n  const renderAddButton = () => {\n    if (authorized) {\n      return (\n        <AddButton\n          title={`Add a Bounce of ${version.name}`}\n          image=\"images/add.png\"\n          fields={[\n            {\n              label: 'File',\n              name: 'file',\n              type: 'file',\n              required: true,\n            },\n            {\n              label: 'Date',\n              name: 'date',\n              type: 'date',\n              required: true,\n            },\n            {\n              label: 'Comments',\n              name: 'comments',\n              type: 'textarea',\n            },\n            {\n              label: 'Latest Bounce?',\n              name: 'latest',\n              type: 'checkbox',\n            },\n          ]}\n          onSubmit={(formValues) => onAddSubmit(formValues)}\n          form={`add-bounce-${title.id}`}\n          initialValues={{ latest: true }}\n          addClass=\"add-bounce\"\n        />\n      );\n    }\n  };\n\n  const renderEditButton = () => {\n    if (authorized) {\n      return (\n        <AddButton\n          title={'Edit this Bounce'}\n          image=\"images/edit.png\"\n          fields={[\n            {\n              label: 'File',\n              name: 'file',\n              type: 'file',\n            },\n            {\n              label: 'Date',\n              name: 'date',\n              type: 'date',\n            },\n            {\n              label: 'Comments',\n              name: 'comments',\n              type: 'textarea',\n            },\n            {\n              label: 'Current Bounce?',\n              name: 'latest',\n              type: 'checkbox',\n            },\n          ]}\n          onSubmit={onEditSubmit}\n          initialValues={{\n            ..._.pick(selectedBounce, 'comments', 'latest'),\n            date: moment.utc(selectedBounce.date).format('YYYY-MM-DD'),\n          }}\n          form={`edit-bounce-${title.id}`}\n          enableReinitialize={true}\n          addClass=\"add-bounce\"\n        />\n      );\n    }\n  };\n\n  const renderDeleteButton = () => {\n    if (authorized) {\n      return (\n        <DeleteButton\n          onSubmit={() => deleteBounce(selectedBounce.id, version.id, title.id)}\n          displayName={displayDate(selectedBounce.date)}\n        />\n      );\n    }\n  };\n\n  const showPlayButton = () => {\n    // if (playButtonVisible) {\n\n    return (\n      <img\n        src=\"/images/play.svg\"\n        className=\"play-icon\"\n        onClick={() => queueSongs(song)}\n      />\n    );\n    // }\n  };\n\n  if (uploadActive) {\n    return <div className=\"detail-box bounce\">{uploadContent()}</div>;\n  } else {\n    if (version) {\n      return (\n        <DetailBox\n          selectedItem={selectedBounce}\n          itemType=\"Bounce\"\n          itemList={itemList}\n          displayItem={displayBounce}\n          setSelected={setSelectedBounce}\n          renderAddButton={renderAddButton}\n          renderEditButton={renderEditButton}\n          renderDeleteButton={renderDeleteButton}\n          playButton={showPlayButton}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n};\n\nexport default connect(null, {\n  selectBounce,\n  createBounce,\n  editBounce,\n  deleteBounce,\n  queueSongs,\n})(requireAuth(Bounce));\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion } from '../actions';\nimport Bounce from './Bounce';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\nimport DetailBox from './DetailBox';\n\nconst Version = ({ versions, bounces, fetchBounces, selectVersion, title, createVersion, authorized, editVersion, deleteVersion, song }) => {\n\n    const [selectedVersion, setSelectedVersion] = useState(title.selectedVersion);\n    const [bounceList, setBounceList] = useState(null);\n\n    useEffect(() => {\n        // console.log(selectedVersion);\n        if (selectedVersion !== title.selectedVersion) {\n            selectVersion(selectedVersion, title.id);\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n            fetchBounces(selectedVersion.id)\n        } \n    }, [selectedVersion]);\n\n    useEffect(() => {\n        if (selectedVersion) {\n            // console.log(title.selectedVersion)\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n        }\n    }, [bounces, selectedVersion]);\n\n\n    useEffect(() => {\n        if (selectedVersion !== title.selectedVersion) {\n            setSelectedVersion(title.selectedVersion);\n        }\n    }, [title.selectedVersion]);\n\n    \n    const renderBounces = () => {\n\n        if (bounceList && selectedVersion) {\n\n            return (\n                <>\n                    <div className=\"version-arrow\">&rarr;</div>\n                    <Bounce bounces={bounceList} title={title} version={selectedVersion} song={song} />\n                </>\n            );   \n        }\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Version of ${title.title}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true         \n                        },\n                        {\n                            label: 'Notes',\n                            name: 'notes',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Current Version?',\n                            name: 'current',\n                            type: 'checkbox',      \n                        },\n                    ]}\n                    onSubmit={(formValues) => createVersion(formValues, title.id)}\n                    form={`add-version-${title.id}`}\n                    initialValues={{ current: true }}\n                    enableReinitialize={true}\n                    addClass='add-version'\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={`Edit ${selectedVersion.name}`}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'Name',\n                        name: 'name',\n                        type: 'input', \n                    },\n                    {\n                        label: 'Notes',\n                        name: 'notes',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Version?',\n                        name: 'current',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={formValues => editVersion(formValues, selectedVersion.id, title.id)}\n                initialValues={_.pick(selectedVersion, 'name', 'notes', 'current')}\n                form={`edit-version-${title.id}`}\n                enableReinitialize={true}\n                addClass='add-version'\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return <DeleteButton\n                onSubmit={() => deleteVersion(selectedVersion.id, title.id)}\n                displayName={selectedVersion.name}\n            />;\n        }\n    };\n\n    const itemList = () => {\n        return versions.filter(v => v.id !== selectedVersion.id);\n    };\n\n    const displayVersion = v => {\n        return `${v.name}`;\n    };\n    \n    return (\n        <>\n            <DetailBox\n                selectedItem={selectedVersion}\n                itemType=\"Version\"\n                itemList={itemList}\n                displayItem={displayVersion}\n                setSelected={setSelectedVersion}\n                renderAddButton={renderAddButton}\n                renderEditButton={renderEditButton}\n                renderDeleteButton={renderDeleteButton}\n            />\n            {renderBounces()}          \n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        bounces: state.bounces\n    };\n}\n\nexport default connect(mapStateToProps, { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion })(requireAuth(Version));","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { queueSongs, queuePlaylistSongs, playAudio } from '../actions';\n\n\nconst PlayContainer = ({ song, queueSongs, parentType, queuePlaylistSongs }) => {\n\n    const [loaded, setLoaded] = useState(false);\n\n    const displayDate = (date) => {\n        return moment.utc(date).format('MM/DD/YY');\n    }\n\n    const displayTime = (time) => {\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time % 60) < 10 ? '0' + Math.floor(time % 60) : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    const onPlay = (e) => {\n        e.stopPropagation();\n        if (parentType === \"tier\") {\n            queueSongs(song);\n        } else if (parentType === \"playlist\") {\n            queuePlaylistSongs(song);\n        }\n    };\n\n    const renderSpinner = () => {\n        return (\n            <div className=\"sk-circle-fade\">\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n                <div className=\"sk-circle-fade-dot\"></div>\n            </div>\n        );\n    };\n\n\n    let baseUrl;\n    if (process.env.NODE_ENV === 'production') {\n        baseUrl = 'https://exploring-the-space.com'\n    } else {\n        baseUrl = 'http://localhost:3001';\n    }\n\n    return (\n        <div className='play-container'>\n            <div className='play-container-time'>{displayTime(song.bounce.duration)}</div> \n            <div className=\"play-icon-container\">\n                {!loaded && renderSpinner()}          \n                <img\n                    src='/images/play.svg'\n                    className='play-icon'\n                    onClick={onPlay}\n                    onLoad={() => setLoaded(true)}\n                /> \n            </div>\n            <div className='play-container-display'>\n                <p>{song.version.name}</p>\n                <p>{displayDate(song.bounce.date)}</p>\n            </div>\n            <a\n                className='download'\n                onClick={e => e.stopPropagation()}\n                href={`${baseUrl}/api/audio/download/${song.bounce.id}/${encodeURIComponent(song.title.title)}`}\n                \n            >\n                <img src=\"/images/download.svg\" />\n            </a>\n        </div>\n    );\n};\n\nexport default connect(null, { queueSongs, queuePlaylistSongs, playAudio })(PlayContainer);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport Version from './Version';\nimport AddButton from './AddButton';\nimport { fetchVersions, fetchBounces, selectBounce, selectVersion, createPlaylistSong, editTitle, deleteTitle } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\nimport DeleteButton from './DeleteButton';\n\nconst Title = ({ tier, title, titles, fetchVersions, versions, bounces, fetchBounces, authorized, band, playlists, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle, getTime, audio, findLatest, tiers }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [versionList, setVersionList] = useState(null);\n    const [bounceList, setBounceList] = useState(null);\n    const [song, setSong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(title.id);\n    }, []);\n\n    useEffect(() => {\n\n        setVersionList(title.versions.map(id => versions[id]));\n        // console.log('set version list')\n\n        \n    }, [versions]);\n\n    useEffect(() => {\n        // console.log(versionList);\n        if (versionList && versionList[0]) {\n            \n            let versionToSelect;\n\n            const parentTitle = titles[title.id];\n\n            const versionIds = versionList.map(v => v.id);\n\n            if (!parentTitle.selectedVersion || !versionIds.includes(parentTitle.selectedVersion.id)) {\n                versionToSelect = versionList.find(v => v.current);\n            } else if (parentTitle.selectedVersion) {\n                if (!versions[parentTitle.selectedVersion.id]) {\n                    versionToSelect = null;\n                } else {\n                    versionToSelect = versions[parentTitle.selectedVersion.id];\n                }\n            }\n\n            selectVersion(versionToSelect, title.id);\n        }\n    }, [versionList]);\n\n    useEffect(() => {\n        // console.log(title)\n        if (title.selectedVersion && title.selectedVersion.id) {\n            fetchBounces(title.selectedVersion.id);\n            // console.log('fetch bounces')\n        }\n    }, [title.selectedVersion]);\n\n    useEffect(() => {\n        if (title.selectedVersion) {\n            if (title.selectedVersion.bounces[0]) {\n                setBounceList(title.selectedVersion.bounces.map(id => bounces[id]));\n                // console.log('set bounce list')\n            } else if (title.selectedBounce !== null) {\n                // console.log('set bounce list null')\n                setBounceList(null);\n                selectBounce(null, title.id);\n            }\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (bounceList && bounceList[0]) {\n\n            let bounceToSelect;\n\n            if (title.selectedBounce && bounceList.includes(title.selectedBounce)) {\n                bounceToSelect = title.selectedBounce;\n            } else {\n                bounceToSelect = bounceList.find(b => b.latest);\n                findLatest(title, bounceToSelect);\n            }\n\n            if (bounceToSelect !== title.selectedBounce) {\n                \n                selectBounce(bounceToSelect, title.id);\n                // console.log('select bounce');\n                \n            }\n        } else if (song) {\n            setSong(null);\n        }\n\n    }, [bounceList]);\n\n\n    useEffect(() => {\n        if (title.selectedBounce && title.selectedVersion) {\n\n            setSong({\n                tier,\n                title: titles[title.id],\n                version: title.selectedVersion,\n                bounce: title.selectedBounce\n            });\n            // console.log('song update')\n            getTime({ id: title.id, duration: title.selectedBounce.duration });\n            \n        } else if (song && !title.selectedBounce) {\n            setSong(null);\n            getTime({ id: title.id, duration: 0 });\n        }\n        \n    }, [titles[title.id]]);\n\n\n    const renderPlayContainer = () => {\n\n        if (song) {\n            return <PlayContainer song={song} parentType=\"tier\" />;\n        }\n    }\n\n    const renderVersion = () => {\n\n   \n        return (\n            <Version versions={versionList} title={title} song={song} />\n        )\n    }\n\n    const onAddToPlaylist = formValues => {\n        createPlaylistSong({\n            ...formValues,\n            bounce: title.selectedBounce.id,\n            version: title.selectedVersion.id,\n            title: title.id\n        });\n    }\n\n    const renderButtons = () => {\n        if (authorized) {\n            const bandPlaylists = band.playlists.map(id => playlists[id]);\n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name};\n                }\n            });\n            const bandTiers = band.tiers\n                .filter(t => t !== tier.id)\n                .map(id => tiers[id]);\n            const tierOptions = bandTiers.map(t => {\n                if (t) {\n                    return { value: t.id, display: t.name };\n                }\n            });\n            tierOptions.unshift({ value: null, display: ''});\n            return (\n                <div className='tier-display'>\n                    {song && <AddButton\n                        title=\"Add to a Playlist\"\n                        onSubmit={formValues => onAddToPlaylist(formValues)}\n                        image=\"images/playlist.png\"\n                        fields={[\n                            {\n                                type: 'select',\n                                options: playlistOptions,\n                                name: 'playlistId',\n                                label: 'Playlist'\n                            }\n                        ]}\n                        form={`add-to-playlist-${title.id}`}\n                        enableReinitialize={true}\n                    />}\n                    <AddButton\n                        title={`Edit ${title.title}`}\n                        image=\"images/edit.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            },\n                            {\n                                label: 'Move to Tier',\n                                name: 'move',\n                                type: 'select',\n                                options: tierOptions\n                            }\n                        ]}\n                        onSubmit={formValues => editTitle(formValues, title.id, tier.id)}\n                        initialValues={{ title: title.title, move: null }}\n                        form={`edit-title-${title.id}`}\n                        enableReinitialize={true}\n                    />\n                    <DeleteButton\n                        onSubmit={() => deleteTitle(title.id, tier.id)}\n                        displayName={title.title}\n                    />\n                </div>\n            );\n        }\n    };\n\n    const arrow = expand ? 'down-arrow' : '';\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && title.selectedBounce) {\n        currentClass = parent === tier.id && current === title.selectedBounce.id ? 'current-song' : '';\n    }\n\n    let open = expand ? 'open' : 'closed';\n\n    return (\n        <div className=\"title-margin\">\n            <div className={`row title ${currentClass} ${expand ? 'row-open' : ''}`}>\n                <div className=\"marqee\" onClick={() => setExpand(!expand)}>\n                    <div className=\"title-name\"   >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`} />              \n                        <h3>{title.title}</h3>\n                    </div>\n                    {renderPlayContainer()}\n                    {renderButtons()}\n                </div>\n            </div>\n            <div className={`version-container ${open}`}>\n                {expand && renderVersion()}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        versions: state.versions,\n        bounces: state.bounces,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        titles: state.titles,\n        audio: state.audio,\n        tiers: state.tiers\n    }\n}\n\nexport default connect(mapStateToProps, { fetchVersions, fetchBounces, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle })(requireAuth(Title));","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { createTier, editTier, fetchTitles, createTitle, deleteTier, setOrder } from '../actions';\nimport Title from './Title';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\n\nconst Tier = ({ tier, titles, fetchTitles, authorized, band, tiers, editTier, createTitle, deleteTier, setOrder }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [titlesToRender, setTitlesToRender] = useState(null);\n    const [times, setTimes] = useState({});\n\n    const orderedTitles = useRef({});\n\n    useEffect(() => {\n        setOrder(tier.id, 'date');\n        fetchTitles(tier.id);\n    }, []);\n\n    useEffect(() => {\n        setTitlesToRender(tier.trackList\n            .map(id => titles[id]));\n    }, [titles, tier]);\n\n    const findLatest = (title, bounce) => {\n        if (!orderedTitles.current[title.id]) {\n            orderedTitles.current[title.id] = new Date(bounce.date);\n        }\n    };\n\n\n    const renderTitles = () => {\n\n        const titleList = [...titlesToRender];\n\n        if (!tier.orderBy || tier.orderBy === 'date') {\n\n            titleList.sort((a, b) => {\n                if (orderedTitles.current[a.id] && orderedTitles.current[b.id]) {\n                    if (orderedTitles.current[a.id] > orderedTitles.current[b.id]) {\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                } else if (orderedTitles.current[a.id]) {\n                    return -1;\n                } else if (orderedTitles.current[b.id]) {\n                    return 1;\n                }\n            });\n        }\n\n        if (tier.orderBy === 'name') {\n\n            titleList.sort((a, b) => {\n                return a.title < b.title ? -1 : 1;\n            });\n\n        }\n\n        return titleList.map(title => {\n            if (title) {\n                return (\n                    <Title title={title} tier={tier} key={title.id} getTime={getTime} findLatest={findLatest}/>\n                );\n            }\n        });\n    };\n\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <div className=\"order-by\">\n                    <div>\n                        Add a Title to this Tier\n                    </div>\n                    <AddButton\n                        title={`Add a Title to ${tier.name}`}\n                        image=\"images/add.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            }\n                        ]}\n                        onSubmit={(formValues) => {\n                            createTitle(formValues, tier.id);\n                            setExpand(true);\n                        }}\n                        form={`add-title-${tier.id}`}\n                        addClass='add-left'\n                    />\n                </div>\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n            const tierList = band.tiers\n                .map(id => tiers[id])\n                .sort((a, b) => a.position < b.position ? -1 : 1)\n                .map(t => {\n                    if (t) {\n                        return { value: t.position, display: t.position };\n                    }\n                });\n\n\n            return (\n                <AddButton\n                    title={`Edit ${tier.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Tier Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true        \n                        }, {\n                            label: 'Tier Position',\n                            name: 'position',\n                            type: 'select',\n                            options: tierList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editTier(formValues, tier.id)}\n                    initialValues={{ name: tier.name, position: tier.position }}\n                    form={`edit-tier-${tier.id}`}\n                    enableReinitialize={true}\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deleteTier(tier.id)}\n                    displayName={tier.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n    const renderOrderButton = () => {\n        if (!tier.orderBy || tier.orderBy === 'date') {\n            return (\n                <div className='order-by'>\n                    <div>Order titles by: </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrder(tier.id, 'name');\n                        }}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        }\n        \n        if (tier.orderBy === 'name') {\n            return (\n                <div className='order-by'>\n                    <div>Order titles by:</div>\n                    <div\n                        className='order-button'\n                        onClick={e => {\n                            e.stopPropagation();\n                            setOrder(tier.id, 'date');\n                        }}\n                    >\n                        Date\n                    </div>\n                    <div\n                        className='order-button order-active'\n                        onClick={e => e.stopPropagation()}\n                    >\n                        ABC\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    const renderOptions = () => {\n\n        return <>\n            {renderAddButton()}\n            {renderOrderButton()}     \n        </>;\n    };\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)}>\n                <div className=\"marqee\">\n                    <div className=\"tier-name\">\n                        <img className={`arrow ${arrow}`} src={`images/right-arrow.svg`} />\n                        <h2>{tier.name}</h2>\n                        \n                    </div>\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{tier.trackList.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <div className={`tier-options ${expand ? 'options-visible' : ''}`}>\n                {expand && renderOptions()}\n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && titlesToRender && renderTitles()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        titles: state.titles,\n        band: state.bands.currentBand,\n        tiers: state.tiers\n    }\n};\n\n\nexport default connect(mapStateToProps, { createTier, fetchTitles, editTier, createTitle, deleteTier, setOrder })(requireAuth(Tier));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport { editPlaylistSong, fetchVersions, fetchBounces, deletePlaylistSong } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\n\nconst PlaylistSong = ({ playlist, playlists, song, playlistSongs, authorized, versions, bounces, titles, fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong, audio, getTime, band, doUpdate }) => {\n\n    const [playSong, setPlaySong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(song.title);\n        titles[song.title].versions.forEach(id => {\n            fetchBounces(id);\n        });\n    }, []);\n    \n    useEffect(() => {\n        if (titles[song.title]) {\n            setPlaySong({\n                    playlist,\n                    title: titles[song.title],\n                    version: versions[song.version],\n                    bounce: bounces[song.bounce],\n                    position: song.position\n                });\n            }\n            if (bounces[song.bounce]) {\n                getTime({ id: song.id, duration: bounces[song.bounce].duration });\n            }   \n    }, [playlistSongs[song.id], bounces[song.bounce], titles[song.title], versions[song.version]]);\n\n    useEffect(() => {\n        // console.log(doUpdate);\n        if (doUpdate) {\n            updateToCurrent();\n        }\n    }, [doUpdate]);\n\n    const renderPlayContainer = () => {\n\n        if (playSong && playSong.bounce && playSong.version) {\n            return <PlayContainer song={playSong} parentType=\"playlist\" />;\n        } else {\n            return (\n                <div className=\"playlistsong-no-bounce\">\n                    <p>\n                        {versions[song.version] ? `${versions[song.version].name}` : 'No Version Selected'}\n                    </p>\n                    <p>\n                        No Bounce Selected\n                    </p>\n                </div>\n            );\n        }\n    };\n\n    const onEditSubmit = formValues => {\n        const thisVersion = Object.values(versions).find(v => v.bounces.includes(formValues.bounce));\n        editPlaylistSong({\n            ...formValues,\n            version: thisVersion.id,\n            playlistId: playlist.id\n        }, song.id);\n    };\n\n    const updateToCurrent = () => {\n\n        const thisTitle = titles[song.title];\n        const titleVersions = thisTitle.versions.map(id => versions[id]);\n        const currentVersion = titleVersions.find(v => v && v.current);\n        if (currentVersion) {\n            const versionBounces = currentVersion.bounces.map(id => bounces[id]);\n            const currentBounce = versionBounces.find(b => b && b.latest);\n            if (currentBounce) {\n                editPlaylistSong({\n                    bounce: currentBounce.id,\n                    version: currentVersion.id,\n                    position: song.position,\n                    playlistId: playlist.id\n                }, song.id);\n            }\n        }\n\n    };\n\n    const renderEditButton = () => {\n        if (authorized && titles[song.title]) {\n\n            const otherSongs = Object.values(playlistSongs)\n                .filter(s => playlist.songs.includes(s.id))\n                .sort((a,b) => a.position < b.position ? -1 : 1)\n                .map(s => {\n                    return { value: s.position, display: s.position };\n            });\n\n            const thisTitle = titles[song.title];\n\n            const otherVersions = thisTitle.versions.map(id => versions[id]);\n\n            const otherBounces = otherVersions.map(v => {\n                if (v) {\n                    return v.bounces.map(id => bounces[id]);\n                }\n            });\n\n\n            const editOptions = [];\n            \n            otherVersions.forEach((v, i) => {\n                if (otherBounces[i]) {\n                    otherBounces[i].forEach(b => {\n                        if (b) {\n                            let current = '';\n                            if (v.current && b.latest) {\n                                current =' * current';\n                            }\n                            editOptions.push({\n                                value: b.id,\n                                display: `${v.name} -- ${moment.utc(b.date).format('MM/DD/YY')}${current}`\n                            });\n                        }\n                    });\n                }\n            });\n\n\n            const bandPlaylists = band.playlists\n                .filter(id => id !== playlist.id)\n                .map(id => playlists[id]);\n                \n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name };\n                }\n            });\n\n            playlistOptions.unshift({ value: null, display: ''})\n\n            return (\n                <AddButton\n                    image='/images/edit.png'\n                    title={`Edit ${titles[song.title].title}`}\n                    onSubmit={formValues => onEditSubmit(formValues)}\n                    fields={[\n                        {\n                            name: 'position',\n                            label: 'Position',\n                            type: 'select',\n                            options: otherSongs\n                        },\n                        {\n                            name: 'bounce',\n                            label: 'Bounce',\n                            type: 'select',\n                            options: editOptions,\n                            required: true\n                        },\n                        {\n                            label: 'Add to Playlist',\n                            name: 'move',\n                            type: 'select',\n                            options: playlistOptions\n                        }\n                    ]}\n                    initialValues={song.bounce ? { ..._.pick(song, 'position', 'bounce'), move: null } : { position: song.position, move: null }}\n                    form={`edit-playlistsong-${song.id}`}\n                    enableReinitialize={true}\n                    addClass='add-right'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylistSong(song.id, playlist.id)}\n                    displayName={titles[song.title].title}\n                />\n            );\n        }\n    };\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n    const parent = audio.parent ? audio.parent.id : null;\n\n    let currentClass = '';\n\n    if (current && song.bounce) {\n        currentClass = parent === playlist.id && current === song.bounce ? 'current-song' : '';\n    }\n\n\n    return (\n        <div className='title-margin'>\n            <div className={`row title playlistsong ${currentClass}`}>                    \n                <div className=\"marqee\">\n                    <div className='title-name'>\n                        <div className=\"song-position\">\n                            <p>{song.position}</p>\n                        </div>\n                        <h3>{song && titles[song.title] && titles[song.title].title}</h3>\n                    </div>      \n\n                    {renderPlayContainer()}\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\n\n\nconst mapStateToProps = state => {\n\n    return {\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        versions: state.versions,\n        bounces: state.bounces,\n        titles: state.titles,\n        audio: state.audio\n    }\n\n}\n\nexport default connect(mapStateToProps, { fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong })(requireAuth(PlaylistSong));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchPlaylistSongs, deletePlaylist, editPlaylist } from '../actions';\nimport PlaylistSong from './PlaylistSong';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Playlist = ({ playlist, playlists, fetchPlaylistSongs, playlistSongs, authorized, editPlaylist, deletePlaylist, band }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [playlistList, setPlaylistList] = useState([]);\n    const [times, setTimes] = useState({});\n    const [songsToRender, setSongsToRender] = useState(null);\n    const [doUpdate, setDoUpdate] = useState(false);\n\n\n    useEffect(() => {\n        fetchPlaylistSongs(playlist.id);\n    }, []);\n\n    useEffect(() => {\n        setSongsToRender(playlist.songs.map(id => playlistSongs[id]));\n    }, [playlistSongs, playlist.songs]);\n\n    const renderPlaylistSongs = () => {\n\n        songsToRender.sort((a, b) => a.position < b.position ? -1 : 1);\n\n        return songsToRender.map(song => {\n            if (song) {\n                return (\n                <PlaylistSong song={song} playlist={playlist} key={song.id} getTime={getTime} doUpdate={doUpdate} />\n                );\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (band.playlists.length) {\n            const playlistsToShow = band.playlists.map(id => playlists[id]).sort((a, b) => {\n                if (a.position < b.position) {\n                    return -1;\n                }\n                if (b.position < a.position) {\n                    return 1;\n                }\n            });\n            setPlaylistList(playlistsToShow.map(t => {\n                if (t) {\n                    return { value: t.position, display: t.position };\n                }\n            }));\n        }\n    }, [playlists]);\n\n    useEffect(() => {\n        if (doUpdate) {\n            setDoUpdate(false);\n        }\n    }, [doUpdate]);\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n\n            return (\n                <AddButton\n                    title={`Edit ${playlist.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Playlist Name',\n                            name: 'name',\n                            type: 'input',          \n                        }, {\n                            label: 'Playlist Position',\n                            name: 'position',\n                            type: 'select',\n                            options: playlistList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editPlaylist(formValues, playlist.id)}\n                    initialValues={_.pick(playlist, 'name', 'position')}\n                    form={`edit-${playlist.id}`}\n                    enableReinitialize={true}\n                    addClass='add-tier'\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylist(playlist.id)}\n                    displayName={playlist.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n    };\n\n    const getTime = (track) => {\n        if (times[track.id] !== track.duration) {\n            setTimes({ ...times, [track.id]: track.duration });\n        }\n    };\n\n    const showUpdatePlaylistCheckbox = () => {\n        if (authorized && expand) {\n            return (\n                <div className=\"playlist-update\">\n                    <div>\n                        Set all to current\n                    </div>\n                    <div\n                        className=\"playlist-update-btn\"\n                        onClick={e => {\n                            e.stopPropagation();\n                            setDoUpdate(true);\n                        }}\n                    />\n                </div>\n            );\n        }\n    };\n\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : 'closed';\n\n    return (\n        <>\n            <div className={`row tier ${expand ? 'row-open' : ''}`} onClick={() => setExpand(!expand)} >\n                <div className=\"marqee tier-info\">\n                    <div className=\"tier-name\"  >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`}/>\n                        <h2>{playlist.name}</h2>\n\n                        {showUpdatePlaylistCheckbox()}\n\n                    </div>\n\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{playlist.songs.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                            {renderEditButton()}\n                            {renderDeleteButton()}\n                    </div>\n                </div>   \n            </div>\n            <hr />\n            <div className={`title-container ${open}`}>\n                {expand && renderPlaylistSongs()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        playlists: state.playlists,\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand\n    }\n}\n\nexport default connect(mapStateToProps, { fetchPlaylistSongs, deletePlaylist, editPlaylist })(requireAuth(Playlist));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchTiers, fetchPlaylists, createTier, createPlaylist } from '../actions';\nimport Tier from './Tier';\nimport Playlist from './Playlist';\nimport AddButton from './AddButton';\nimport requireAuth from './requireAuth';\n\nconst BodyContainer = ({ fetchPlaylists, createTier, fetchTiers, tiers, playlists, band, authorized, createPlaylist, currentSong, handleUpdate, user }) => {\n\n    const [tierList, setTierList] = useState([]);\n    const [playlistList, setPlaylistList] = useState([]);\n\n    useEffect(() => {\n        fetchTiers(band.id);\n        fetchPlaylists(band.id);\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [user]);\n\n    useEffect(() => {\n        setTierList(band.tiers.map(id => tiers[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [tiers]);\n\n    useEffect(() => {\n        setPlaylistList(band.playlists.map(id => playlists[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [playlists]);\n\n    const renderTiers = () => {\n\n        return tierList.map(tier => {\n            if (tier) {\n                return (\n                    <Tier tier={tier} key={tier.id} />\n                );\n            }\n        });\n    };\n\n\n    const renderTierAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createTier(formValues)}\n                    title='Add a Tier'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Tier Name',\n                        name: 'tierName',\n                        type: 'input',\n                        required: true          \n                    }]}\n                    addClass='add-left'\n                    \n                />\n            );\n        }\n    };\n\n    const renderPlaylistAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createPlaylist(formValues)}\n                    title='Add a Playlist'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Playlist Name',\n                        name: 'playlistName',\n                        type: 'input',\n                        required: true             \n                    }]}\n                    addClass='add-left'\n                />\n            );\n        }\n    };\n\n    const renderPlaylists = () => {\n\n        return playlistList.map(playlist => {\n            if (playlist) {\n                return (\n                    <Playlist playlist={playlist} key={playlist.id} />               \n                );\n            }\n        });\n    };\n\n    const playbarActive = currentSong ? 'playbar-active' : ''\n\n    return (\n        <div className={`main ${playbarActive}`}>\n            <div className=\"section-header\">\n                <h2 className=\"section-title\">Tiers</h2>\n                <div className=\"section-add\">\n                    {renderTierAddButton()}\n                </div>\n            </div>\n            <hr />\n            {tiers && renderTiers()}\n            <div className=\"playlists\">\n                <div className=\"section-header\">\n                    <h2 className=\"section-title\">Playlists</h2>\n                    <div className=\"section-add\">\n                        {renderPlaylistAddButton()}\n                    </div>\n                </div>\n                <hr />\n                {playlists && renderPlaylists()}\n            </div>\n        </div>\n\n\n    );\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        tiers: state.tiers,\n        playlists: state.playlists,\n        currentSong: state.audio.currentSong,\n        user: state.auth.user,\n        band: state.bands.currentBand\n    };\n};\n\nexport default connect(mapStateToProps, { fetchTiers, fetchPlaylists, createTier, createPlaylist })(requireAuth(BodyContainer));","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { playAudio, pauseAudio, nextSong, prevSong, throwError, initializeAudio } from '../actions';\n\n\nclass AudioDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'production') {\n            this.url = 'https://exploring-the-space.com'\n        } else {\n            this.url = 'http://localhost:3001';\n        }\n        this.audio = React.createRef();\n    }\n\n\n    state = { volume: 50, sliderPosition: 0 };\n\n    formatTime(time) {\n\n        let minutes = time < 600 ? `0${Math.floor(time/60)}` : Math.floor(time/60);\n        let seconds = time % 60 < 10 ? `0${Math.floor(time % 60)}` : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    wrapUrl(id) {\n        return `${this.url}/api/audio/${id}.mp3`\n    }\n\n    updateSlider = () => {\n        const position = (this.audio.current.currentTime / this.audio.current.duration) * 1000;\n        this.time = this.formatTime(this.audio.current.currentTime);\n        if (!isNaN(position)) {\n            this.setState({\n                sliderPosition: position\n            });\n        }\n    }\n\n    setSpaceBarToPlay = (e) => {\n        if (e.code === 'Space') {\n            e.preventDefault();\n            if (this.props.pause) {\n                this.play();\n            } else {\n                this.pause();\n            }\n        }\n    }\n\n    audioError = () => {\n        const message = \"The audio player had an error, probably can't connect to server.\"\n        this.props.throwError(message);\n    }\n\n    componentDidMount() {\n\n        // if there's no audio element created, create one with the current song\n        // add event listener to link the slider position to the time of the song\n\n        \n        this.audio.current = new Audio();\n\n        this.audio.current.addEventListener('timeupdate', this.updateSlider);\n\n        this.audio.current.addEventListener('error', this.audioError);\n\n        // load next song at song end\n\n        this.audio.current.addEventListener('ended', this.nextSong);\n\n        // space bar stop/start\n\n        document.addEventListener('keydown', this.setSpaceBarToPlay);\n\n\n        this.audio.current.addEventListener('loadedmetadata', this.playOnLoad);\n        \n    }\n\n    componentDidUpdate(prevProps) {\n\n        // scroll down to compensate for the playbar pushing content down\n\n        if (!this.scrolled) {\n            window.scroll(window.scrollX, window.scrollY + 96);\n            this.scrolled = true;\n        }\n        \n        if (this.props.song) {\n            // if the current song is changed to something other than what is already loaded, change the src url and play the audio\n            // if redux gets a signal to play, play if not already\n            // reverse for pause\n            if (this.props.song !== prevProps.song) {\n                this.audio.current.src=this.wrapUrl(this.props.song.audio);\n                this.audio.current.volume = this.props.volume / 100;\n                // this.audio.current.play();\n            } else if (this.props.play && prevProps.pause) {\n\n                this.audio.current.play();\n            } else if (this.props.pause && prevProps.play) {\n                this.audio.current.pause();\n            }\n            if (this.props.volume !== prevProps.volume) {\n                this.audio.current.volume = this.props.volume / 100;\n            }\n        } else {\n            this.audio.current.pause();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.setSpaceBarToPlay);\n\n        this.audio.current.src='';\n        this.audio.current.removeEventListener('timeupdate', this.updateSlider);\n        this.audio.current.removeEventListener('error', this.audioError);\n        this.audio.current.removeEventListener('ended', this.nextSong);\n        this.audio.current.removeEventListener('loadedmetadata', this.playOnLoad);\n\n        this.props.initializeAudio();\n    }\n\n    playOnLoad = () => {\n        if (this.props.play) {\n            this.audio.current.play();\n        }\n    }\n\n    prevSong = () => {\n        if (this.audio.current.currentTime < 1) {\n            this.props.prevSong();\n        } else {\n            this.audio.current.currentTime = 0;\n        }\n    }\n\n    nextSong = () => {\n        this.props.nextSong();\n    }\n\n    play = () => {\n        this.props.playAudio();\n    }\n\n    pause = () => {\n        this.props.pauseAudio();\n    }\n\n    onSliderChange = (e) => {\n        const position = (e.target.value / 1000) * this.audio.current.duration;\n        this.audio.current.currentTime = position;\n    }\n\n    onPauseButton = () => {\n\n        if (this.props.play) {\n            this.pause();\n        } else {\n            this.play();\n        }\n\n    }\n\n    render() {\n\n        if (this.props.song) {\n\n            return (\n                <div className=\"playbar\">\n                    <div className=\"playbar-header\">\n                            <div className=\"playbar-title\">\n                                <p>{this.props.song.title.title}</p>\n                            </div>\n                            <div className=\"big-play-container\">\n                                <img\n                                    src=\"/images/prev.svg\"\n                                    className=\"audio-controls\"\n                                    onClick={this.prevSong}\n                                />\n                                <img\n                                    className=\"big-play-btn\"\n                                    src={this.props.play ? \"/images/pause.svg\" : \"/images/play.svg\"}\n                                    onClick={this.onPauseButton}\n                                />\n                                <img\n                                    src=\"/images/next.svg\"\n                                    className=\"audio-controls\"\n                                    onClick={this.nextSong}\n                                />\n                            </div>\n                    \n                        <div className=\"playbar-info\">\n                            <div className=\"playbar-info-detail\">\n                                <p>Version:</p>\n                                <p>{this.props.song.version}</p>\n                            </div>\n                            <div className=\"playbar-info-detail\">\n                                <p>Date:</p>\n                                <p>{this.displayDate(this.props.song.date)}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"playslider-container\">\n                        <div className=\"playslider-time\">\n                            {this.time}\n                        </div>\n                        <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"1000\"\n                            value={this.state.sliderPosition}\n                            className='playslider'\n                            onInput={this.onSliderChange}\n                        />\n                        <div className=\"playslider-time\">\n                            {this.formatTime(this.props.song.duration)}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.audio.currentSong,\n        play: state.audio.play,\n        pause: state.audio.pause,\n        volume: state.audio.volume\n    };\n};\n\nexport default connect(mapStateToProps, { playAudio, pauseAudio, nextSong, prevSong, throwError, initializeAudio })(AudioDisplay);","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchBand, signOut, changeVolume } from '../actions';\nimport Main from './Main';\nimport AudioDisplay from './AudioDisplay';\nimport requireAuth from './requireAuth';\n\nconst Header = ({ fetchBand, band, match, authorized, handleUpdate, user, signOut, volume, changeVolume }) => {\n\n    const [expand, setExpand] = useState(false);\n    const menu = useRef(null);\n\n    useEffect(() => {\n        fetchBand(match.params.bandName);\n        document.addEventListener('click', clickToDismiss, { capture: true });\n        return () => {\n            document.removeEventListener('click', clickToDismiss, { capture: true });\n        };\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [band, user]);\n\n    const clickToDismiss = (e) => {\n        if (menu.current && menu.current.contains(e.target)) {\n            return;\n        }\n        setExpand(false);\n    };\n\n    const renderAdmin = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/user\">User Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <div className=\"menu-item\" onClick={signOut}>Sign Out</div>\n            </div>\n        );\n    };\n\n    const renderHomeLink = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/\">Home</Link>\n                <Link className=\"menu-item\" to=\"/help\">Help</Link>\n                <Link className=\"menu-item\" to=\"/signin\">Sign In</Link>\n            </div>\n        );\n    };\n\n    const showContent = () => {\n\n        if (!band) {\n            return (\n                <div className=\"no-band\">\n                    <h1>This band does not exist on Exploring the Space, but you can create it.</h1>\n                    <div className=\"home-buttons\">\n                        <Link to=\"/\">\n                            Home\n                        </Link>\n                        <Link to=\"/help\">\n                            What Is It?\n                        </Link>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"band-header\">\n                <div className=\"band-name\">\n                    <h1>{band && band.name}</h1>\n                    <div className=\"menu-button\" ref={menu} onClick={() => setExpand(!expand)}>\n                        <img src=\"images/dots.png\" />\n                        {expand && (authorized ? renderAdmin() : renderHomeLink())}\n                    </div>\n                </div>\n                <div className=\"volume-container\">\n                    <input\n                        type=\"range\"\n                        min=\"0\" max=\"100\"\n                        className=\"volume\"\n                        value={volume}\n                        onInput={e => changeVolume(e.target.value)}\n                    />\n                    <img src=\"/images/volume.svg\" />\n                </div>\n            </div>\n        );\n    };\n\n\n\n    return <>\n        \n        <div className=\"header\">\n            <AudioDisplay />\n            {showContent()}\n        </div>\n\n        {band && <Main />}\n\n    </>;\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        band: state.bands.currentBand,\n        user: state.auth.currentUser,\n        volume: state.audio.volume\n    }\n}\n\nexport default connect(mapStateToProps, { fetchBand, signOut, changeVolume })(requireAuth(Header));","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { createBand, fetchBands, editBand, deleteBand, signOut } from '../actions';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\n\nconst User = ({ user, bands, createBand, fetchBands, editBand, deleteBand, signOut }) => {\n\n    useEffect(() => {\n        fetchBands();\n    }, []);\n\n    const renderBands = () => {\n        const bandList = user.bands.map(id => bands[id]);\n        if (!bandList.length || !bandList[0]) {\n            return <h3>No bands belong to this user</h3>\n        }\n        return bandList.map(band => {\n            if (band) {\n                return (\n                    <div className=\"band-item\" key={band.id}>\n                        <Link to={`/${band.url}`}>\n                            <h2>{band.name}</h2>\n                        </Link>\n                        <div className=\"band-buttons\">\n                            <AddButton\n                                onSubmit={formValues => editBand(formValues, band.id)}\n                                title={`Edit ${band.name}`}\n                                image=\"images/edit.png\"\n                                fields={[{\n                                    label: 'Band Name',\n                                    name: 'name',\n                                    type: 'input'\n                                }]}\n                                initialValues={{ name: band.name }}\n                                enableReinitialize={true}\n                                form={`edit-band-${band.id}`}\n                            />\n                            <DeleteButton\n                                onSubmit={() => deleteBand(band.id)}\n                                displayName={band.name}\n                            />\n                        </div>\n                    </div>                   \n                );\n            }\n        });\n    };\n\n    if (user) {\n        return <>\n            <div className=\"user-header\">\n                <div className=\"user-header-sub\">\n                    <h1 className=\"user-title\">\n                        {user.username}'s bands\n                    </h1>\n                    <AddButton\n                        onSubmit={formValues => createBand(formValues)}\n                        title='Create a Band'\n                        image=\"images/add.png\"\n                        fields={[{\n                            label: 'Band Name',\n                            name: 'bandName',\n                            type: 'input'\n                        }]}\n                    />\n                </div>\n                <div className=\"user-header-sub\">\n                    <Link className=\"user-link\" to=\"/\">\n                        Home\n                        </Link>\n                    <div className=\"user-link\" onClick={signOut}>\n                        Sign Out\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <div className=\"band-list\">\n                {renderBands()}\n            </div>\n            \n\n        </>;\n    } else {\n        return null;\n    }\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { createBand, fetchBands, editBand, deleteBand, signOut })(User);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass UserForm extends React.Component {\n    \n    renderInput = ({ input, label, meta, type, autoComplete, defaultValue }) => {\n\n        return (\n            <div>\n                <label>{label}</label>\n                <input\n                    type={type}\n                    autoComplete={autoComplete} \n                    {...input}\n                /> \n            </div>\n        );\n    };\n\n    submitForm = formValues => {\n        this.props.onSubmit(formValues);\n    };\n\n\n    render() {\n        return (\n            <form className='signin' onSubmit={this.props.handleSubmit(this.submitForm)}>\n                <Field\n                    name=\"username\"\n                    component={this.renderInput}\n                    label=\"Username: \"\n                    type=\"text\"\n                    autoComplete=\"username\"\n    \n                />\n                <Field\n                    name=\"password\"\n                    component={this.renderInput}\n                    label=\"Passwyrd: \"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <button className=\"signin-submit\">Submit</button>\n            </form>\n        );\n    }\n\n\n}\n\nexport default reduxForm({\n    form: 'userForm'\n})(UserForm);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signIn } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignIn = ({ signIn, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign In</h1>\n            <UserForm onSubmit={formValues => signIn(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signup\">\n                    Sign Up\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn })(SignIn);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport history from '../history';\nimport { signUp } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignUp = ({ signUp, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return (\n        <div className=\"auth\">\n            <div className=\"help-header\">\n                Exploring the Space\n            </div>\n            <h1>Sign Up</h1>\n            <UserForm onSubmit={formValues => signUp(formValues)}/>\n            <div className=\"home-buttons\">\n                <Link to=\"/\">\n                    Home\n                </Link>\n                <Link to=\"signin\">\n                    Sign In\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signUp })(SignUp);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { fetchBands } from '../actions';\n\nclass Home extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchBands();\n    }\n\n    renderBands() {\n\n        delete this.props.bands.currentBand;\n\n        const bands = Object.values(this.props.bands);\n\n        return bands.map(band => {\n            return (\n                <div className=\"band-item\" key={band.id}>\n                    <Link to={`/${band.url}`}>\n                        <h2>{band.name}</h2>\n                    </Link>\n                </div>\n            );\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 className=\"home-header\">Exploring the Space</h1>\n                <div className=\"home-buttons\">\n                    <Link to=\"/signin\">\n                        Sign In\n                    </Link>\n                    <Link to=\"/signup\">\n                        Sign Up\n                    </Link>\n                    <Link to=\"/help\">\n                        What Is It?\n                    </Link>\n                </div>\n                <h1>All Bands:</h1>\n                <div className=\"band-list\">\n                    {this.props.bands && this.renderBands()}\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { fetchBands })(Home);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Help = () => {\n    return <>\n        <div className=\"home-buttons\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"signin\">Sign In</Link>\n            <Link to=\"signin\">Sign Up</Link>\n        </div>\n        <div className=\"help\">\n            <div className=\"help-header\">\n                Exploring the Space allows you to keep track of your musical recordings in an easy to navigate catalogue.\n            </div>\n            <h1>\n                Here's How This Works\n            </h1>\n            <div className=\"tldr\">\n                TL;DR: Bands contain Tiers, which contain Titles (songs), which contain different versions, each of which can have one or more recordings. Bands also have Playlists which are collections of particular recordings.\n            </div>\n            <p>\n                Each user can have 1 or more bands.  Each band has their own page.\n            </p>\n\n            <h2>\n                The Band Page\n            </h2>\n            <p>\n                The band page has a \"Tiers\" sections and a \"Playlists\" section. The tiers are used to catalogue your songs, and the playlists are used to combine different songs into a certain order.\n            </p>\n            <h3>\n                Tiers\n            </h3>\n            <p>\n                A tier is a collection of songs. Tiers can be separated by different genres, songs that you're currently rehearsing versus songs that are still being written, or any other criteria.  Within the band page, these songs are called \"Titles.\" Click on a tier to reveal its titles.\n            </p>\n            <h3>\n                Titles\n            </h3>\n            <p>\n                Titles contain all the various versions and recordings of a particular song. On the title display, you will see the recording that is most up-to-date for this title, and a button to play it or download it. Click on the title to reveal the different versions it contains.\n            </p>\n            <h3>\n                Versions\n            </h3>\n            <p>\n                A version categorizes groups of recordings, and again you can use whatever criteria you want.  Maybe one version is band practice, and the other is a recording you're working on.  Each version contains one or more recordings, or \"Bounces.\" One and only one version for each title is the \"current\" version.\n            </p>\n            <h3>\n                Bounces\n            </h3>\n            <p>\n                Bounces are the root component of a song, and they represent a particular recording.  They are represented by a date. Like versions, one bounce per version is designated \"current.\"\n            </p>\n            <h3>\n                Playlists\n            </h3>\n            <p>\n                Playlists are where you can make ordered lists of particular bounces.  Each title has a display of its currently selected version and bounce, along with a button to add that recording to a playlist (you have to create the playlist first).\n            </p>\n            <p>\n                If you change the version or bounce you're listening to, the song in the playlist will remain the same one you originally added. If you want to change which version and/or bounce a song in a playlist represents, you can change that by editing it within the playlist.\n            </p>\n            <h2>\n                Controls\n            </h2>\n            <p>\n                If you are on a band page of a band you own, you will see additional buttons where you can modify the catalogue and upload new recordings.\n            </p>\n            <p className=\"danger\">\n                If you delete an element, everything contained within that element will be deleted!\n            </p>\n            <a href=\"https://github.com/andytisdall/greenhouse\">\n                Github for this project\n            </a>\n        </div>\n    </>;\n};\n\nexport default Help;","import React, { useRef, useEffect } from 'react';\nimport WaveformData from 'waveform-data';\n\nconst Waveform = ({ audio, isRecording }) => {\n  const canvas = useRef();\n  const audioContext = useRef();\n\n  useEffect(async () => {\n    if (isRecording && canvas.current) {\n      const ctx = canvas.current.getContext('2d');\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      await audioContext.current.close();\n    } else {\n      renderWaveform();\n    }\n  }, [isRecording]);\n\n  const renderWaveform = async () => {\n    audioContext.current = new AudioContext();\n    const buffer = await audio.arrayBuffer();\n    const options = {\n      audio_context: audioContext.current,\n      array_buffer: buffer,\n      scale: 128,\n    };\n    WaveformData.createFromAudio(options, (err, waveform) => {\n      if (err) {\n        console.log(err);\n      } else {\n        drawWaveform(waveform);\n      }\n    });\n  };\n\n  const drawWaveform = (waveform) => {\n    const ctx = canvas.current.getContext('2d');\n\n    const lengthMultiplier = waveform.length / 300;\n\n    const scaleY = (amplitude, height) => {\n      const range = 256;\n      const offset = 128;\n\n      return height - ((amplitude + offset) * height) / range;\n    };\n\n    ctx.beginPath();\n\n    const channel = waveform.channel(0);\n\n    // Loop forwards, drawing the upper half of the waveform\n    for (let x = 0; x < waveform.length; x++) {\n      const val = channel.max_sample(x);\n\n      ctx.lineTo(x / lengthMultiplier, scaleY(val, canvas.current.height));\n    }\n\n    // Loop backwards, drawing the lower half of the waveform\n    for (let x = waveform.length - 1; x >= 0; x--) {\n      const val = channel.min_sample(x);\n\n      ctx.lineTo(x / lengthMultiplier, scaleY(val, canvas.current.height));\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.fill();\n  };\n\n  return <canvas ref={canvas} />;\n};\n\nexport default Waveform;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Waveform from './Waveform';\n\nconst Playhead = ({ audio, isRecording }) => {\n  const [playheadPosition, setPlayheadPosition] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const player = useRef();\n\n  useEffect(() => {\n    player.current = new Audio();\n    player.current.onended = () => {\n      setIsPlaying(false);\n    };\n    player.current.onplay = () => {\n      setIsPlaying(true);\n    };\n    player.current.onpause = () => {\n      setIsPlaying(false);\n    };\n    player.current.ontimeupdate = updateSlider;\n    return () => {\n      player.current.ontimeupdate = null;\n      player.current.onended = null;\n      player.current.onplay = null;\n      player.current.onpause = null;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isRecording) {\n      setIsPlaying(false);\n      if (player.current) {\n        player.current.pause();\n      }\n    }\n  }, [isRecording]);\n\n  useEffect(() => {\n    if (audio) {\n      const url = URL.createObjectURL(audio);\n      player.current.src = url;\n    }\n  }, [audio]);\n\n  const renderPlayButton = () => {\n    if (!isRecording && audio && !isPlaying) {\n      return (\n        <img\n          src=\"/images/play.svg\"\n          className=\"play-icon\"\n          onClick={() => player.current.play()}\n        />\n      );\n    } else if (!isRecording && audio) {\n      return (\n        <img\n          src=\"/images/pause.svg\"\n          className=\"play-icon\"\n          onClick={() => player.current.pause()}\n        />\n      );\n    }\n  };\n\n  const updateSlider = () => {\n    const position =\n      (player.current.currentTime / player.current.duration) * 1000;\n    if (!isNaN(position)) {\n      setPlayheadPosition(position + player.current.duration / 300);\n    }\n  };\n\n  const onSliderChange = (e) => {\n    const position = (e.target.value / 1000) * player.current.duration;\n    if (!isNaN(position)) {\n      player.current.currentTime = position;\n    }\n  };\n\n  return (\n    <>\n      {renderPlayButton()}\n      <div className=\"waveform-display\">\n        <Waveform audio={audio} isRecording={isRecording} />\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1000\"\n          value={playheadPosition}\n          className=\"playhead\"\n          onInput={onSliderChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Playhead;\n","import React, { useState, useEffect } from 'react';\n\nconst Timer = ({ isRecording }) => {\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    let interval;\n    if (isRecording) {\n      interval = setInterval(() => {\n        setTimer(timer + 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n      setTimer(0);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isRecording, timer]);\n\n  const formatTime = (time) => {\n    let minutes =\n      time < 600 ? `0${Math.floor(time / 60)}` : Math.floor(time / 60);\n    let seconds =\n      time % 60 < 10 ? `0${Math.floor(time % 60)}` : Math.floor(time % 60);\n    return `${minutes}:${seconds}`;\n  };\n\n  return (\n    <div className=\"recorder-time\">{isRecording && formatTime(timer)}</div>\n  );\n};\n\nexport default Timer;\n","import React, { useEffect, useState } from 'react';\n\nconst DeviceControl = ({ inputSource, setInputSource }) => {\n  const [devices, setDevices] = useState([]);\n\n  useEffect(() => {\n    getDevices();\n    navigator.mediaDevices.ondevicechange = getDevices;\n  }, []);\n\n  const getDevices = async () => {\n    // get user input devices\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const inputDevices = devices.map((device) => {\n      if (device.kind === 'audioinput' && device.deviceId !== 'default') {\n        return device;\n      }\n    });\n    setDevices(inputDevices);\n    if (!inputSource) {\n      setInputSource(devices[0]);\n    }\n  };\n\n  const micSelect = () => {\n    const deviceList = devices.map((device) => {\n      if (device) {\n        return <option key={device.deviceId}>{device.label}</option>;\n      }\n    });\n    return <select>{deviceList}</select>;\n  };\n\n  return (\n    <div className=\"device-control\">\n      <div>Input device:</div>\n      <div className=\"mic-select\">{micSelect()}</div>\n    </div>\n  );\n};\n\nexport default DeviceControl;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  fetchTiers,\n  fetchTitles,\n  fetchVersions,\n  fetchBand,\n  fetchBounces,\n  createBounce,\n} from '../actions';\n\nconst AddRecording = ({\n  currentBand,\n  tiers,\n  titles,\n  versions,\n  bandName,\n  fetchBand,\n  fetchTiers,\n  fetchTitles,\n  fetchVersions,\n  fetchBounces,\n  createBounce,\n  audio,\n  uploadStarted,\n}) => {\n  const defaultItem = { name: 'choose...', id: '0' };\n  const displayDate = () => {\n    return new Date().toISOString().substring(0, 10);\n  };\n\n  const [selectedTitle, setSelectedTitle] = useState(defaultItem);\n  const [selectedTier, setSelectedTier] = useState(defaultItem);\n  const [selectedVersion, setSelectedVersion] = useState(defaultItem);\n  const [selectedDate, setSelectedDate] = useState(displayDate());\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [uploadLoading, setUploadLoading] = useState(false);\n\n  const [titleList, setTitleList] = useState([]);\n  const [tierList, setTierList] = useState([]);\n  const [versionList, setVersionList] = useState([]);\n\n  useEffect(() => {\n    fetchBand(bandName);\n  }, []);\n\n  useEffect(() => {\n    if (currentBand) {\n      fetchTiers(currentBand.id);\n    }\n  }, [currentBand]);\n\n  useEffect(() => {\n    if (currentBand) {\n      const list = currentBand.tiers.map((id) => tiers[id]);\n      setTierList(list);\n    }\n  }, [tiers]);\n\n  useEffect(() => {\n    if (selectedTier !== defaultItem) {\n      fetchTitles(selectedTier.id);\n      setVersionList([]);\n      setSelectedVersion(defaultItem);\n    }\n  }, [selectedTier]);\n\n  useEffect(() => {\n    if (selectedTier !== defaultItem) {\n      const list = selectedTier.trackList.map((id) => titles[id]);\n      setTitleList(list);\n    }\n  }, [titles]);\n\n  useEffect(() => {\n    if (selectedTitle !== defaultItem) {\n      fetchVersions(selectedTitle.id);\n    }\n  }, [selectedTitle]);\n\n  useEffect(() => {\n    if (selectedTitle !== defaultItem) {\n      const list = selectedTitle.versions.map((id) => versions[id]);\n      setVersionList(list);\n    }\n  }, [versions]);\n\n  useEffect(() => {\n    if (selectedVersion.id !== '0') {\n      fetchBounces(selectedVersion.id);\n    }\n  }, [selectedVersion]);\n\n  useEffect(() => {\n    if (uploadLoading && !uploadStarted) {\n      setUploadLoading(false);\n      setUploadSuccess(true);\n      setTimeout(() => {\n        setUploadSuccess(false);\n      }, 10000);\n    }\n    if (uploadStarted && !uploadLoading) {\n      setUploadLoading(true);\n    }\n  }, [uploadStarted]);\n\n  const selector = (stateList, onSelect, selectedItem) => {\n    const onChange = (e) => {\n      const selected = stateList.find((item) => item.id === e.target.value);\n      onSelect(selected);\n    };\n    const list = [defaultItem, ...stateList];\n    const options = list.map((item) => {\n      if (item) {\n        const name = item.name || item.title;\n        return (\n          <option value={item.id} key={item.id}>\n            {name}\n          </option>\n        );\n      }\n    });\n    return (\n      <select onChange={onChange} value={selectedItem.id}>\n        {options}\n      </select>\n    );\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (submitActive()) {\n      const file = new File([audio], 'recording.mp3', { lastModified: Date() });\n      const form = {\n        date: selectedDate,\n        latest: true,\n        file: [file],\n      };\n\n      createBounce(form, selectedVersion.id);\n    }\n  };\n\n  const submitActive = () => {\n    if (audio && selectedDate && selectedVersion.id !== '0') {\n      return true;\n    }\n    return false;\n  };\n\n  const renderUploadSuccess = () => {\n    return <div className=\"upload-success\">Recording Successfully Saved!</div>;\n  };\n\n  const renderUploadLoading = () => {\n    return (\n      <div className=\"upload-image\">\n        <p>Uploading...</p>\n        <img src=\"/images/windmill.gif\" className=\"windmill\" />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"add-recording\">\n      <div className=\"add-recording-select-row\">\n        <div className=\"add-recording-label\">Tier:</div>\n        <div>\n          {currentBand &&\n            tierList &&\n            selector(tierList, setSelectedTier, selectedTier)}\n        </div>\n      </div>\n\n      <div className=\"add-recording-select-row\">\n        <div className=\"add-recording-label\">Title:</div>\n        <div>\n          {selectedTier &&\n            titleList &&\n            selector(titleList, setSelectedTitle, selectedTitle)}\n        </div>\n      </div>\n\n      <div className=\"add-recording-select-row\">\n        <div className=\"add-recording-label\">Version:</div>\n        <div>\n          {selectedTitle &&\n            versionList &&\n            selector(versionList, setSelectedVersion, selectedVersion)}\n        </div>\n      </div>\n\n      <div className=\"add-recording-select-row\">\n        <div className=\"add-recording-label\">Date:</div>\n        <div>\n          <input\n            type=\"date\"\n            value={selectedDate}\n            onChange={(e) => setSelectedDate(e.target.value)}\n            className=\"calendar\"\n          />\n        </div>\n      </div>\n      <form onSubmit={onSubmit}>\n        <button\n          className={`${\n            submitActive() ? 'submit-button-centered' : 'submit-inactive'\n          }`}\n          type=\"submit\"\n        >\n          Save Bounce\n        </button>\n      </form>\n      {uploadSuccess && renderUploadSuccess()}\n      {uploadLoading && renderUploadLoading()}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tiers: state.tiers,\n    titles: state.titles,\n    versions: state.versions,\n    currentBand: state.bands.currentBand,\n    uploadStarted: state.bands.uploadStarted,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTiers,\n  fetchTitles,\n  fetchVersions,\n  fetchBand,\n  createBounce,\n  fetchBounces,\n})(AddRecording);\n","import React, { useEffect, useRef, useState } from 'react';\nimport vmsg from 'vmsg';\n\nimport Playhead from './Playhead';\nimport Timer from './Timer';\nimport DeviceControl from './DeviceControl';\nimport AddRecording from './AddRecording';\n\nconst Recorder = ({ match }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audio, setAudio] = useState();\n  const [inputSource, setInputSource] = useState();\n  const [error, setError] = useState('');\n\n  const mediaRecorder = useRef();\n\n  useEffect(async () => {\n    // Initialize vmsg recorder\n    mediaRecorder.current = new vmsg.Recorder({\n      wasmURL: 'https://unpkg.com/vmsg@0.3.0/vmsg.wasm',\n    });\n  }, []);\n\n  const onRecord = async () => {\n    // setError(isLoading);\n    // if (!isLoading) {\n    // setIsLoading(true);\n    if (!isRecording) {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          audio: {\n            deviceId: inputSource.deviceId,\n          },\n        });\n        await mediaRecorder.current.initAudio();\n        await mediaRecorder.current.initWorker();\n        mediaRecorder.current.startRecording();\n        // setIsLoading(false);\n        setIsRecording(true);\n      } catch (e) {\n        console.error(e);\n        // setIsLoading(false);\n        setError(e);\n      }\n    } else {\n      const blob = await mediaRecorder.current.stopRecording();\n      setAudio(blob);\n      // setIsLoading(false);\n      setIsRecording(false);\n    }\n  };\n\n  const renderButtons = () => {\n    return (\n      <div className=\"recorder-buttons\">\n        <div onClick={onRecord} className=\"recorder-btn\">\n          {isRecording ? 'Stop' : 'Record'}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={isRecording ? 'recorder recording' : 'recorder'}>\n      <div>{error}</div>\n      <div className=\"playhead-container\">\n        {audio && !isRecording && (\n          <Playhead audio={audio} isRecording={isRecording} />\n        )}\n      </div>\n\n      {renderButtons()}\n\n      <Timer isRecording={isRecording} />\n\n      <DeviceControl\n        inputSource={inputSource}\n        setInputSource={setInputSource}\n      />\n\n      <AddRecording bandName={match.params.bandName} audio={audio} />\n    </div>\n  );\n};\n\nexport default Recorder;\n","import React, { useEffect } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Error from './Error';\nimport Header from './Header';\nimport User from './User';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Home from './Home';\nimport Help from './Help';\nimport Recorder from './Recorder';\nimport { fetchUser } from '../actions';\n\nimport history from '../history';\n\nconst App = ({ signedIn, fetchUser, error }) => {\n  useEffect(() => {\n    if (signedIn) {\n      fetchUser();\n    }\n  }, []);\n\n  const errClass = error ? 'error-margin' : '';\n\n  return (\n    <>\n      <Error />\n      <div className={`container ${errClass}`}>\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/signin\" exact component={SignIn} />;\n            <Route path=\"/signup\" exact component={SignUp} />;\n            <Route\n              path=\"/user\"\n              exact\n              render={(routeProps) => {\n                if (!signedIn) {\n                  history.push('/signin');\n                  return null;\n                }\n                return <User {...routeProps} />;\n              }}\n            />\n            <Route path=\"/help\" exact component={Help} />\n            <Route path=\"/:bandName/record\" exact component={Recorder} />\n            <Route path=\"/:bandName\" component={Header} />\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    signedIn: state.auth.isSignedIn,\n    error: state.error.error,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUser })(App);\n","import { SIGN_IN, SIGN_OUT, CREATE_BAND } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: false,\n    user: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, user: action.payload };\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, user: null };\n        case CREATE_BAND:\n            const { user } = state;\n            user.bands.push(action.payload.id);\n            return { ...state, user };\n        default:\n            return state;  \n    } \n};\n","import { PLAY_AUDIO, PAUSE_AUDIO, QUEUE_SONGS, NEXT_SONG, DELETE_BOUNCE, CHANGE_VOLUME, INITIALIZE_AUDIO } from \"../actions/types\";\n\nconst initialState = {\n    play: false,\n    volume: 75,\n    currentSong: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case PLAY_AUDIO:\n            return { ...state, play: true, pause: false };\n        case PAUSE_AUDIO:\n            return { ...state, play: false, pause: true };\n        case QUEUE_SONGS:\n            const { song, parent } = action.payload;\n            return { ...state, currentSong: song, play: true, parent };\n        case NEXT_SONG:\n            return { ...state, currentSong: action.payload };\n        case DELETE_BOUNCE:\n            if (state.currentSong && action.payload.bounce.id === state.currentSong.audio) {\n                return { ...initialState };\n            } else {\n                return state;\n            }\n            // if (state.queue.length) {\n            //     state.queue = state.queue.filter(song => song.audio !== action.payload.bounce.id);\n            //     return { ...state };\n            // }\n        case CHANGE_VOLUME:\n            return { ...state, volume: action.payload };\n        case INITIALIZE_AUDIO:\n            return { ...initialState };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport tierReducer from './tierReducer';\nimport titleReducer from './titleReducer';\nimport versionReducer from './versionReducer';\nimport bounceReducer from './bounceReducer';\nimport playlistReducer from './playlistReducer';\nimport playlistSongReducer from './playlistSongReducer';\nimport bandReducer from './bandReducer';\nimport errorReducer from './errorReducer';\nimport audioReducer from './audioReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    tiers: tierReducer,\n    titles: titleReducer,\n    versions: versionReducer,\n    bounces: bounceReducer,\n    playlists: playlistReducer,\n    playlistSongs: playlistSongReducer,\n    bands: bandReducer,\n    error: errorReducer,\n    audio: audioReducer\n});","import { FETCH_TIERS, CREATE_TIER, EDIT_TIER, DELETE_TIER, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, ORDER_TIER } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TIERS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TIER:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_TIER:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_TIER:\n            const changePosition = Object.values(_.omit(state, state.currentBand)).filter(t => t.position > action.payload.position);\n            changePosition.forEach((tier) => {\n                tier.position = tier.position - 1;\n            });\n            delete state[action.payload.id];\n            return { ...state, ..._.mapKeys(changePosition, 'id') };\n        case ORDER_TIER:\n            state[action.payload.tier].orderBy = action.payload.orderBy;\n            return { ...state };\n        case CREATE_TITLE:\n            const addToTier = state[action.payload.tier];\n            addToTier.trackList.push(action.payload.title.id);\n            return { ...state, [addToTier.id]: addToTier };\n        case EDIT_TITLE:\n            if (action.payload.tier.new) {\n                const newTier = state[action.payload.tier.new];\n                newTier.trackList.push(action.payload.title.id);\n                const oldTier = state[action.payload.tier.old];\n                oldTier.trackList = oldTier.trackList.filter(id => id !== action.payload.title.id);\n                return { ...state, [newTier.id]: newTier, [oldTier.id]: oldTier };\n            } else {\n                return state;\n            }\n        case DELETE_TITLE:\n            const deleteFromTier = state[action.payload.tier];\n            if (deleteFromTier) {\n                const newTrackList = deleteFromTier.trackList.filter(id => id !== action.payload.title.id);\n                deleteFromTier.trackList = newTrackList;\n                return { ...state, [deleteFromTier.id]: deleteFromTier };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_TITLES, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, SELECT_VERSION, SELECT_BOUNCE, CREATE_VERSION, DELETE_VERSION } from '../actions/types';\nimport _ from 'lodash';\n\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TITLES:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TITLE:\n            return { ...state, [action.payload.title.id]: action.payload.title };\n        case EDIT_TITLE:\n            const oldTitle = state[action.payload.title.id];\n            const newTitle = action.payload.title;\n            newTitle.selectedVersion = oldTitle.selectedVersion;\n            newTitle.selectedBounce = oldTitle.selectedBounce;\n            return { ...state, [newTitle.id]: newTitle };\n        case DELETE_TITLE:\n            delete state[action.payload.title.id];\n            return { ...state };\n        case SELECT_VERSION:\n            const versionTitle = state[action.payload.titleId];\n            versionTitle.selectedVersion = action.payload.version;\n            return { ...state, [versionTitle.id]: { ...versionTitle } };\n        case SELECT_BOUNCE:\n            const bounceTitle = state[action.payload.titleId];\n            bounceTitle.selectedBounce = action.payload.bounce;\n            return { ...state, [bounceTitle.id]: { ...bounceTitle } }\n        case CREATE_VERSION:\n            const addToTitle = state[action.payload.title];\n            addToTitle.versions.push(action.payload.version.id);\n            addToTitle.selectedVersion = action.payload.version;\n            return { ...state, [addToTitle.id]: addToTitle};\n        case DELETE_VERSION:\n            const deleteFromTitle = state[action.payload.title];\n            if (deleteFromTitle) {\n                const newVersionList = deleteFromTitle.versions.filter(id => id !== action.payload.version.id);\n                deleteFromTitle.versions = newVersionList;\n                return { ...state, [deleteFromTitle.id]: deleteFromTitle };\n            }   \n        default:\n            return state;\n\n    }\n\n};","import { FETCH_VERSIONS, CREATE_VERSION, EDIT_VERSION, DELETE_VERSION, CREATE_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_VERSIONS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_VERSION:\n            return { ...state, [action.payload.version.id]: action.payload.version };\n        case EDIT_VERSION:\n            return { ...state, [action.payload.version.id]: action.payload.version };\n        case DELETE_VERSION:\n            delete state[action.payload.version.id];\n            return { ...state };\n        case CREATE_BOUNCE:\n            const addToVersion = state[action.payload.version];\n            addToVersion.bounces.push(action.payload.bounce.id);\n            return { ...state, [addToVersion.id]: addToVersion};\n        case DELETE_BOUNCE:\n            const deleteFromVersion = state[action.payload.version];\n            if (deleteFromVersion) {\n                const newBounceList = deleteFromVersion.bounces.filter(id => id !== action.payload.bounce.id);\n                deleteFromVersion.bounces = newBounceList;\n                return { ...state, [deleteFromVersion.id]: deleteFromVersion };\n            }\n        default:\n            return state;\n\n    }\n\n};","import {\n  FETCH_BOUNCES,\n  CREATE_BOUNCE,\n  EDIT_BOUNCE,\n  DELETE_BOUNCE,\n} from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_BOUNCES:\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\n    case CREATE_BOUNCE:\n      return { ...state, [action.payload.bounce.id]: action.payload.bounce };\n    case EDIT_BOUNCE:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_BOUNCE:\n      delete state[action.payload.bounce.id];\n      return { ...state };\n    default:\n      return state;\n  }\n};\n","import { FETCH_PLAYLISTS, FETCH_PLAYLIST, CREATE_PLAYLIST, EDIT_PLAYLIST, DELETE_PLAYLIST, CREATE_PLAYLISTSONG, DELETE_PLAYLISTSONG } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case FETCH_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case CREATE_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_PLAYLIST:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_PLAYLIST:\n            delete state.currentBand;\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.position);\n            changePosition.forEach((playlist) => {\n                playlist.position = playlist.position - 1;\n            });\n            delete state[action.payload.id]\n            return { ...state, ..._.mapKeys(changePosition, 'id')};\n        case CREATE_PLAYLISTSONG:\n            const addToPlaylist = state[action.payload.playlist];\n            addToPlaylist.songs.push(action.payload.playlistsong.id);\n            return { ...state, [addToPlaylist.id]: addToPlaylist};\n        case DELETE_PLAYLISTSONG:\n            const deleteFromPlaylist = state[action.payload.playlist];\n            if (deleteFromPlaylist) {\n                const newSongList = deleteFromPlaylist.songs.filter(id => id !== action.payload.playlistsong.id);\n                deleteFromPlaylist.songs = newSongList;\n                return { ...state, [deleteFromPlaylist.id]: deleteFromPlaylist };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTSONGS, CREATE_PLAYLISTSONG, EDIT_PLAYLISTSONG, DELETE_PLAYLISTSONG, DELETE_VERSION, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTSONGS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_PLAYLISTSONG:\n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong };\n        case EDIT_PLAYLISTSONG:\n            const oldPosition = state[action.payload.playlistsong.id]['position'];\n            const newPosition = action.payload.playlistsong.position;\n            let changedPositions = {};\n            \n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            \n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong, ...changedPositions };\n        case DELETE_PLAYLISTSONG:\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.playlistsong.position);\n            changePosition.forEach((song) => {\n                song.position = song.position - 1;\n            });\n            delete state[action.payload.playlistsong.id];\n            return { ...state };\n        case DELETE_VERSION:\n            for (const id in state) {\n                if (state[id].version === action.payload.version.id) {\n                    state[id].version = null;\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        case DELETE_BOUNCE:\n            for (const id in state) {\n                if (state[id].bounce === action.payload.bounce.id) {\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import {\n  FETCH_BAND,\n  FETCH_BANDS,\n  EDIT_BAND,\n  DELETE_BAND,\n  CREATE_BAND,\n  CREATE_TIER,\n  DELETE_TIER,\n  CREATE_PLAYLIST,\n  DELETE_PLAYLIST,\n  SIGN_OUT,\n  UPLOAD_STARTED,\n  CREATE_BOUNCE,\n} from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_BAND:\n      return {\n        ...state,\n        [action.payload.id]: action.payload,\n        currentBand: action.payload,\n      };\n    case FETCH_BANDS:\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\n    case CREATE_BAND:\n      return { ...state, [action.payload.id]: action.payload };\n    case EDIT_BAND:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_BAND:\n      delete state[action.payload.id];\n      return { ...state };\n    case CREATE_TIER:\n      const { currentBand } = state;\n      currentBand.tiers.push(action.payload.id);\n      return { ...state, [currentBand.id]: currentBand, currentBand };\n    case DELETE_TIER:\n      const band = state.currentBand;\n      const newTiers = band.tiers.filter((id) => id !== action.payload.id);\n      band.tiers = newTiers;\n      return { ...state, [band.id]: band, currentBand: band };\n    case CREATE_PLAYLIST:\n      const currentBandP = state.currentBand;\n      currentBandP.playlists.push(action.payload.id);\n      return {\n        ...state,\n        [currentBandP.id]: currentBandP,\n        currentBand: currentBandP,\n      };\n    case DELETE_PLAYLIST:\n      const bandP = state.currentBand;\n      const newPlaylists = bandP.playlists.filter(\n        (id) => id !== action.payload.id\n      );\n      bandP.playlists = newPlaylists;\n      return { ...state, [bandP.id]: bandP, currentBand: bandP };\n    case SIGN_OUT:\n      return _.omit(state, state.currentBand);\n    case UPLOAD_STARTED:\n      return { ...state, uploadStarted: true };\n    case CREATE_BOUNCE:\n      return { ...state, uploadStarted: false };\n    default:\n      return state;\n  }\n};\n","import { ERROR } from '../actions/types';\n\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case ERROR:\n            return { error: action.payload }\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\n\n\nconst initialState = {};\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n    initialState.auth = { isSignedIn: true };\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}