{"version":3,"sources":["apis/greenhouse.js","actions/types.js","history.js","actions/index.js","components/Error.js","components/AddButton.js","components/Modal.js","components/DeleteButton.js","components/requireAuth.js","components/Bounce.js","components/Version.js","components/PlayContainer.js","components/Title.js","components/Tier.js","components/PlaylistSong.js","components/Playlist.js","components/BodyContainer.js","components/AudioHeader.js","components/BandHeader.js","components/User.js","components/UserForm.js","components/SignIn.js","components/SignUp.js","components/Home.js","components/App.js","reducers/authReducer.js","reducers/audioReducer.js","reducers/index.js","reducers/tierReducer.js","reducers/titleReducer.js","reducers/versionReducer.js","reducers/bounceReducer.js","reducers/playlistReducer.js","reducers/playlistSongReducer.js","reducers/bandReducer.js","reducers/errorReducer.js","index.js"],"names":["url","instance","axios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","err","Promise","reject","SIGN_IN","SIGN_OUT","ERROR","FETCH_TIERS","FETCH_PLAYLISTSONGS","FETCH_PLAYLIST","FETCH_PLAYLISTS","FETCH_BAND","FETCH_BANDS","FETCH_TITLES","FETCH_VERSIONS","FETCH_BOUNCES","CREATE_TIER","CREATE_PLAYLISTSONG","CREATE_TITLE","CREATE_PLAYLIST","CREATE_VERSION","CREATE_BOUNCE","CREATE_BAND","EDIT_TIER","EDIT_PLAYLIST","EDIT_PLAYLISTSONG","EDIT_TITLE","EDIT_VERSION","EDIT_BOUNCE","EDIT_BAND","DELETE_TIER","DELETE_PLAYLIST","DELETE_PLAYLISTSONG","DELETE_TITLE","DELETE_VERSION","DELETE_BOUNCE","DELETE_BAND","PLAY_AUDIO","PAUSE_AUDIO","QUEUE_SONGS","NEXT_SONG","CHANGE_VOLUME","INITIALIZE_AUDIO","SELECT_VERSION","SELECT_BOUNCE","createBrowserHistory","errorHandler","message","response","data","error","type","payload","signOut","removeItem","history","push","throwError","fetchBands","dispatch","a","greenhouse","get","fetchVersions","titleId","fetchBounces","versionId","createTier","formValues","getState","currentBand","bands","post","id","editVersion","thisVersion","versions","current","patch","parentTitle","titles","versionList","map","oldCurrent","find","v","_","pick","editBounce","bounceId","thisBounce","bounces","latest","file","reader","FileReader","onload","event","window","AudioContext","webkitAudioContext","decodeAudioData","target","result","buffer","key","duration","parseInt","formObject","formData","FormData","append","parentVersion","bounceList","oldLatest","b","onerror","console","readAsArrayBuffer","deleteTier","tierId","trackList","forEach","deleteTitle","deleteVersion","playlists","Object","values","playlistSongs","filter","pls","title","playlist","pl","songs","includes","deletePlaylistSong","tier","remainingVersions","length","newCurrent","selectVersion","deleteBounce","version","remainingBounces","newLatest","selectBounce","bounce","playlistSongId","playlistId","playlistsong","playAudio","connect","state","className","onClick","AddButton","props","boxVisible","selectedOption","blockSpaceBarPress","e","stopPropagation","bodyClick","ref","contains","setState","showOptions","field","options","option","value","display","onDrop","input","files","onChange","addClass","meta","touched","autoFocus","required","undefined","showFields","fields","i","comp","label","Field","name","component","validate","submitForm","onSubmit","reset","showBox","handleSubmit","click","React","createRef","prevProps","prevState","this","document","addEventListener","capture","removeEventListener","src","image","Component","reduxForm","form","Modal","querySelector","classList","add","remove","ReactDOM","createPortal","onDismiss","content","actions","DeleteButton","displayName","useState","visible","setVisible","ChildComponent","ComposedComponent","authorized","handleUpdate","checkAuth","user","auth","createBounce","requireAuth","selectedBounce","setSelectedBounce","modalActive","setModalActive","useEffect","displayDate","date","moment","utc","format","renderBounceList","sort","latestTag","bounceCount","count","comments","onAddSubmit","initialValues","renderAddButton","enableReinitialize","renderEditButton","createVersion","selectedVersion","setSelectedVersion","setBounceList","versionCount","notes","renderBounces","queueSongs","song","allTitles","titleList","splice","indexOf","queue","audio","queuePlaylistSongs","allSongs","self","parentType","time","minutes","Math","floor","seconds","displayTime","band","createPlaylistSong","editTitle","getTime","expand","setExpand","setVersionList","setSong","versionToSelect","versionIds","log","bounceToSelect","arrow","currentSong","currentClass","renderPlayContainer","playlistOptions","onAddToPlaylist","renderButtons","tiers","fetchTitles","editTier","createTitle","titlesToRender","setTitlesToRender","tierList","setTierList","times","setTimes","tiersToShow","position","t","track","open","total","reduce","prev","cur","renderTotalTime","renderDeleteButton","editPlaylistSong","playSong","setPlaySong","otherSongs","s","otherVersions","otherBounces","editOptions","onEditSubmit","fetchPlaylistSongs","deletePlaylist","playlistList","setPlaylistList","songsToRender","setSongsToRender","playlistsToShow","editPlaylist","fetchTiers","bandId","fetchPlaylists","createPlaylist","playbarActive","renderTierAddButton","renderPlaylistAddButton","AudioHeader","volume","sliderPosition","updateSlider","currentTime","formatTime","isNaN","setSpaceBarToPlay","code","preventDefault","pause","play","audioError","nextSong","setTimeout","pauseAudio","onSliderChange","onPauseButton","Audio","wrapUrl","initializeAudio","min","max","onInput","currentUser","signedIn","isSignedIn","fetchBand","bandName","changeVolume","match","params","to","createBand","editBand","deleteBand","username","bandList","renderBands","UserForm","renderInput","autoComplete","defaultValue","signIn","setItem","signUp","Home","fetchUser","errClass","path","exact","SignIn","SignUp","render","routeProps","BandHeader","INITIAL_STATE","initialState","combineReducers","formReducer","action","mapKeys","oldPosition","newPosition","changedPositions","item","pos","changePosition","omit","addToTier","deleteFromTier","newTrackList","versionTitle","bounceTitle","addToTitle","deleteFromTitle","newVersionList","addToVersion","deleteFromVersion","newBounceList","p","addToPlaylist","deleteFromPlaylist","newSongList","newTiers","currentBandP","bandP","newPlaylists","shift","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"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","file":"static/js/main.2c2bf8ee.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = {};\n\nif (process.env.NODE_ENV === 'production') {\n    url.baseURL = 'https://exploring-the-space.com/api';\n} else {\n    url.baseURL = 'http://localhost:3001/api'\n}\n\nconst instance = axios.create(url);\n\ninstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = token;\n        }\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\n\n\nexport default instance;","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const ERROR = 'ERROR';\n\nexport const FETCH_TIERS = 'FETCH_TIERS';\nexport const FETCH_PLAYLISTSONGS = 'FETCH_PLAYLISTSONGS';\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\nexport const FETCH_PLAYLISTS = 'FETCH_PLAYLISTS';\nexport const FETCH_BAND = 'FETCH_BAND';\nexport const FETCH_BANDS = 'FETCH_BANDS';\nexport const FETCH_TITLES = 'FETCH_TITLES';\nexport const FETCH_VERSIONS = 'FETCH_VERSIONS';\nexport const FETCH_BOUNCES = 'FETCH_BOUNCES';\n\nexport const FETCH_TITLE = 'FETCH_TITLE';\nexport const FETCH_VERSION = 'FETCH_VERSION';\nexport const FETCH_BOUNCE = 'FETCH_BOUNCE';\n\nexport const CREATE_TIER = 'CREATE_TIER';\nexport const CREATE_PLAYLISTSONG = 'CREATE_PLAYLISTSONG';\nexport const CREATE_TITLE = 'CREATE_TITLE';\nexport const CREATE_PLAYLIST = 'CREATE_PLAYLIST';\nexport const CREATE_VERSION = 'CREATE_VERSION';\nexport const CREATE_BOUNCE = 'CREATE_BOUNCE';\nexport const CREATE_BAND = 'CREATE_BAND';\n\nexport const EDIT_TIER = 'EDIT_TIER';\nexport const EDIT_PLAYLIST = 'EDIT_PLAYLIST';\nexport const EDIT_PLAYLISTSONG = 'EDIT_PLAYLISTSONG';\nexport const EDIT_TITLE = 'EDIT_TITLE';\nexport const EDIT_VERSION = 'EDIT_VERSION';\nexport const EDIT_BOUNCE = 'EDIT_BOUNCE';\nexport const EDIT_BAND = 'EDIT_BAND';\n\nexport const DELETE_TIER = 'DELETE_TIER';\nexport const DELETE_PLAYLIST = 'DELETE_PLAYLIST';\nexport const DELETE_PLAYLISTSONG = 'DELETE_PLAYLISTSONG';\nexport const DELETE_TITLE = 'DELETE_TITLE';\nexport const DELETE_VERSION = 'DELETE_VERSION';\nexport const DELETE_BOUNCE = 'DELETE_BOUNCE';\nexport const DELETE_BAND = 'DELETE_BAND';\n\nexport const PLAY_AUDIO = 'PLAY_AUDIO';\nexport const PAUSE_AUDIO = 'PAUSE_AUDIO';\nexport const QUEUE_SONGS = 'QUEUE_SONGS';\nexport const NEXT_SONG = 'NEXT_SONG';\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\nexport const INITIALIZE_AUDIO = 'INITIALIZE_AUDIO';\n\nexport const SELECT_VERSION = 'SELECT_VERSION';\nexport const SELECT_BOUNCE = 'SELECT_BOUNCE';","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import greenhouse from '../apis/greenhouse';\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    ERROR,\n    FETCH_BAND,\n    FETCH_BANDS,\n    FETCH_TIERS,\n    FETCH_TITLES,\n    FETCH_VERSIONS,\n    FETCH_BOUNCES,\n    FETCH_PLAYLISTS,\n    FETCH_PLAYLISTSONGS,\n    CREATE_BAND,\n    CREATE_TIER,\n    CREATE_TITLE,\n    CREATE_VERSION,\n    CREATE_BOUNCE,\n    CREATE_PLAYLIST,\n    CREATE_PLAYLISTSONG,\n    EDIT_BAND,\n    EDIT_TIER,\n    EDIT_TITLE,\n    EDIT_VERSION,\n    EDIT_BOUNCE,\n    EDIT_PLAYLIST,\n    EDIT_PLAYLISTSONG,\n    DELETE_BAND,\n    DELETE_TIER,\n    DELETE_TITLE,\n    DELETE_VERSION,\n    DELETE_BOUNCE,\n    DELETE_PLAYLIST,\n    DELETE_PLAYLISTSONG,\n    PLAY_AUDIO,\n    PAUSE_AUDIO,\n    QUEUE_SONGS,\n    NEXT_SONG,\n    CHANGE_VOLUME,\n    INITIALIZE_AUDIO,\n    SELECT_VERSION,\n    SELECT_BOUNCE,\n} from './types';\nimport history from '../history';\nimport _ from 'lodash';\n\nconst errorHandler = err => {\n    let message;\n    if (err.response) {\n        message = err.response.data.error\n    } else {\n        message = err.message;\n    }\n    return { type: ERROR, payload: message };\n};\n\n\nexport const signIn = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signin', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const signOut = () => {\n    localStorage.removeItem('token');\n    history.push('/');\n    return { type: SIGN_OUT };\n};\n\nexport const signUp = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/signup', formValues);\n        localStorage.setItem('token', response.data.token );\n        dispatch({ type: SIGN_IN, payload: response.data.user });\n        history.push('/user');\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const throwError = message => {\n    return { type: ERROR, payload: message };\n};\n\nexport const fetchUser = () => async dispatch => {\n    try {\n        const response = await greenhouse.get('/user');\n        if (response.data) {\n            dispatch({ type: SIGN_IN, payload: response.data });\n        } else {\n            dispatch(signOut());\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBand = bandName => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands/${bandName}`);    \n        dispatch({ type: FETCH_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBands = () => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bands`);\n        dispatch({ type: FETCH_BANDS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTiers = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/tiers/${bandId}`);\n        dispatch({ type: FETCH_TIERS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchTitles = tierId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/titles/${tierId}`);\n        dispatch({ type: FETCH_TITLES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchVersions = titleId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/versions/${titleId}`);\n        dispatch({ type: FETCH_VERSIONS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchBounces = versionId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/bounces/${versionId}`);\n        dispatch({ type: FETCH_BOUNCES, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylists = bandId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlists/${bandId}`);\n        dispatch({ type: FETCH_PLAYLISTS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const fetchPlaylistSongs = playlistId => async (dispatch) => {\n    try {\n        const response = await greenhouse.get(`/playlistsongs/${playlistId}`);\n        dispatch({ type: FETCH_PLAYLISTSONGS, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\nexport const createBand = formValues => async (dispatch) => {\n    try {\n        const response = await greenhouse.post('/bands', formValues);\n        dispatch({ type: CREATE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTier = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/tiers',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createTitle = (formValues, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles',\n            { ...formValues, currentBand: currentBand.id, tier: tierId }\n        );\n        dispatch({ type: CREATE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createVersion = (formValues, titleId) => async (dispatch, getState) => {\n    try {\n\n        const { currentBand } = getState().bands;\n        const parentTitle = getState().titles[titleId];\n\n        if (!parentTitle.versions.length) {\n            formValues.current = true;\n        }\n        \n        const response = await greenhouse.post(\n            '/versions',\n            { ...formValues, currentBand: currentBand.id, title: titleId }\n        );    \n\n        if (response.data.current) {\n            if (parentTitle.versions.length) {\n                const versionList = parentTitle.versions.map(id => getState().versions[id]);\n                const oldCurrent = versionList.find(v => v.current);\n                oldCurrent.current = false;\n                dispatch(editVersion(\n                    _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n                ));\n            }\n            dispatch({ type: SELECT_VERSION, payload: { titleId, version: response.data } });\n        }\n\n        dispatch({ type: CREATE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createBounce = (formValues, versionId, titleId) => async (dispatch, getState) => {\n\n    try {\n        const { currentBand } = getState().bands;\n        const parentVersion = getState().versions[versionId];\n\n        if (!parentVersion.bounces.length) {\n            formValues.latest = true;\n        }\n\n        formValues.file = formValues.file[0];\n        \n        // Create instance of FileReader\n        const reader = new FileReader();\n\n        // When the file has been succesfully read\n        reader.onload = event => {\n\n            // Create an instance of AudioContext\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n            // Asynchronously decode audio file data contained in an ArrayBuffer.\n            audioContext.decodeAudioData(event.target.result, async (buffer) => {\n\n                // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                const duration = parseInt(buffer.duration);\n\n                const formObject = {\n                    ...formValues,\n                    currentBand: currentBand.id,\n                    version: versionId,\n                    duration\n                }\n\n                const formData = new FormData();\n\n                for ( let key in formObject ) {\n                    formData.append(key, formObject[key]);\n                }\n\n                const response = await greenhouse.post(\n                    '/bounces', \n                    formData,\n                    {\n                        headers: { 'Content-Type': 'multipart/form-data'}\n                    }\n                );\n\n                if (response.data.latest) {\n                    \n                    if (parentVersion.bounces.length) {\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }\n                    dispatch({ type: SELECT_BOUNCE, payload: { titleId, bounce: response.data } });\n                }\n\n                dispatch({ type: CREATE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n            });\n        };\n\n        // In case the file couldn't be read\n        reader.onerror =  event => {\n            console.error(\"An error ocurred reading the file: \", event);\n        };\n\n        // Read file as an ArrayBuffer, important !\n        reader.readAsArrayBuffer(formValues.file);\n\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylist = formValues => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlists',\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: CREATE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const createPlaylistSong = (formValues, playlistId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.post(\n            '/playlistsongs',\n            { \n                ...formValues,\n                playlist: playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: CREATE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBand = (formValues, bandId) => async dispatch => {\n    try {\n        const response = await greenhouse.patch('/bands', { ...formValues, currentBand: bandId});\n        dispatch({ type: EDIT_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTier = (formValues, tierId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/tiers/${tierId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editTitle = (formValues, titleId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/titles/${titleId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_TITLE, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editVersion = (formValues, versionId, titleId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisVersion = getState().versions[versionId];\n        if (thisVersion.current) {\n            formValues.current = true;\n        }\n        const response = await greenhouse.patch(\n            `/versions/${versionId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        if (response.data.current && !thisVersion.current) {\n            const parentTitle = getState().titles[titleId];\n            const versionList = parentTitle.versions.map(id => getState().versions[id]);\n            const oldCurrent = versionList.find(v => v.current);\n            oldCurrent.current = false;\n            dispatch(editVersion(\n                _.pick(oldCurrent, 'name', 'notes', 'current'), oldCurrent.id, titleId\n            ));   \n        }\n        dispatch({ type: EDIT_VERSION, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editBounce = (formValues, bounceId, versionId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const thisBounce = getState().bounces[bounceId];\n        if (thisBounce.latest) {\n            formValues.latest = true;\n        }\n        if (formValues.file) {\n            formValues.file = formValues.file[0];\n \n            // Create instance of FileReader\n            const reader = new FileReader();\n    \n            // When the file has been succesfully read\n            reader.onload = event => {\n    \n                // Create an instance of AudioContext\n                const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    \n                // Asynchronously decode audio file data contained in an ArrayBuffer.\n                audioContext.decodeAudioData(event.target.result, async (buffer) => {\n    \n                    // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\n                    const duration = parseInt(buffer.duration);\n    \n                    const formObject = {\n                        ...formValues,\n                        currentBand: currentBand.id,\n                        duration\n                    }\n    \n                    const formData = new FormData();\n    \n                    for ( let key in formObject ) {\n                        formData.append(key, formObject[key]);\n                    }\n    \n                    const response = await greenhouse.post(\n                        `/bounces${bounceId}`, \n                        formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data'}\n                        }\n                    );\n\n                    if (response.data.latest && !thisBounce.latest) {\n                        const parentVersion = getState().versions[versionId];\n                        const bounceList = parentVersion.bounces.map(id => getState().bounces[id]);\n                        const oldLatest = bounceList.find(b => b.latest);\n                        oldLatest.latest = false;\n                        dispatch(editBounce(\n                            _.pick(oldLatest, 'date', 'comments', 'latest'), oldLatest.id, versionId\n                        ));\n                    }\n    \n                    dispatch({ type: EDIT_BOUNCE, payload: response.data });\n    \n                });\n            };\n    \n            // In case the file couldn't be read\n            reader.onerror =  event => {\n                console.error(\"An error ocurred reading the file: \", event);\n            };\n    \n            // Read file as an ArrayBuffer, important !\n            reader.readAsArrayBuffer(formValues.file);\n        } else {\n            const response = await greenhouse.patch(\n                `/bounces/${bounceId}`,\n                { ...formValues, currentBand: currentBand.id }\n            );\n            dispatch({ type: EDIT_BOUNCE, payload: response.data });\n        }\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylist = (formValues, playlistId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/playlists/${playlistId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const editPlaylistSong = (formValues, playlistSongId) => async (dispatch, getState) => {\n    try {\n        const { currentBand } = getState().bands;\n        const response = await greenhouse.patch(\n            `/playlistsongs/${playlistSongId}`,\n            { ...formValues, currentBand: currentBand.id }\n        );\n        dispatch({ type: EDIT_PLAYLISTSONG, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\n\n\n\n\nexport const deleteBand = bandId => async dispatch => {\n    try {\n        const response = await greenhouse.post(\n            '/bands/delete',\n            { currentBand: bandId }\n        );\n        response.data.tiers.forEach(tierId => {\n            dispatch(deleteTier(tierId, response.data.id));\n        });\n        dispatch({ type: DELETE_BAND, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTier = tierId => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/tiers/delete',\n            {\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.trackList.forEach(titleId => {\n            dispatch(deleteTitle(titleId, response.data.id));\n        });\n        dispatch({ type: DELETE_TIER, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteTitle = (titleId, tierId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/titles/delete',\n            {\n                titleId,\n                tierId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.versions.forEach(versionId => {\n            dispatch(deleteVersion(versionId, response.data.id));\n        });\n        const playlists = Object.values(getState().playlists);\n        const playlistSongs = Object.values(getState().playlistSongs).filter(pls => pls.title === titleId);\n        playlistSongs.forEach(pls => {\n            const playlist = playlists.find(pl => pl.songs.includes(pls.id));\n            dispatch(deletePlaylistSong(pls.id, playlist.id));\n        });\n        dispatch({ type: DELETE_TITLE, payload: { title: response.data, tier: tierId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteVersion = (versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/versions/delete',\n            {\n                versionId,\n                titleId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.current) {\n            const parentTitle = getState().titles[titleId];\n            if (parentTitle) {\n                const remainingVersions = parentTitle.versions.filter(id => id !== versionId);\n                if (remainingVersions.length) {\n                    const newCurrent = getState().versions[remainingVersions[remainingVersions.length-1]];\n                    newCurrent.current = true;\n                    dispatch(selectVersion(newCurrent.id, titleId));\n                    dispatch(editVersion(\n                        _.pick(newCurrent, 'name', 'notes', 'current'), newCurrent.id, titleId\n                    ));\n                } else {\n                    dispatch(selectVersion(null, titleId));     \n                }   \n            }\n        }\n        response.data.bounces.forEach(bounceId => {\n            dispatch(deleteBounce(bounceId, response.data.id, titleId));\n        });\n        dispatch({ type: DELETE_VERSION, payload: { version: response.data, title: titleId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deleteBounce = (bounceId, versionId, titleId) => async (dispatch, getState) => {\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/bounces/delete',\n            {\n                bounceId,\n                versionId,\n                currentBand: currentBand.id\n            }\n        );\n        if (response.data.latest) {\n            const parentVersion = getState().versions[versionId];\n            if (parentVersion) {\n                const remainingBounces = parentVersion.bounces.filter(id => id !== bounceId);\n                if (remainingBounces.length) {\n                    const newLatest = getState().bounces[remainingBounces[remainingBounces.length -1]];\n                    newLatest.latest = true;\n                    dispatch(selectBounce(newLatest.id, titleId));\n                    dispatch(editBounce(\n                        _.pick(newLatest, 'date', 'comments', 'latest'), newLatest.id, versionId\n                    ));\n                } else {\n                    dispatch(selectBounce(null, titleId));\n                }  \n            }\n        }\n        dispatch({ type: DELETE_BOUNCE, payload: { bounce: response.data, version: versionId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylist = playlistId => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlists/delete',\n            {\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        response.data.songs.forEach(playlistSongId => {\n            dispatch(deletePlaylistSong(playlistSongId, response.data.id));\n        });\n        dispatch({ type: DELETE_PLAYLIST, payload: response.data });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const deletePlaylistSong = (playlistSongId, playlistId) => async (dispatch, getState) => {\n\n    const { currentBand } = getState().bands;\n    try {\n        const response = await greenhouse.post(\n            '/playlistsongs/delete',\n            {\n                playlistSongId,\n                playlistId,\n                currentBand: currentBand.id\n            }\n        );\n        dispatch({ type: DELETE_PLAYLISTSONG, payload: { playlistsong: response.data, playlist: playlistId } });\n    } catch (err) {\n        dispatch(errorHandler(err));\n    }\n};\n\nexport const playAudio = () => {\n    return { type: PLAY_AUDIO };\n};\n\nexport const pauseAudio = () => {\n    return { type: PAUSE_AUDIO };\n};\n\nexport const queueSongs = (song) => (dispatch, getState) => {\n\n    const allTitles = song.tier.trackList.map(id => getState().titles[id]);\n    const titleList = allTitles.splice(allTitles.indexOf(song.title));\n    const queue = [];\n    titleList.forEach(title => {\n        if (title && title.selectedVersion && title.selectedBounce) {\n            const version = getState().versions[title.selectedVersion.id];\n            const bounce = getState().bounces[title.selectedBounce.id];\n            queue.push({\n                title: title.title,\n                version: version.name,\n                date: bounce.date,\n                duration: bounce.duration,\n                audio: bounce.id\n            });\n        }\n    });\n    dispatch({ type: QUEUE_SONGS, payload: queue });\n};\n\nexport const queuePlaylistSongs = (song) => (dispatch, getState) => {\n\n    const allSongs = song.playlist.songs.map(id => getState().playlistSongs[id]);\n    const songList = allSongs.splice(allSongs.indexOf(song.self));\n    const queue = songList.map(song => {\n        const version = getState().versions[song.version];\n        const bounce = getState().bounces[song.bounce];\n        const title = getState().titles[song.title];\n        return {\n            title: title.title,\n            version: version.name,\n            date: bounce.date,\n            duration: bounce.duration,\n            audio: bounce.id\n        };\n    });\n    dispatch({ type: QUEUE_SONGS, payload: queue });\n};\n\n\nexport const nextSong = () => {\n    return { type: NEXT_SONG };\n}\n\nexport const changeVolume = value => {\n    return { type: CHANGE_VOLUME, payload: value };\n}\n\nexport const initializeAudio = () => {\n    return { type: INITIALIZE_AUDIO };\n}\n\n\nexport const selectVersion = (version, titleId) => {\n    return { type: SELECT_VERSION, payload: { version, titleId } };\n}\n\nexport const selectBounce = (bounce, titleId) => {\n    return { type: SELECT_BOUNCE, payload: { bounce, titleId } };\n}","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { throwError } from '../actions';\n\nconst Error = ({ error, throwError }) => {\n\n    if (!error) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\" onClick={() => throwError(null)}>\n            {error}\n        </div>\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.error.error\n    }\n}\n\nexport default connect(mapStateToProps, { throwError })(Error);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n\n\nclass AddButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    state = { boxVisible: false, selectedOption: null };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.boxVisible === false && this.state.boxVisible === true) {\n            document.addEventListener('click', this.bodyClick, {capture: true});\n            document.addEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        } else if (prevState.boxVisible === true && this.state.boxVisible === false) {\n            document.removeEventListener('click', this.bodyClick, {capture: true});\n            document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n        }\n        \n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.bodyClick, {capture: true});\n        document.removeEventListener('keydown', this.blockSpaceBarPress, {capture: true});\n    }\n\n    blockSpaceBarPress = (e) => {\n        e.stopPropagation();\n    }\n\n    bodyClick = (e) => {\n        if (this.ref.current && this.ref.current.contains(e.target)) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        }\n    }\n\n    showOptions = (field) => {\n        return field.options.map(option => {\n            return (\n                <option\n                    key={option.value}\n                    value={option.value}\n                >\n                    {option.display}\n                </option>\n            );\n        });\n    };\n\n    onDrop = (e, input) => {\n        const file = e.target.files[0];\n        const { onChange } = input;\n        onChange(file);\n    }\n\n    input = (field) => {\n        let addClass = '';\n        if (field.type === 'date') {\n            addClass = 'calendar';\n        }\n\n        if (field.type === 'file') {\n            delete field.input.value;\n\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <input\n                    {...field.input}\n                    type='file'\n                    className='inputfile'\n\n                    onDrop={(e) => this.onDrop(e, field.input)}\n                        \n                />\n            </>;\n        } else if (field.type === 'select') {\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <select\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </select>\n            </>;\n        } else {\n            return <>\n                <div className=\"form-errors\">\n                    {field.meta.touched && (field.meta.error && <p>{field.meta.error}<span>&darr;</span></p>)}\n                </div>\n                <input\n                    {...field.input}\n                    autoFocus={field.autoFocus}\n                    type={field.type}\n                    className={`text-input ${addClass}`}\n                />\n            </>;\n        }\n    }\n\n    required = value => {\n        return value ? undefined : 'Required';\n    }\n\n    showFields = () => {\n\n        return this.props.fields.map((field, i) => {\n            const autoFocus = i === 0 ? true : false;\n            let comp = this.input;\n            // if (field.type === 'select') {\n            //     comp = 'select'\n            // }\n            return <div key={field.label}>\n                <label>{field.label}: </label>\n                <Field\n                    name={field.name}\n                    component={comp}\n                    autoFocus={autoFocus}\n                    type={field.type}\n                    validate={field.required ? this.required : null}\n                    options={field.options}\n                >\n                    {field.options ? this.showOptions(field) : null}\n                </Field>\n            </div>\n        });\n \n    };\n\n    submitForm = (formValues) => {\n        this.props.onSubmit(formValues);\n        this.setState({ boxVisible: false });\n        this.props.reset();\n    }\n\n    showBox = () => {\n        if (this.state.boxVisible) {\n            let baseClass = 'addbox';\n            if (this.props.addClass) {\n                baseClass = 'addbox add-bounce';\n            }\n            const addClass = this.props.addClass ? 'add-bounce' : '';\n            return <>    \n                <div className={`addbox ${addClass}`} onClick={e => e.stopPropagation()}>\n                    <h3 className=\"addbox-title\">{this.props.title}</h3>\n                    <form onSubmit = {this.props.handleSubmit(this.submitForm)}>\n                        {this.showFields()}\n                        <div className=\"submit-button-centered\">\n                            <button className=\"submit-button\" type='submit'>OK</button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        }\n    }\n\n    click = (e) => {\n        e.stopPropagation();\n        if (this.ref.current && this.ref.current === e.target) {\n            return;\n        }\n        if (this.state.boxVisible) {\n            this.setState({ boxVisible: false });\n        } else {\n            this.setState({ boxVisible: true });\n        }\n\n    }\n    \n    render() {\n\n        return <>\n            <div className=\"add\" onClick={this.click} ref={this.ref}>\n                <img src={this.props.image} />\n                {this.showBox()}\n            </div>\n        </>;\n    }\n\n}\n\nexport default reduxForm({ form: 'form' })(AddButton);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Modal extends React.Component {\n\n    componentDidMount() {\n        document.querySelector('.container').classList.add('modal-active');\n    }\n    componentWillUnmount() {\n        document.querySelector('.container').classList.remove('modal-active');\n    }\n\n    render() {\n        return ReactDOM.createPortal(\n            <div onClick={this.props.onDismiss} className=\"dimmer\">\n                <div \n                    onClick={e => e.stopPropagation()}\n                    className=\"modal-box\"\n                >\n                    <div>\n                        {this.props.content}\n                    </div>\n                    <div>\n                        {this.props.actions}\n                    </div>\n                </div>\n            </div>,\n            document.querySelector('#modal')\n        );\n    }\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from './Modal';\n\nconst DeleteButton = ({ onSubmit, displayName }) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const renderContent = () => {\n        return `Seriously delete ${displayName}?`;\n    };\n\n    const renderActions = () => {\n        return (\n            <>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => {\n                        onSubmit();\n                        setVisible(false);\n                    }}\n                >\n                    Delete\n                </button>\n                <button\n                    className=\"modal-button\"\n                    onClick={() => setVisible(false)}\n                >\n                    No Wait\n                </button>\n            </>\n        );\n    };\n\n    const showModal = () => {\n\n        return (\n            <Modal \n                content={renderContent()}\n                actions={renderActions()}\n                onDismiss={() => setVisible(false)}\n            />\n        );\n    };\n\n\n\n    const onClick = (e) => {\n        e.stopPropagation();\n        setVisible(true);\n    };\n\n\n    return (\n        <div>\n            <img src=\"/images/delete.png\" className=\"delete\" onClick={onClick} />\n            {visible && showModal()}\n        </div>\n    );\n\n};\n\nexport default DeleteButton;","import React from 'react';\nimport { connect } from 'react-redux';\n\nexport default ChildComponent => {\n\n    class ComposedComponent extends React.Component {\n\n        constructor(props) {\n            super(props);\n        }\n\n        state = { authorized: false };\n\n        componentDidMount() {\n            this.checkAuth();\n        }\n\n\n        // componentDidUpdate() {\n        //     this.checkAuth();\n        // }\n\n        handleUpdate = () => {\n            this.checkAuth();\n        }\n\n        checkAuth() {\n            if (this.props.user && this.props.currentBand && this.props.user.bands.includes(this.props.currentBand.id)) {\n                this.setState({ authorized: true });\n            }\n        }\n\n        render() {\n\n            return <ChildComponent {...this.props} authorized={this.state.authorized} handleUpdate={this.handleUpdate} />;\n\n        }\n\n    }\n\n    const mapStateToProps = state => {\n        return {\n            user: state.auth.user,\n            currentBand: state.bands.currentBand\n        }\n    };\n\n    return connect(mapStateToProps)(ComposedComponent);\n\n};\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\nimport { selectBounce, createBounce, editBounce, deleteBounce } from '../actions';\nimport Modal from './Modal';\n\nconst Bounce = ({ bounces, selectBounce, title, authorized, version, createBounce, editBounce, deleteBounce }) => {\n\n    const [selectedBounce, setSelectedBounce] = useState(title.selectedBounce);\n\n    const [modalActive, setModalActive] = useState(false);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(selectedBounce, title.id);\n        }\n    }, [selectedBounce]);\n\n    useEffect(() => {\n        if (selectedBounce && selectedBounce !== title.selectedBounce) {\n            selectBounce(title.selectedBounce, title.id);\n        }\n    }, [title.selectedBounce]);\n\n    useEffect(() => {\n        setSelectedBounce(title.selectedBounce);\n        setModalActive(false);\n    }, [bounces]);\n\n    const displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    const renderBounceList = () => {\n\n        if (bounces[0]) {\n\n            const bounceList = bounces.filter(b => b.id !== selectedBounce.id);\n            bounceList.sort((a, b) => a.date < b.date ? 1 : -1);\n\n            return bounceList.map(b => {\n                const current = b.latest ? <span className=\"list-current\"> * current</span> : null;\n                return <div\n                    className=\"dropdown-link change-song\"\n                    onClick={() => setSelectedBounce(b)}\n                    key={b.id}\n                >\n                    {displayDate(b.date)}\n                    {current}\n                </div>\n            });\n        }\n    };\n\n    const onAddSubmit = (formValues) => {\n\n        createBounce(formValues, version.id, title.id);\n        setModalActive(true);\n\n    };\n\n    const modalContent = () => {\n        return (\n\n                <div className='upload-image'>\n                    <p>Uploading...</p>\n                    <img className='windmill' src='/images/windmill.gif' />\n                </div>\n\n        );\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Bounce of ${version.name}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'File',\n                            name: 'file',\n                            type: 'file',\n                            required: true\n                        },\n                        {\n                            label: 'Date',\n                            name: 'date',\n                            type: 'date',\n                            required: true         \n                        },\n                        {\n                            label: 'Comments',\n                            name: 'comments',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Latest Bounce?',\n                            name: 'latest',\n                            type: 'checkbox',        \n                        },\n                    ]}\n                    onSubmit={formValues => onAddSubmit(formValues)}\n                    form={`add-bounce-${title.id}`}\n                    initialValues={{ latest: true }}\n                    addClass={true}\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={'Edit this Bounce'}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'File',\n                        name: 'file',\n                        type: 'file', \n                    },\n                    {\n                        label: 'Date',\n                        name: 'date',\n                        type: 'date',          \n                    },\n                    {\n                        label: 'Comments',\n                        name: 'comments',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Bounce?',\n                        name: 'latest',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={formValues => editBounce(formValues, selectedBounce.id, version.id)}\n                initialValues={\n                    { ..._.pick(selectedBounce, 'comments', 'latest'), date: moment.utc(selectedBounce.date).format('YYYY-MM-DD') }\n                }\n                form={`edit-bounce-${title.id}`}\n                enableReinitialize={true}\n                addClass={true}\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        return <DeleteButton\n            onSubmit={() => deleteBounce(selectedBounce.id, version.id, title.id)}\n            displayName={displayDate(selectedBounce.date)}\n        />;\n    };\n\n    const latestTag = () => {\n        if (selectedBounce.latest) {\n            return (\n                <div className=\"latest\">\n                    Current Bounce\n                </div>\n            );\n        }\n    };\n\n    const bounceCount = () => {\n        let count;\n        if (bounces.length === 1) {\n            count = '1 version';\n        } else {\n            count = `${bounces.length} versions`\n        }\n\n        return (\n            <div className=\"detail-notes\">\n                {count}\n            </div>\n        );\n    };\n    \n\n    const renderBounceDetail = () => {\n        if (selectedBounce) {\n            return (\n                <div className='detail-content'>\n                    <div className='detail-header'>\n                        <h5>Date:</h5>\n                        <div className='dropdown'>\n                            <button className='dropbtn'>\n                                {displayDate(selectedBounce.date)}\n                            </button>\n                            <div className='dropdown-content'>\n                                {renderBounceList()}\n                            </div>\n                        </div>\n                        <div>\n                            {latestTag()}\n                        </div>\n                    </div>\n                    <div className=\"detail-sub\">\n                        {bounceCount()}\n                        <div className='detail-notes'>\n                            {selectedBounce.comments}\n                        </div>\n                    </div>         \n                </div>\n            );\n        } else {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>No Bounces for this Version</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n    \n\n    if (modalActive) {\n        return <div className=\"detail-box bounce\">\n            {modalContent()}\n        </div>\n    } else {\n        if (version) {\n            return (\n                <div className=\"detail-box bounce\">   \n                    {renderBounceDetail()}                                            \n                    <div className=\"detail-buttons\">\n                        {renderAddButton()}\n                        {selectedBounce && renderEditButton()}\n                        {selectedBounce && renderDeleteButton()}\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n};\n\nexport default connect(null, { selectBounce, createBounce, editBounce, deleteBounce })(requireAuth(Bounce));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion } from '../actions';\nimport Bounce from './Bounce';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Version = ({ versions, bounces, fetchBounces, selectVersion, title, createVersion, authorized, editVersion, deleteVersion }) => {\n\n    const [selectedVersion, setSelectedVersion] = useState(title.selectedVersion);\n    const [bounceList, setBounceList] = useState(null);\n\n    useEffect(() => {\n        // console.log(selectedVersion);\n        if (selectedVersion) {\n            fetchBounces(selectedVersion.id);\n            selectVersion(selectedVersion, title.id);\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n        }\n    }, [selectedVersion]);\n\n    useEffect(() => {\n        if (selectedVersion) {\n            setBounceList(selectedVersion.bounces.map(id => bounces[id]));\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (selectedVersion !== title.selectedVersion) {\n            setSelectedVersion(title.selectedVersion);\n        }\n    }, [versions, title.selectedVersion]);\n\n    const renderVersionList = () => {\n        const versionList = versions.filter(v => v.id !== selectedVersion.id);\n\n        return versionList.map(v => {\n            const current = v.current ? <span className=\"list-current\"> * current</span> : null;\n            return <div\n                className=\"dropdown-link change-version\"\n                onClick={() => setSelectedVersion(v)}\n                key={v.id}\n            >\n                    {v.name}\n                    {current}\n            </div>\n        });\n    };\n    \n    const versionCount = () => {\n        let count;\n        if (versions.length > 2) {\n            count = '1 version';\n        } else {\n            count = `${versions.length} versions`\n        }\n\n        return (\n            <div className=\"detail-notes\">\n                {count}\n            </div>\n        );\n    };\n    \n    const renderBounces = () => {\n\n        if (bounceList) {\n\n            return (\n                <Bounce bounces={bounceList} title={title} version={selectedVersion} />\n            );\n        \n            \n        }\n    };\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Version of ${title.title}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true         \n                        },\n                        {\n                            label: 'Notes',\n                            name: 'notes',\n                            type: 'textarea',          \n                        },\n                        {\n                            label: 'Current Version?',\n                            name: 'current',\n                            type: 'checkbox',      \n                        },\n                    ]}\n                    onSubmit={(formValues) => createVersion(formValues, title.id)}\n                    form={`add-version-${title.id}`}\n                    initialValues={{ current: true }}\n                    enableReinitialize={true}\n                    addClass={true}\n                />\n            );\n        }\n    };\n\n    const renderEditButton = () => {\n        if (authorized) {\n            return <AddButton\n                title={`Edit ${selectedVersion.name}`}\n                image=\"images/edit.png\"\n                fields={[\n                    {\n                        label: 'Name',\n                        name: 'name',\n                        type: 'input', \n                    },\n                    {\n                        label: 'Notes',\n                        name: 'notes',\n                        type: 'textarea',          \n                    },\n                    {\n                        label: 'Current Version?',\n                        name: 'current',\n                        type: 'checkbox',        \n                    },\n                ]}\n                onSubmit={formValues => editVersion(formValues, selectedVersion.id, title.id)}\n                initialValues={_.pick(selectedVersion, 'name', 'notes', 'current')}\n                form={`edit-version-${title.id}`}\n                enableReinitialize={true}\n                addClass={true}\n            />;\n        }\n    };\n\n    const renderDeleteButton = () => {\n        return <DeleteButton\n            onSubmit={() => deleteVersion(selectedVersion.id, title.id)}\n            displayName={selectedVersion.name}\n        />;\n    };\n\n    const latestTag = () => {\n        if (selectedVersion.current) {\n            return (\n                <div className=\"current\">\n                    Current Version\n                </div>\n            );\n        }\n    };\n\n    const renderVersionDetail = () => {\n        if (selectedVersion) {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>Version:</h5>\n                        <div className=\"dropdown\">\n                            <button className=\"dropbtn\">\n                                {selectedVersion.name}\n                            </button>\n                            <div className=\"dropdown-content\">\n                                {renderVersionList()}\n                            </div>\n                        </div>\n                        {latestTag()}\n                    </div>\n                    <div className=\"detail-sub\">\n                        {versionCount()}\n                        <div className=\"detail-notes\">\n                            {selectedVersion.notes}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"detail-content\">\n                    <div className=\"detail-header\">\n                        <h5>No Versions for this Song Yet</h5>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n\n\n    \n    return (\n        <div className=\"version-container\">\n            <div className=\"detail-box\">\n                {renderVersionDetail()}      \n                <div className=\"detail-buttons\">\n                    {renderAddButton()}\n                    {selectedVersion && renderEditButton()}\n                    {selectedVersion && renderDeleteButton()}\n                </div>\n            </div>\n            {renderBounces()}          \n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        bounces: state.bounces\n    };\n}\n\nexport default connect(mapStateToProps, { fetchBounces, selectVersion, createVersion, editVersion, deleteVersion })(requireAuth(Version));","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { queueSongs, queuePlaylistSongs, playAudio } from '../actions';\n\nconst PlayContainer = ({ song, queueSongs, parentType, queuePlaylistSongs }) => {\n\n    const displayDate = (date) => {\n        return moment.utc(date).format('MM/DD/YY');\n    }\n\n    const displayTime = (time) => {\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time % 60) < 10 ? '0' + Math.floor(time % 60) : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    const onPlay = (e) => {\n        e.stopPropagation();\n        if (parentType === \"tier\") {\n            queueSongs(song);\n        } else if (parentType === \"playlist\") {\n            queuePlaylistSongs(song);\n        }\n    };\n\n\n    return (\n        <div className='playcontainer'>\n            <div className='songtime'>{displayTime(song.bounce.duration)}</div>\n            <div className='playbutton'>\n                <img\n                    src='/images/play.svg' className='playicon'\n                    onClick={onPlay}\n                />\n            </div>\n            <div className='title-display'>\n                <p>{song.version.name}</p>\n                <p>{displayDate(song.bounce.date)}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { queueSongs, queuePlaylistSongs, playAudio })(PlayContainer);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport Version from './Version';\nimport AddButton from './AddButton';\nimport { fetchVersions, fetchBounces, selectBounce, selectVersion, createPlaylistSong, editTitle, deleteTitle } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\nimport DeleteButton from './DeleteButton';\n\nconst Title = ({ tier, title, titles, fetchVersions, versions, bounces, fetchBounces, authorized, band, playlists, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle, getTime, audio }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [versionList, setVersionList] = useState(null);\n    const [bounceList, setBounceList] = useState(null);\n    const [song, setSong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(title.id);\n    }, []);\n\n    useEffect(() => {\n\n        setVersionList(title.versions.map(id => versions[id]));\n        // console.log('set version list')\n        \n    }, [versions, title]);\n\n    useEffect(() => {\n        if (versionList && versionList[0]) {\n            \n            let versionToSelect;\n\n            const versionIds = versionList.map(v => v.id);\n\n            if (!title.selectedVersion || !versionIds.includes(title.selectedVersion.id)) {\n                versionToSelect = versionList.find(v => v.current);\n            } else if (title.selectedVersion) {\n                if (!versionList.includes(title.selectedVersion)) {\n                    versionToSelect = versionList.find(v => v.id === title.selectedVersion.id);\n                } else {\n                    versionToSelect = title.selectedVersion;\n                }\n            }\n            selectVersion(versionToSelect, title.id);\n            // console.log('select version')\n        }\n        if (title.selectedVersion) {\n            fetchBounces(title.selectedVersion.id);\n            // console.log('fetch bounces')\n        }\n    }, [versionList]);\n\n    useEffect(() => {\n        if (title.selectedVersion) {\n            if (title.selectedVersion.bounces[0]) {\n                setBounceList(title.selectedVersion.bounces.map(id => bounces[id]));\n                // console.log('set bounce list')\n            } else {\n                console.log('set bounce list null')\n                setBounceList(null);\n                selectBounce(null, title.id);\n            }\n        }\n    }, [bounces]);\n\n    useEffect(() => {\n        if (bounceList && bounceList[0]) {\n\n            let bounceToSelect;\n\n            if (title.selectedBounce && bounceList.includes(title.selectedBounce)) {\n                bounceToSelect = title.selectedBounce;\n            } else {\n                bounceToSelect = bounceList.find(b => b.latest);\n            }\n\n            if (bounceToSelect) {\n                \n                selectBounce(bounceToSelect, title.id);\n                // console.log('select bounce');\n                \n            }\n        } else if (song) {\n            setSong(null);\n        }\n\n    }, [bounceList]);\n\n\n    useEffect(() => {\n\n        if (title.selectedBounce && title.selectedVersion) {\n\n            setSong({\n                tier,\n                title,\n                version: title.selectedVersion,\n                bounce: title.selectedBounce\n            });\n            // console.log('title update')\n            getTime({ id: title.id, duration: title.selectedBounce.duration });\n        } else if (song && !title.selectedBounce) {\n            setSong(null);\n            getTime({ id: title.id, duration: 0 })\n        }\n        \n    }, [titles]);\n\n\n    const renderPlayContainer = () => {\n\n        if (song) {\n            return <PlayContainer song={song} parentType=\"tier\" />;\n        }\n    }\n\n    const renderVersion = () => {\n\n   \n        return (\n            <Version versions={versionList} title={title} />\n        )\n    }\n\n    const onAddToPlaylist = formValues => {\n        createPlaylistSong({\n            ...formValues,\n            bounce: title.selectedBounce.id,\n            version: title.selectedVersion.id,\n            title: title.id\n        }, formValues.playlistId);\n    }\n\n    const renderButtons = () => {\n        if (authorized) {\n            const bandPlaylists = band.playlists.map(id => playlists[id]);\n            const playlistOptions = bandPlaylists.map(pl => {\n                if (pl) {\n                    return { value: pl.id, display: pl.name};\n                }\n            });\n            return (\n                <div className='tier-display'>\n                    {song && <AddButton\n                        title=\"Add to a Playlist\"\n                        onSubmit={formValues => onAddToPlaylist(formValues)}\n                        image=\"images/playlist.png\"\n                        fields={[\n                            {\n                                type: 'select',\n                                options: playlistOptions,\n                                name: 'playlistId',\n                                label: 'Playlist'\n                            }\n                        ]}\n                        form={`add-to-playlist-${title.id}`}\n                        enableReinitialize={true}\n                    />}\n                    <AddButton\n                        title={`Edit ${title.title}`}\n                        image=\"images/edit.png\"\n                        fields={[\n                            {\n                                label: 'Title',\n                                name: 'title',\n                                type: 'input',\n                                required: true\n                            }\n                        ]}\n                        onSubmit={formValues => editTitle(formValues, title.id)}\n                        initialValues={_.pick(title, 'title')}\n                        form={`edit-title-${title.id}`}\n                        enableReinitialize={true}\n                    />\n                    <DeleteButton\n                        onSubmit={() => deleteTitle(title.id, tier.id)}\n                        displayName={title.title}\n                    />\n                </div>\n            )\n        }\n    }\n\n    const arrow = expand ? 'down-arrow' : '';\n\n    const current = audio.currentSong ? audio.currentSong.audio : null;\n\n    let currentClass = '';\n\n    if (current && title.selectedBounce) {\n        currentClass = current === title.selectedBounce.id ? 'current-song' : '';\n    }\n\n    return (\n        <div className=\"title-margin\">\n            <div className={`row title ${currentClass}`}>\n                <div className=\"marqee\" onClick={() => setExpand(!expand)}>\n                    <div className=\"row-name\"   >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`} />\n                        <div className=\"name-spot\">\n                            <h3>{title.title}</h3>\n                        </div>\n                    </div>\n                    {renderPlayContainer()}\n                    {renderButtons()}\n                    {/* {download} */}\n                </div>\n            </div>\n            {expand && renderVersion()}\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        versions: state.versions,\n        bounces: state.bounces,\n        band: state.bands.currentBand,\n        playlists: state.playlists,\n        titles: state.titles,\n        audio: state.audio\n    }\n}\n\nexport default connect(mapStateToProps, { fetchVersions, fetchBounces, selectVersion, selectBounce, createPlaylistSong, editTitle, deleteTitle })(requireAuth(Title));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { createTier, editTier, fetchTitles, createTitle, deleteTier } from '../actions';\nimport Title from './Title';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\n\nconst Tier = ({ tier, titles, fetchTitles, authorized, band, tiers, editTier, createTitle, deleteTier }) => {\n\n    const [expand, setExpand] = useState(false);\n\n    const [titlesToRender, setTitlesToRender] = useState(null);\n\n    const [tierList, setTierList] = useState([]);\n\n    const [times, setTimes] = useState({});\n\n    \n\n    useEffect(() => {\n        fetchTitles(tier.id);\n    }, []);\n\n\n    useEffect(() => {\n        \n        setTitlesToRender(tier.trackList.map(id => titles[id]));\n        \n    }, [titles, tier]);\n\n    useEffect(() => {\n        if (band.tiers.length) {\n            const tiersToShow = band.tiers\n                .map(id => tiers[id])\n                .sort((a, b) => a.position < b.position ? -1 : 1);\n\n            setTierList(tiersToShow.map(t => {\n                if (t) {\n                    return { value: t.position, display: t.position };\n                }\n            }));\n        }\n    }, [tiers]);\n\n    const renderTitles = () => {\n        return titlesToRender.map(title => {\n            if (title) {\n                return (\n                    <Title title={title} tier={tier} key={title.id} getTime={getTime} />\n                );\n            }\n        });\n    };\n\n\n    const renderAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    title={`Add a Title to ${tier.name}`}\n                    image=\"images/add.png\"\n                    fields={[\n                        {\n                            label: 'Title',\n                            name: 'title',\n                            type: 'input',\n                            required: true\n                        }\n                    ]}\n                    onSubmit={(formValues) => {\n                        createTitle(formValues, tier.id);\n                        setExpand(true);\n                    }}\n                    form={`add-title-${tier.id}`}\n                />\n            )\n        }\n    }\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n            return (\n                <AddButton\n                    title={`Edit ${tier.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Tier Name',\n                            name: 'name',\n                            type: 'input',\n                            required: true        \n                        }, {\n                            label: 'Tier Position',\n                            name: 'position',\n                            type: 'select',\n                            options: tierList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editTier(formValues, tier.id)}\n                    initialValues={_.pick(tier, 'name', 'position')}\n                    form={`edit-tier-${tier.id}`}\n                    enableReinitialize={true}\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deleteTier(tier.id)}\n                    displayName={tier.name}\n                />\n            );\n        }\n    };\n\n    const renderTotalTime = () => {\n\n        const total = Object.values(times).reduce((prev, cur) => {\n            return prev + cur;\n        }, 0);\n\n        if (!total) {\n            return null;\n        }\n\n        const minutes = Math.floor(total / 60);\n        const seconds = Math.floor(total % 60) < 10 ? '0' + Math.floor(total % 60) : Math.floor(total % 60);\n        return (\n            <div>\n                {`${minutes}:${seconds}`}\n            </div>\n        );\n        \n    };\n\n    const getTime = (track) => {\n        setTimes({ ...times, [track.id]: track.duration });\n    };\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : '';\n\n    return (\n        <>\n            <div className=\"row tier\" onClick={() => setExpand(!expand)}>\n                <div className=\"marqee\">\n                    <div className=\"tier-name\">\n                        <img className={`arrow ${arrow}`} src={`images/right-arrow.svg`} />\n                        <h2>{tier.name}</h2>\n                        {renderAddButton()}\n                    </div>\n                    <div className=\"tier-count\">\n\n                        <div className=\"song-count\">{tier.trackList.length} songs</div>\n                        <div className=\"song-count\">{renderTotalTime()}</div>\n                    </div>\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>\n                <hr />\n            </div>\n            <div className={open}>\n                {expand && titlesToRender && renderTitles()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        titles: state.titles,\n        band: state.bands.currentBand,\n        tiers: state.tiers\n    }\n};\n\n\nexport default connect(mapStateToProps, { createTier, fetchTitles, editTier, createTitle, deleteTier })(requireAuth(Tier));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport { editPlaylistSong, fetchVersions, fetchBounces, deletePlaylistSong } from '../actions';\nimport PlayContainer from './PlayContainer';\nimport requireAuth from './requireAuth';\n\nconst PlaylistSong = ({ playlist, song, playlistSongs, authorized, versions, bounces, titles, fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong }) => {\n\n    const [playSong, setPlaySong] = useState(null);\n\n    useEffect(() => {\n        fetchVersions(song.title);\n        titles[song.title].versions.forEach(id => {\n            fetchBounces(id);\n        });\n    }, []);\n    \n    useEffect(() => {\n        if (titles[song.title]) {\n            setPlaySong({\n                    playlist,\n                    title: titles[song.title],\n                    version: versions[song.version],\n                    bounce: bounces[song.bounce],\n                    self: song\n                });\n        }\n    }, [playlistSongs[song.id], bounces[song.bounce], titles[song.title], versions[song.version]]);\n\n    const renderPlayContainer = () => {\n\n        if (playSong && playSong.bounce && playSong.version) {\n            return <PlayContainer song={playSong} parentType=\"playlist\" />;\n        } else {\n            return (\n                <div className=\"playlistsong-no-bounce\">\n                    <p>\n                        {versions[song.version] ? `${versions[song.version].name}` : 'No Version Selected'}\n                    </p>\n                    <p>\n                        No Bounce Selected\n                    </p>\n                </div>\n            );\n        }\n    };\n\n    const onEditSubmit = formValues => {\n        const thisVersion = Object.values(versions).find(v => v.bounces.includes(formValues.bounce));\n        editPlaylistSong({\n            ...formValues,\n            version: thisVersion.id,\n            playlistId: playlist.id\n        }, song.id);\n    };\n\n    const renderEditButton = () => {\n        if (authorized && titles[song.title]) {\n\n            const otherSongs = Object.values(playlistSongs)\n                .filter(s => playlist.songs.includes(s.id))\n                .map(s => {\n                    return { value: s.position, display: s.position };\n            });\n\n            const thisTitle = titles[song.title];\n\n            const otherVersions = thisTitle.versions.map(id => versions[id]);\n\n            const otherBounces = otherVersions.map(v => {\n                if (v) {\n                    return v.bounces.map(id => bounces[id]);\n                }\n            });\n\n\n            const editOptions = [];\n            \n            otherVersions.forEach((v, i) => {\n                if (otherBounces[i]) {\n                    otherBounces[i].forEach(b => {\n                        if (b) {\n                            let current = '';\n                            if (v.current && b.latest) {\n                                current =' * current';\n                            }\n                            editOptions.push({\n                                value: b.id,\n                                display: `${v.name} -- ${moment.utc(b.date).format('MM/DD/YY')}${current}`\n                            });\n                        }\n                    });\n                }\n            });\n\n            return (\n                <AddButton\n                    image='/images/edit.png'\n                    title={`Edit ${titles[song.title].title}`}\n                    onSubmit={formValues => onEditSubmit(formValues)}\n                    fields={[\n                        {\n                            name: 'position',\n                            label: 'Position',\n                            type: 'select',\n                            options: otherSongs\n                        },\n                        {\n                            name: 'bounce',\n                            label: 'Bounce',\n                            type: 'select',\n                            options: editOptions,\n                            required: true\n                        }\n                    ]}\n                    initialValues={song.bounce ? _.pick(song, 'position', 'bounce') : _.pick(song, 'position')}\n                    form={`edit-playlistsong-${song.id}`}\n                    enableReinitialize={true}\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylistSong(song.id, playlist.id)}\n                    displayName={song.title.title}\n                />\n            );\n        }\n    };\n\n\n    return (\n        <div className='title-margin'>\n            <div className=\"row title\">                    \n                <div className=\"marqee\">\n                    <div className='row-name'>\n                        <div className=\"song-position\">{song.position}</div>\n                        <div className='name-spot'>\n                            <h3>{song && titles[song.title] && titles[song.title].title}</h3>\n                        </div>\n                    </div>      \n\n                    {renderPlayContainer()}\n                    <div className=\"tier-display\">\n                        {renderEditButton()}\n                        {renderDeleteButton()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\n\n\nconst mapStateToProps = state => {\n\n    return {\n        playlistSongs: state.playlistSongs,\n        bands: state.bands,\n        playlists: state.playlists,\n        versions: state.versions,\n        bounces: state.bounces,\n        titles: state.titles\n    }\n\n}\n\nexport default connect(mapStateToProps, { fetchBounces, fetchVersions, editPlaylistSong, deletePlaylistSong })(requireAuth(PlaylistSong));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchPlaylistSongs, deletePlaylist, editPlaylist } from '../actions';\nimport PlaylistSong from './PlaylistSong';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\nimport requireAuth from './requireAuth';\n\nconst Playlist = ({ playlist, playlists, fetchPlaylistSongs, playlistSongs, authorized, deletePlaylist, band }) => {\n\n    const [expand, setExpand] = useState(false);\n    const [playlistList, setPlaylistList] = useState([]);\n\n    const [songsToRender, setSongsToRender] = useState(null);\n\n\n    useEffect(() => {\n        fetchPlaylistSongs(playlist.id);\n    }, []);\n\n    useEffect(() => {\n        setSongsToRender(playlist.songs.map(id => playlistSongs[id]));\n    }, [playlistSongs, playlist.songs]);\n\n    const renderPlaylistSongs = () => {\n\n        songsToRender.sort((a, b) => a.position < b.position ? -1 : 1);\n\n        return songsToRender.map(song => {\n            if (song) {\n                return (\n                <PlaylistSong song={song} playlist={playlist} key={song.id} />\n                );\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (band.playlists.length) {\n            const playlistsToShow = band.playlists.map(id => playlists[id]).sort((a, b) => {\n                if (a.position < b.position) {\n                    return -1;\n                }\n                if (b.position < a.position) {\n                    return 1;\n                }\n            });\n            setPlaylistList(playlistsToShow.map(t => {\n                if (t) {\n                    return { value: t.position, display: t.position };\n                }\n            }));\n        }\n    }, [playlists]);\n\n    const renderEditButton = () => {\n        if (authorized) {\n\n            return (\n                <AddButton\n                    title={`Edit ${playlist.name}`}\n                    image=\"images/edit.png\"\n                    fields={[\n                        {\n                            label: 'Playlist Name',\n                            name: 'name',\n                            type: 'input',          \n                        }, {\n                            label: 'Playlist Position',\n                            name: 'position',\n                            type: 'select',\n                            options: playlistList,\n                        }\n                    ]}\n                    onSubmit={(formValues) => editPlaylist(formValues, playlist.id)}\n                    initialValues={_.pick(playlist, 'name', 'position')}\n                    form={`edit-${playlist.id}`}\n                    enableReinitialize={true}\n                />\n            );\n        }\n    };\n\n    const renderDeleteButton = () => {\n        if (authorized) {\n            return (\n                <DeleteButton\n                    onSubmit={() => deletePlaylist(playlist.id)}\n                    displayName={playlist.name}\n                />\n            );\n        }\n    };\n\n\n    const arrow = expand ? 'down-arrow' : '';\n    const open = expand ? 'open' : '';\n\n    return (\n        <>\n            <div className=\"row tier\" onClick={() => setExpand(!expand)} >\n                <div className=\"marqee tier-info\">\n                    <div className=\"tier-name\"  >\n                        <img className={`arrow ${arrow}`} src={`/images/right-arrow.svg`}/>\n                        <h2>{playlist.name}</h2>\n                    </div>\n                    <div className=\"tier-count\">\n                        <div className=\"song-count\">{playlist.songs.length} songs</div>\n                        {/* <div className=\"song-count\">{playlist.totalTime}</div> */}\n                    </div>\n                    <div className=\"tier-display\">\n                            {renderEditButton()}\n                            {renderDeleteButton()}\n                    </div>\n                </div>\n                <hr />\n            </div>\n            <div className={open}>\n                {expand && renderPlaylistSongs()}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        playlists: state.playlists,\n        playlistSongs: state.playlistSongs,\n        band: state.bands.currentBand\n    }\n}\n\nexport default connect(mapStateToProps, { fetchPlaylistSongs, deletePlaylist })(requireAuth(Playlist));","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { fetchTiers, fetchPlaylists, createTier, createPlaylist } from '../actions';\nimport Tier from './Tier';\nimport Playlist from './Playlist';\nimport AddButton from './AddButton';\nimport requireAuth from './requireAuth';\n\nconst BodyContainer = ({ fetchPlaylists, createTier, fetchTiers, tiers, playlists, band, authorized, createPlaylist, currentSong }) => {\n\n    const [tierList, setTierList] = useState([]);\n    const [playlistList, setPlaylistList] = useState([]);\n\n    useEffect(() => {\n        fetchTiers(band.id);\n        fetchPlaylists(band.id);\n    }, []);\n\n    useEffect(() => {\n        setTierList(band.tiers.map(id => tiers[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [tiers]);\n\n    useEffect(() => {\n        setPlaylistList(band.playlists.map(id => playlists[id]).sort((a, b) => {\n            if (a.position < b.position) {\n                return -1;\n            }\n            if (b.position < a.position) {\n                return 1;\n            }\n        }));\n    }, [playlists]);\n\n    const renderTiers = () => {\n\n        return tierList.map(tier => {\n            if (tier) {\n                return (\n                    <Tier tier={tier} key={tier.id} />\n                );\n            }\n        });\n    };\n\n\n    const renderTierAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createTier(formValues)}\n                    title='Add a Tier'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Tier Name',\n                        name: 'tierName',\n                        type: 'input',\n                        required: true          \n                    }]}\n                />\n            );\n        }\n    };\n\n    const renderPlaylistAddButton = () => {\n        if (authorized) {\n            return (\n                <AddButton\n                    onSubmit={formValues => createPlaylist(formValues)}\n                    title='Add a Playlist'\n                    image=\"/images/add.png\"\n                    fields={[{\n                        label: 'Playlist Name',\n                        name: 'playlistName',\n                        type: 'input',\n                        required: true             \n                    }]}\n                />\n            );\n        }\n    };\n\n    const renderPlaylists = () => {\n\n        return playlistList.map(playlist => {\n            if (playlist) {\n                return (\n                    <Playlist playlist={playlist} key={playlist.id} />               \n                );\n            }\n        });\n    };\n\n    const playbarActive = currentSong ? 'playbar-active' : ''\n\n    return (\n        <div className={`body-container ${playbarActive}`}>\n            <div className=\"section-header\">\n                <h2 className=\"section-title\">Tiers</h2>\n                <div className=\"section-add\">\n                    {renderTierAddButton()}\n                </div>\n            </div>\n            <hr />\n            {tiers && renderTiers()}\n            <div className=\"playlists\">\n                <div className=\"section-header\">\n                    <h2 className=\"section-title\">Playlists</h2>\n                    <div className=\"section-add\">\n                        {renderPlaylistAddButton()}\n                    </div>\n                </div>\n                <hr />\n                {playlists && renderPlaylists()}\n            </div>\n        </div>\n\n\n    );\n\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        tiers: state.tiers,\n        playlists: state.playlists,\n        currentSong: state.audio.currentSong\n    };\n};\n\nexport default connect(mapStateToProps, { fetchTiers, fetchPlaylists, createTier, createPlaylist })(requireAuth(BodyContainer));","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { playAudio, pauseAudio, nextSong, throwError, initializeAudio } from '../actions';\n\n\nclass AudioHeader extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'production') {\n            this.url = 'https://exploring-the-space.com'\n        } else {\n            this.url = 'http://localhost:3001';\n        }\n        this.audio = React.createRef();\n    }\n\n\n    state = { volume: 50, sliderPosition: 0 };\n\n    formatTime(time) {\n\n        let minutes = time < 600 ? `0${Math.floor(time/60)}` : Math.floor(time/60);\n        let seconds = time % 60 < 10 ? `0${Math.floor(time % 60)}` : Math.floor(time % 60);\n        return `${minutes}:${seconds}`;\n    }\n\n    displayDate = date => {\n        return moment.utc(date).format('MM/DD/yy');\n    }\n\n    wrapUrl(id) {\n        return `${this.url}/api/audio/${id}.mp3`\n    }\n\n    updateSlider = () => {\n        const position = (this.audio.current.currentTime / this.audio.current.duration) * 1000;\n        this.time = this.formatTime(this.audio.current.currentTime);\n        if (!isNaN(position)) {\n            this.setState({\n                sliderPosition: position\n            });\n        }\n    }\n\n    setSpaceBarToPlay = (e) => {\n        if (e.code === 'Space') {\n            e.preventDefault();\n            if (this.props.pause) {\n                this.play();\n            } else {\n                this.pause();\n            }\n        }\n    }\n\n    audioError = () => {\n        const message = \"The audio player had an error, probably can't connect to server.\"\n        this.props.throwError(message);\n    }\n\n    componentDidMount() {\n\n        // if there's no audio element created, create one with the current song\n        // add event listener to link the slider position to the time of the song\n\n        \n        this.audio.current = new Audio();\n\n        this.audio.current.addEventListener('timeupdate', this.updateSlider);\n\n        this.audio.current.addEventListener('error', this.audioError);\n\n        // if there's a queue, load next song\n\n        this.audio.current.addEventListener('ended', this.nextSong);\n\n        // space bar stop/start\n\n        document.addEventListener('keydown', this.setSpaceBarToPlay);\n        \n    }\n\n    componentDidUpdate(prevProps) {\n        \n        if (this.props.song) {\n            // if the current song is changed to something other than what is already loaded, change the src url and play the audio\n                        // if redux gets a signal to play, play if not already\n            // reverse for pause\n            if (this.props.song !== prevProps.song) {\n                this.audio.current.src=this.wrapUrl(this.props.song.audio);\n                this.audio.current.volume = this.props.volume / 120;\n                this.audio.current.play();\n            } else if (this.props.play && prevProps.pause) {\n                this.audio.current.play();\n            } else if (this.props.pause && prevProps.play) {\n                this.audio.current.pause();\n            }\n            if (this.props.volume !== prevProps.volume) {\n                this.audio.current.volume = this.props.volume / 120;\n\n            }\n        } else {\n            this.audio.current.pause();\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.setSpaceBarToPlay);\n\n        this.audio.current.src='';\n        this.audio.current.removeEventListener('timeupdate', this.updateSlider);\n        this.audio.current.removeEventListener('error', this.audioError);\n        this.audio.current.removeEventListener('ended', this.nextSong);\n\n        this.props.initializeAudio();\n    }\n\n    nextSong = () => {\n        setTimeout(() => {\n            if (this.props.queue.length) {\n                this.props.nextSong();\n            }\n        }, 400);\n    }\n\n    play = () => {\n        this.props.playAudio();\n    }\n\n    pause = () => {\n        this.props.pauseAudio();\n    }\n\n    onSliderChange = (e) => {\n        const position = (e.target.value / 1000) * this.audio.current.duration;\n        this.audio.current.currentTime = position;\n    }\n\n    onPauseButton = () => {\n\n        if (this.props.play) {\n            this.pause();\n        } else {\n            this.play();\n        }\n\n    }\n\n    render() {\n\n        if (this.props.song) {\n\n            return (\n                <div className=\"playbar\">\n                    <div className=\"playbar-header\">\n                        <div className=\"playbar-title\">\n                            <p>{this.props.song.title}</p>\n                        </div>\n                        <div className=\"pause-container\" onClick={this.onPauseButton}>\n                            <img className=\"big-play-btn\" src={this.props.play ? \"/images/pause.svg\" : \"/images/play.svg\"} />\n                        </div>\n                        <div className=\"playbar-info\">\n                            <div className=\"playbar-detail\">\n                                <p>Version:</p>\n                                <p>{this.props.song.version}</p>\n                            </div>\n                            <div className=\"playbar-detail\">\n                                <p>Date:</p>\n                                <p>{this.displayDate(this.props.song.date)}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"playslidercontainer\">\n                        <div className=\"playslidertime\">\n                            {this.time}\n                        </div>\n                        <input\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"1000\"\n                            value={this.state.sliderPosition}\n                            className='playslider'\n                            onInput={this.onSliderChange}\n                        />\n                        <div className=\"playslidertime\">\n                            {this.formatTime(this.props.song.duration)}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        song: state.audio.currentSong,\n        play: state.audio.play,\n        pause: state.audio.pause,\n        queue: state.audio.queue,\n        volume: state.audio.volume\n    };\n};\n\nexport default connect(mapStateToProps, { playAudio, pauseAudio, nextSong, throwError, initializeAudio })(AudioHeader);","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchBand, signOut, changeVolume } from '../actions';\nimport BodyContainer from './BodyContainer';\nimport AudioHeader from './AudioHeader';\nimport requireAuth from './requireAuth';\n\nconst BandHeader = ({ fetchBand, band, match, authorized, handleUpdate, user, signedIn, signOut, volume, changeVolume }) => {\n\n    const [expand, setExpand] = useState(false);\n\n    useEffect(() => {\n        fetchBand(match.params.bandName);\n    }, []);\n\n    useEffect(() => {\n        handleUpdate();\n    }, [band, user]);\n\n    const renderAdmin = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/user\">User Home</Link>\n                <div className=\"menu-item\" onClick={signOut}>Sign Out</div>\n            </div>\n        );\n    };\n\n    const renderHomeLink = () => {\n        return (\n            <div className=\"menu\">\n                <Link className=\"menu-item\" to=\"/\">Home</Link>\n                <Link className=\"menu-item\" to=\"/signin\">Sign In</Link>\n            </div>\n        );\n    };\n\n    const showBody = () => {\n        if (!band) {\n            return null\n        }\n        if (signedIn && !user) {\n            return null\n        }\n        return <BodyContainer band={band}/>\n    }\n\n    return <>\n        \n        <div className=\"header\">\n            <AudioHeader />\n            <div className=\"band-header\">\n                <div className=\"band-name\">\n                    <h1>{band && band.name}</h1>\n                    <div className=\"menu-button\" onClick={() => setExpand(!expand)}>\n                        <img src=\"images/dots.png\" />\n                        {expand && (authorized ? renderAdmin() : renderHomeLink())}\n                    </div>\n                </div>\n                <div className=\"slidecontainer\">\n                    <input\n                        type=\"range\"\n                        min=\"0\" max=\"100\"\n                        className=\"master-volume\"\n                        value={volume}\n                        onInput={e => changeVolume(e.target.value)}\n                    />\n                    <img src=\"/images/volume.svg\" />\n                </div>\n            </div>\n        </div>\n\n        {showBody()}\n\n    </>;\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        band: state.bands.currentBand,\n        user: state.auth.currentUser,\n        signedIn: state.auth.isSignedIn,\n        volume: state.audio.volume\n    }\n}\n\nexport default connect(mapStateToProps, { fetchBand, signOut, changeVolume })(requireAuth(BandHeader));","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { createBand, fetchBands, editBand, deleteBand, signOut } from '../actions';\nimport AddButton from './AddButton';\nimport DeleteButton from './DeleteButton';\n\nconst User = ({ user, bands, createBand, fetchBands, editBand, deleteBand, signOut }) => {\n\n    useEffect(() => {\n        fetchBands();\n    }, []);\n\n    const renderBands = () => {\n        const bandList = user.bands.map(id => bands[id]);\n        if (!bandList.length || !bandList[0]) {\n            return <h3>No bands belong to this user</h3>\n        }\n        return bandList.map(band => {\n            if (band) {\n                return (\n                    <div className=\"band-item\" key={band.id}>\n                        <Link to={`/${band.url}`}>\n                            <h2>{band.name}</h2>\n                        </Link>\n                        <div className=\"band-buttons\">\n                            <AddButton\n                                onSubmit={formValues => editBand(formValues, band.id)}\n                                title={`Edit ${band.name}`}\n                                image=\"images/edit.png\"\n                                fields={[{\n                                    label: 'Band Name',\n                                    name: 'name',\n                                    type: 'input'\n                                }]}\n                                initialValues={{ name: band.name }}\n                                enableReinitialize={true}\n                                form={`edit-band-${band.id}`}\n                            />\n                            <DeleteButton\n                                onSubmit={() => deleteBand(band.id)}\n                                displayName={band.name}\n                            />\n                        </div>\n                    </div>                   \n                );\n            }\n        });\n    };\n\n    if (user) {\n        return <>\n            <div className=\"user-header\">\n                <h1 className=\"user-title\">{user.username}'s bands</h1>\n                <div onClick={signOut}>Sign Out</div>\n            </div>\n            <hr />\n            <div className=\"row band-list\">\n                {renderBands()}\n            </div>\n            \n            <div className=\"centered-button\">\n                <AddButton\n                    onSubmit={formValues => createBand(formValues)}\n                    title='Create a Band'\n                    image=\"images/add.png\"\n                    fields={[{\n                        label: 'Band Name',\n                        name: 'bandName',\n                        type: 'input'\n                    }]}\n                />\n            </div>\n        </>;\n    } else {\n        return null;\n    }\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user,\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { createBand, fetchBands, editBand, deleteBand, signOut })(User);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass UserForm extends React.Component {\n    \n    renderInput = ({ input, label, meta, type, autoComplete, defaultValue }) => {\n\n        return (\n            <div>\n                <label>{label}</label>\n                <input\n                    type={type}\n                    autoComplete={autoComplete} \n                    {...input}\n                /> \n            </div>\n        );\n    };\n\n    submitForm = formValues => {\n        this.props.onSubmit(formValues);\n    };\n\n\n    render() {\n        return (\n            <form className='signin' onSubmit={this.props.handleSubmit(this.submitForm)}>\n                <Field\n                    name=\"username\"\n                    component={this.renderInput}\n                    label=\"Username: \"\n                    type=\"text\"\n                    autoComplete=\"username\"\n    \n                />\n                <Field\n                    name=\"password\"\n                    component={this.renderInput}\n                    label=\"Passwyrd: \"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                <button className=\"signin-submit\">Submit</button>\n            </form>\n        );\n    }\n\n\n}\n\nexport default reduxForm({\n    form: 'userForm'\n})(UserForm);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\n\nimport history from '../history';\nimport { signIn } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignIn = ({ signIn, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return <>\n        <h1>Sign In</h1>\n        <UserForm onSubmit={formValues => signIn(formValues)}/>\n    </>;\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn })(SignIn);","import { connect } from 'react-redux';\nimport React, { useEffect } from 'react';\n\nimport history from '../history';\nimport { signUp } from '../actions';\nimport UserForm from './UserForm';\n\n\nconst SignUp = ({ signUp, isSignedIn }) => {\n\n    useEffect(() => {\n        if (isSignedIn) {\n            history.push('/user')\n        }\n    }, []);\n\n    return <>\n        <h1>Sign Up</h1>\n        <UserForm onSubmit={formValues => signUp(formValues)}/>\n    </>;\n};\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signUp })(SignUp);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { fetchBands } from '../actions';\n\nclass Home extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchBands();\n    }\n\n    renderBands() {\n\n        delete this.props.bands.currentBand;\n\n        const bands = Object.values(this.props.bands);\n\n        return bands.map(band => {\n            return (\n                <div className=\"band-item\" key={band.id}>\n                    <Link to={`/${band.url}`}>\n                        <h2>{band.name}</h2>\n                    </Link>\n                </div>\n            );\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 className=\"home-header\">Exploring the Space</h1>\n                <div className=\"home-buttons\">\n                    <Link to=\"/signin\">\n                        Sign In\n                    </Link>\n                    <Link to=\"/signup\">\n                        Sign Up\n                    </Link>\n                </div>\n                <h1>All Bands:</h1>\n                <div className=\"band-list\">\n                    {this.props.bands && this.renderBands()}\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        bands: state.bands\n    };\n};\n\nexport default connect(mapStateToProps, { fetchBands })(Home);","import React, { useEffect } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nimport Error from './Error';\nimport BandHeader from './BandHeader';\nimport User from './User';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Home from './Home';\nimport { fetchUser } from '../actions';\n\n\nimport history from '../history';\n\nconst App = ({ signedIn, fetchUser, error }) => {\n\n    useEffect(() => {\n        if (signedIn) {\n            fetchUser();\n        }\n    }, []);\n\n    const errClass = error ? 'error-margin' : '';\n\n    return <>\n        <Error />\n        <div className={`container ${errClass}`}>\n            <Router history={history}>\n                <Switch>    \n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/signin\" exact component={SignIn} />;\n                    <Route path=\"/signup\" exact component={SignUp} />;  \n                    <Route path=\"/user\" exact render={routeProps => {\n                        if (!signedIn) {\n                            history.push('/signin');\n                            return null;\n                        }\n                        return <User {...routeProps} />;\n                    }} />\n                    <Route path=\"/:bandName\" component={BandHeader} />\n                </Switch>\n            </Router>\n        </div>\n\n    </>;\n};\n\nconst mapStateToProps = state => {\n    return {\n        signedIn: state.auth.isSignedIn,\n        error: state.error.error\n    };\n};\n\nexport default connect(mapStateToProps, { fetchUser })(App);","import { SIGN_IN, SIGN_OUT, CREATE_BAND } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: false,\n    user: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, user: action.payload };\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, user: null };\n        case CREATE_BAND:\n            const { user } = state;\n            user.bands.push(action.payload.id);\n            return { ...state, user };\n        default:\n            return state;  \n    } \n};\n","import { PLAY_AUDIO, PAUSE_AUDIO, QUEUE_SONGS, NEXT_SONG, DELETE_BOUNCE, CHANGE_VOLUME, INITIALIZE_AUDIO } from \"../actions/types\";\n\nconst initialState = {\n    play: false,\n    volume: 75,\n    queue: [],\n    currentSong: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case PLAY_AUDIO:\n            return { ...state, play: true, pause: false };\n        case PAUSE_AUDIO:\n            return { ...state, play: false, pause: true };\n        case QUEUE_SONGS:\n            const currentSong = action.payload.shift();\n            return { ...state, queue: action.payload, currentSong, play: true };\n        case NEXT_SONG:\n            const queue = state.queue;\n            const nextSong = queue.shift();\n            return { ...state, queue, currentSong: nextSong };\n        case DELETE_BOUNCE:\n            if (state.currentSong && action.payload.bounce.id === state.currentSong.audio) {\n                return { ...initialState };\n            }\n            if (state.queue.length) {\n                state.queue = state.queue.filter(song => song.audio !== action.payload.bounce.id);\n                return { ...state };\n            }\n        case CHANGE_VOLUME:\n            return { ...state, volume: action.payload };\n        case INITIALIZE_AUDIO:\n            return { ...initialState };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport tierReducer from './tierReducer';\nimport titleReducer from './titleReducer';\nimport versionReducer from './versionReducer';\nimport bounceReducer from './bounceReducer';\nimport playlistReducer from './playlistReducer';\nimport playlistSongReducer from './playlistSongReducer';\nimport bandReducer from './bandReducer';\nimport errorReducer from './errorReducer';\nimport audioReducer from './audioReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    tiers: tierReducer,\n    titles: titleReducer,\n    versions: versionReducer,\n    bounces: bounceReducer,\n    playlists: playlistReducer,\n    playlistSongs: playlistSongReducer,\n    bands: bandReducer,\n    error: errorReducer,\n    audio: audioReducer\n});","import { FETCH_TIERS, CREATE_TIER, EDIT_TIER, DELETE_TIER, CREATE_TITLE, DELETE_TITLE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TIERS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TIER:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_TIER:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_TIER:\n\n            const changePosition = Object.values(_.omit(state, state.currentBand)).filter(t => t.position > action.payload.position);\n            changePosition.forEach((tier) => {\n                tier.position = tier.position - 1;\n            });\n            delete state[action.payload.id];\n            return { ...state, ..._.mapKeys(changePosition, 'id') };\n        case CREATE_TITLE:\n            const addToTier = state[action.payload.tier];\n            addToTier.trackList.push(action.payload.title.id);\n            return { ...state, [addToTier.id]: addToTier };\n        case DELETE_TITLE:\n            const deleteFromTier = state[action.payload.tier];\n            if (deleteFromTier) {\n                const newTrackList = deleteFromTier.trackList.filter(id => id !== action.payload.title.id);\n                deleteFromTier.trackList = newTrackList;\n                return { ...state, [deleteFromTier.id]: deleteFromTier };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_TITLES, CREATE_TITLE, EDIT_TITLE, DELETE_TITLE, SELECT_VERSION, SELECT_BOUNCE, CREATE_VERSION, DELETE_VERSION } from '../actions/types';\nimport _ from 'lodash';\n\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_TITLES:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_TITLE:\n            return { ...state, [action.payload.title.id]: action.payload.title };\n        case EDIT_TITLE:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_TITLE:\n            delete state[action.payload.title.id];\n            return { ...state };\n        case SELECT_VERSION:\n            const versionTitle = state[action.payload.titleId];\n            versionTitle.selectedVersion = action.payload.version;\n            return { ...state, [versionTitle.id]: versionTitle };\n        case SELECT_BOUNCE:\n            const bounceTitle = state[action.payload.titleId];\n            bounceTitle.selectedBounce = action.payload.bounce;\n            return { ...state, [bounceTitle.id]: bounceTitle }\n        case CREATE_VERSION:\n            const addToTitle = state[action.payload.title];\n            addToTitle.versions.push(action.payload.version.id);\n            return { ...state, [addToTitle.id]: addToTitle};\n        case DELETE_VERSION:\n            const deleteFromTitle = state[action.payload.title];\n            if (deleteFromTitle) {\n                const newVersionList = deleteFromTitle.versions.filter(id => id !== action.payload.version.id);\n                deleteFromTitle.versions = newVersionList;\n                return { ...state, [deleteFromTitle.id]: deleteFromTitle };\n            }   \n        default:\n            return state;\n\n    }\n\n};","import { FETCH_VERSIONS, CREATE_VERSION, EDIT_VERSION, DELETE_VERSION, CREATE_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport { selectVersion } from '../actions';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_VERSIONS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_VERSION:\n            return { ...state, [action.payload.version.id]: action.payload.version };\n        case EDIT_VERSION:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_VERSION:\n            delete state[action.payload.version.id];\n            return { ...state };\n        case CREATE_BOUNCE:\n            const addToVersion = state[action.payload.version];\n            addToVersion.bounces.push(action.payload.bounce.id);\n            return { ...state, [addToVersion.id]: addToVersion};\n        case DELETE_BOUNCE:\n            const deleteFromVersion = state[action.payload.version];\n            if (deleteFromVersion) {\n                const newBounceList = deleteFromVersion.bounces.filter(id => id !== action.payload.bounce.id);\n                deleteFromVersion.bounces = newBounceList;\n                return { ...state, [deleteFromVersion.id]: deleteFromVersion };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BOUNCES, CREATE_BOUNCE, EDIT_BOUNCE, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_BOUNCES:\n            return { ...state, ..._.mapKeys(action.payload, 'id')};\n        case CREATE_BOUNCE:\n            return { ...state, [action.payload.bounce.id]: action.payload.bounce };\n        case EDIT_BOUNCE:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BOUNCE:\n            delete state[action.payload.bounce.id];\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTS, FETCH_PLAYLIST, CREATE_PLAYLIST, EDIT_PLAYLIST, DELETE_PLAYLIST, CREATE_PLAYLISTSONG, DELETE_PLAYLISTSONG } from '../actions/types';\nimport _ from 'lodash';\nimport { deletePlaylistSong } from '../actions';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case FETCH_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case CREATE_PLAYLIST:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_PLAYLIST:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_PLAYLIST:\n            delete state.currentBand;\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.position);\n            changePosition.forEach((playlist) => {\n                playlist.position = playlist.position - 1;\n            });\n            delete state[action.payload.id]\n            return { ...state, ..._.mapKeys(changePosition, 'id')};\n        case CREATE_PLAYLISTSONG:\n            const addToPlaylist = state[action.payload.playlist];\n            addToPlaylist.songs.push(action.payload.playlistsong.id);\n            return { ...state, [addToPlaylist.id]: addToPlaylist};\n        case DELETE_PLAYLISTSONG:\n            const deleteFromPlaylist = state[action.payload.playlist];\n            if (deleteFromPlaylist) {\n                const newSongList = deleteFromPlaylist.songs.filter(id => id !== action.payload.playlistsong.id);\n                deleteFromPlaylist.songs = newSongList;\n                return { ...state, [deleteFromPlaylist.id]: deleteFromPlaylist };\n            }\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_PLAYLISTSONGS, CREATE_PLAYLISTSONG, EDIT_PLAYLISTSONG, DELETE_PLAYLISTSONG, DELETE_VERSION, DELETE_BOUNCE } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n\n        case FETCH_PLAYLISTSONGS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_PLAYLISTSONG:\n            return { ...state, [action.payload.playlistsong.id]: action.payload.playlistsong };\n        case EDIT_PLAYLISTSONG:\n            const oldPosition = state[action.payload.id]['position'];\n            const newPosition = action.payload.position;\n            let changedPositions = {};\n            if (oldPosition > newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position >= newPosition && item.position < oldPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos + 1};\n                    }\n                }\n            }\n            if (oldPosition < newPosition) {\n                for (let item of Object.values(state)) {\n                    if (item.position > oldPosition && item.position <= newPosition) {\n                        const pos = item.position;\n                        changedPositions[item.id] = { ...item, position: pos - 1};\n                    }\n                }\n            }\n            return { ...state, [action.payload.id]: action.payload, ...changedPositions };\n        case DELETE_PLAYLISTSONG:\n            const changePosition = Object.values(state).filter(p => p.position > action.payload.position);\n            changePosition.forEach((song) => {\n                song.position = song.position - 1;\n            });\n            delete state[action.payload.playlistsong.id];\n            return { ...state };\n        case DELETE_VERSION:\n            for (const id in state) {\n                if (state[id].version === action.payload.version.id) {\n                    state[id].version = null;\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        case DELETE_BOUNCE:\n            for (const id in state) {\n                if (state[id].bounce === action.payload.bounce.id) {\n                    state[id].bounce = null;\n                }\n            }\n            return { ...state };\n        default:\n            return state;\n\n    }\n\n};","import { FETCH_BAND, FETCH_BANDS, EDIT_BAND, DELETE_BAND, CREATE_BAND, CREATE_TIER, DELETE_TIER, CREATE_PLAYLIST, DELETE_PLAYLIST, SIGN_OUT } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n        case FETCH_BAND:\n            return { ...state, [action.payload.id]: action.payload, currentBand: action.payload };\n        case FETCH_BANDS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case CREATE_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_BAND:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_BAND:\n            delete state[action.payload.id];\n            return { ...state };\n        case CREATE_TIER:\n            const { currentBand } = state;\n            currentBand.tiers.push(action.payload.id);\n            return { ...state, [currentBand.id]: currentBand, currentBand };\n        case DELETE_TIER:\n            const band = state.currentBand;\n            const newTiers = band.tiers.filter(id => id !== action.payload.id);\n            band.tiers = newTiers;\n            return { ...state, [band.id]: band, currentBand: band };\n        case CREATE_PLAYLIST:\n            const currentBandP = state.currentBand;\n            currentBandP.playlists.push(action.payload.id);\n            return { ...state, [currentBandP.id]: currentBandP, currentBand: currentBandP };\n        case DELETE_PLAYLIST:\n            const bandP = state.currentBand;\n            const newPlaylists = bandP.playlists.filter(id => id !== action.payload.id);\n            bandP.playlists = newPlaylists;\n            return { ...state, [bandP.id]: bandP, currentBand: bandP };\n        case SIGN_OUT:\n            return _.omit(state, state.currentBand);\n        default:\n            return state;\n\n    }\n\n};","import { ERROR } from '../actions/types';\n\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case ERROR:\n            if (action.payload) {\n                console.log(action.payload);\n            }\n            return { error: action.payload }\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\n\n\nconst initialState = {};\n\nconst token = localStorage.getItem('token');\n\nif (token) {\n    initialState.auth = { isSignedIn: true };\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}